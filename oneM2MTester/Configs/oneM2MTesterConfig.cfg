[MAIN_CONTROLLER]
# The options herein control the behavior of MC.
TCPPort := 13577
KillTimer := 10.0

[LOGGING]
LogFile 			:= "../logs/%e.%h-%r.%s"
FileMask 			:= LOG_ALL | DEBUG | ERROR | USER | WARNING | TESTCASE | STATISTICS | MATCHING |VERDICTOP_SETVERDICT
ConsoleMask 		:= TESTCASE | PORTEVENT | ERROR | STATISTICS | MATCHING | VERDICTOP_SETVERDICT | DEBUG
LogSourceInfo 	    := Yes
AppendFile 		    := No
TimeStampFormat 	:= DateTime
LogEventTypes 	    := Yes
SourceInfoFormat 	:= Single
LogEntityName 	    := Yes

[TESTPORT_PARAMETERS]
//mcaPort 
*.mcaPort.defaultListeningPort				:= "0"               // Allow to use specific port number      
*.mcaPort.map_behavior						:= "connect"  
*.mcaPort.RemotePort						:= "7579"	  		 //SUT - Port
*.mcaPort.RemoteHost						:= "192.168.0.153"   //SUT - IP    
*.mcaPort.lazy_conn_id_handling				:= "yes"  
*.mcaPort.debug                             := "yes"
//*.mcaPort.map_protocol                    := "udp"

//mccPort
*.mccPort.defaultListeningPort				:= "0"  
*.mccPort.map_behavior						:= "connect"  
*.mccPort.RemotePort						:= "7579"	  		 //SUT - Port
*.mccPort.RemoteHost						:= "192.168.0.153"   //SUT - IP    
*.mccPort.lazy_conn_id_handling				:= "yes"  
*.mccPort.debug                             := "yes"
//*.mcaPort.map_protocol                    := "udp"

//utPort, this port is used to perform the AE testing.
*.utPort.defaultListeningPort				:= "0"  
*.utPort.map_behavior						:= "connect"  
*.utPort.RemotePort							:= "3000"	  		 //UpperTester - Port
*.utPort.RemoteHost							:= "192.168.0.153"    //UpperTester - IP    
*.utPort.lazy_conn_id_handling				:= "yes"  
*.utPort.debug                              := "yes"  

//mcaPortIn 
*.mcaPortIn.defaultListeningPort			:= "62590"            // Allow to use specific port number      
*.mcaPortIn.map_behavior					:= "listen"   
*.mcaPortIn.lazy_conn_id_handling			:= "yes"  
*.mcaPortIn.debug                           := "yes"
*.mcaPort.map_protocol                      := "tcp" 

[MODULE_PARAMETERS]
	
#OneM2M_Constants.tsp_connectionParams 		:=  {"{SUT-SERVER-IP}", Integer_port, "TEST-SYSTEM-IP", Integer_port};
OneM2M_Constants.tsp_connectionParams 		:=  {"192.168.0.153", 7579, "192.168.35.58", 27689};

OneM2M_Pixits.PX_SERIALIZATION 				:= "JSON";
OneM2M_Pixits.PX_PROTOCOL_BINDING 			:= "HTTP";

OneM2M_Pixits.PX_RUN_POSTAMBLE 						:= true;
    
# SUT M2M-Service Provider ID
OneM2M_Pixits.PX_SP_ID								:= "//mobiusIoT.re.kr";
   
# Primtive scope could only either be 'e_cseRelative', 'e_spRelative', or 'e_absolute'
OneM2M_Pixits.PX_PRIMITIVE_SCOPE					:= e_cseRelative;
    
# Addressing format can only either be 'e_hierarchical' or 'e_nonHierarchical'
OneM2M_Pixits.PX_ADDRESSING_METHOD 					:= e_hierarchical;

OneM2M_Pics.PICS_STRUCTURED_CSE_RELATIVE_RESOURCE_ID_FORMAT 	:= true;	  //hierarcahial CSE-relative resource format support declaration
// OneM2M_Pics.PICS_UNSTRUCTURED_CSE_RELATIVE_RESOURCE_ID_FORMAT 	:= false; //set to 'true' only when 'PX_ADDRESSING_METHOD' is set to 'e_nonHierarchical'
    	
OneM2M_Pics.PICS_ACP_SUPPORT 									:= true;
OneM2M_Pics.PICS_IN_CSE 										:= true;	

# Checking utTrigger port for the automated testing
OneM2M_Pixits.PX_UT_IMPLEMENTED := false;
       
# Parameter settings for the SUT
OneM2M_Pixits.PX_CSE_ID						:= "/Mobius";// SP-relative_CSE-ID;
OneM2M_Pixits.PX_CSE_NAME					:= "Mobius"; // CSEBase resource name
OneM2M_Pixits.PX_CSE_RESOURCE_ID			:= "Mobius"; // CSE-relative_CSE-ID;
    
OneM2M_Pixits.PX_SUT_ADDRESS				:= "192.168.35.34:7579";
OneM2M_Pixits.PX_AE1_ADDRESS				:= "{AE_01_reachable_address}";
OneM2M_Pixits.PX_AE2_ADDRESS				:= "{AE_02_reachable_address}";
	
OneM2M_Pixits.PX_AE1_ID_STEM				:= "C_AE_ID_STEM_1"; // AE-ID-STEM has to start 'C' or 'S'
OneM2M_Pixits.PX_AE2_ID_STEM				:= "C_AE_ID_STEM_2"; // AE-ID-STEM has to start 'C' or 'S'
OneM2M_Pixits.PX_APP_ID 					:= "0.2.481.2.0001.001.62590";
    
OneM2M_Pixits.PX_RESOURCES_TO_BE_DELETED 	:= {"MyAe"}; // {MyAe, MyAe2, ...}
OneM2M_Pixits.PX_RESOURCE_TO_BE_DELETED 	:= "MyAe";
    
OneM2M_Pixits.PX_SUPER_AE_ID				:= "/Superman"; // Superuser, CSE Minimum Provisioning
OneM2M_Pixits.PX_SUPER_CSE_ID				:= "/Superman"; 
OneM2M_Pixits.PX_ACOR	 					:= {"Mobius", "/Mobius", "C_AE_ID_STEM_1", "C_AE_ID_STEM_2"}; 
// "all" access control policy is used for a few testcases: 
// TC_CSE_SEC_ACP_004 series, TC_CSE_DMR_UPD_016_CSR_ET, TC_CSE_DMR_UPD_016_CSR_RR

# These parameters are used for <remoteCSE>
OneM2M_Pixits.PX_CSE1_ADDRESS				:= "192.168.35.34:7579";
OneM2M_Pixits.PX_CSE1_NAME 					:= "Mobius";
OneM2M_Pixits.PX_CSE1_ID 					:= "/Mobius";

# supportedResourceTypes check of SUT
OneM2M_Pixits.PX_SRT := {int1, int2, int3, int4, int5, int9, int10, int13, int14, int16, int17, int23, int24, int27, int29, int30};
OneM2M_Pixits.PX_POA := {"http://192.168.20.1:7579", "mqtt://192.168.20.1:1883/keti", "coap://192.168.20.1:7579", "ws://192.168.20.1:7577"};

# Parameter that are not used for the moment (Designed for test location management)
OneM2M_Pixits.PX_IUT_IS_ASN_CSE				:= false; //default //set it to true when running Device-based location testcases 	
OneM2M_Pixits.PX_IUT_IS_MN_CSE				:= false; //default //set it to true when running Share-based location testcases
OneM2M_Pixits.PX_IS_LOC_CONTAINER			:= false;
OneM2M_Pixits.PX_XML_NAMESPACE 				:= "m2m=""http://www.onem2m.org/xml/protocols""";
OneM2M_Pixits.PX_LOCATION_TARGET_ID			:= "{LOCATION-TARGET-ID}"; //SUPPOSE TO BE RECEIVED FROM LOCATION SERVER
OneM2M_Pixits.PX_LOCATION_SERVER_ADDRESS	:= "{LOCATION-SERVER-ADDRESS}";	
OneM2M_Pixits.PX_LOCATION_UPDATE_PERIOD		:= "PT10M10S" ;//10 Minute 10 Seconds
OneM2M_Pixits.PX_LOCATION_CONTAINER_NAME	:= "myLocContainer";
