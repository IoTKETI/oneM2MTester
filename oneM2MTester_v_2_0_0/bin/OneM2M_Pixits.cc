// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for oneM2MTester (martin@ubuntu) on Wed May 31 13:52:13 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "OneM2M_Pixits.hh"

namespace OneM2M__Pixits {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean set_module_param(Module_Param& param);
static void log_module_param();

/* Literal string constants */

static const CHARSTRING cs_10(0, NULL),
cs_13('*'),
cs_1(6, "/MyAcp"),
cs_0(8, "/ae_test"),
cs_3(14, "127.0.0.1:3131"),
cs_4(14, "127.0.0.1:3132"),
cs_5(14, "127.0.0.1:3141"),
cs_2(14, "127.0.0.1:8080"),
cs_15(4, "HTTP"),
cs_18(8, "PT10M10S"),
cs_20(7, "VALUE_1"),
cs_14(3, "XML"),
cs_11(11, "admin:admin"),
cs_8(5, "cseId"),
cs_7(7, "cseName"),
cs_9(13, "cseResourceId"),
cs_6(41, "m2m=\"http://www.onem2m.org/xml/protocols\""),
cs_12(7, "myAppId"),
cs_19(13, "myLoContainer"),
cs_17(25, "{LOCATION-SERVER-ADDRESS}"),
cs_16(20, "{LOCATION-TARGET-ID}");
static const unsigned char module_checksum[] = { 0xf8, 0xdb, 0xb9, 0x0d, 0xb5, 0xc2, 0x77, 0x86, 0xbd, 0x1e, 0xb4, 0x36, 0x45, 0x5b, 0x46, 0x20 };

/* Global variable definitions */

static BOOLEAN modulepar_PX__DELETE__CREATED__RESOURCES;
const BOOLEAN& PX__DELETE__CREATED__RESOURCES = modulepar_PX__DELETE__CREATED__RESOURCES;
static UNIVERSAL_CHARSTRING modulepar_PX__RESOURCE__TO__BE__DELETED;
const UNIVERSAL_CHARSTRING& PX__RESOURCE__TO__BE__DELETED = modulepar_PX__RESOURCE__TO__BE__DELETED;
static XSD::IDREFS modulepar_PX__RESOURCES__TO__BE__DELETED;
const XSD::IDREFS& PX__RESOURCES__TO__BE__DELETED = modulepar_PX__RESOURCES__TO__BE__DELETED;
static CHARSTRING modulepar_PX__SUT__ADDRESS;
const CHARSTRING& PX__SUT__ADDRESS = modulepar_PX__SUT__ADDRESS;
static CHARSTRING modulepar_PX__AE1__ADDRESS;
const CHARSTRING& PX__AE1__ADDRESS = modulepar_PX__AE1__ADDRESS;
static CHARSTRING modulepar_PX__AE2__ADDRESS;
const CHARSTRING& PX__AE2__ADDRESS = modulepar_PX__AE2__ADDRESS;
static CHARSTRING modulepar_PX__CSE1__ADDRESS;
const CHARSTRING& PX__CSE1__ADDRESS = modulepar_PX__CSE1__ADDRESS;
static CHARSTRING modulepar_PX__XML__NAMESPACE;
const CHARSTRING& PX__XML__NAMESPACE = modulepar_PX__XML__NAMESPACE;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__NAME;
const UNIVERSAL_CHARSTRING& PX__CSE__NAME = modulepar_PX__CSE__NAME;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__ID;
const UNIVERSAL_CHARSTRING& PX__CSE__ID = modulepar_PX__CSE__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__RESOURCE__ID;
const UNIVERSAL_CHARSTRING& PX__CSE__RESOURCE__ID = modulepar_PX__CSE__RESOURCE__ID;
static BOOLEAN modulepar_PX__UNSTRUCTURED;
const BOOLEAN& PX__UNSTRUCTURED = modulepar_PX__UNSTRUCTURED;
static UNIVERSAL_CHARSTRING modulepar_PX__AE1__ID__STEM;
const UNIVERSAL_CHARSTRING& PX__AE1__ID__STEM = modulepar_PX__AE1__ID__STEM;
static UNIVERSAL_CHARSTRING modulepar_PX__AE2__ID__STEM;
const UNIVERSAL_CHARSTRING& PX__AE2__ID__STEM = modulepar_PX__AE2__ID__STEM;
static UNIVERSAL_CHARSTRING modulepar_PX__SUPER__USER;
const UNIVERSAL_CHARSTRING& PX__SUPER__USER = modulepar_PX__SUPER__USER;
static UNIVERSAL_CHARSTRING modulepar_PX__APP__ID;
const UNIVERSAL_CHARSTRING& PX__APP__ID = modulepar_PX__APP__ID;
static BOOLEAN modulepar_PX__RUN__POSTAMBLE;
const BOOLEAN& PX__RUN__POSTAMBLE = modulepar_PX__RUN__POSTAMBLE;
static OneM2M__Types::ListOfURIs modulepar_PX__ACOR;
const OneM2M__Types::ListOfURIs& PX__ACOR = modulepar_PX__ACOR;
static OneM2M__Types::AddressingFormat modulepar_PX__ADDRESSING__FORMAT;
const OneM2M__Types::AddressingFormat& PX__ADDRESSING__FORMAT = modulepar_PX__ADDRESSING__FORMAT;
static CHARSTRING modulepar_PX__SERIALIZATION;
const CHARSTRING& PX__SERIALIZATION = modulepar_PX__SERIALIZATION;
static CHARSTRING modulepar_PX__PROTOCOL__BINDING;
const CHARSTRING& PX__PROTOCOL__BINDING = modulepar_PX__PROTOCOL__BINDING;
static BOOLEAN modulepar_PX__FROM__IS__AE__ID;
const BOOLEAN& PX__FROM__IS__AE__ID = modulepar_PX__FROM__IS__AE__ID;
static BOOLEAN modulepar_PX__IUT__IS__ASN__CSE;
const BOOLEAN& PX__IUT__IS__ASN__CSE = modulepar_PX__IUT__IS__ASN__CSE;
static BOOLEAN modulepar_PX__IUT__IS__MN__CSE;
const BOOLEAN& PX__IUT__IS__MN__CSE = modulepar_PX__IUT__IS__MN__CSE;
static UNIVERSAL_CHARSTRING modulepar_PX__LOCATION__TARGET__ID;
const UNIVERSAL_CHARSTRING& PX__LOCATION__TARGET__ID = modulepar_PX__LOCATION__TARGET__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__LOCATION__SERVER__ADDRESS;
const UNIVERSAL_CHARSTRING& PX__LOCATION__SERVER__ADDRESS = modulepar_PX__LOCATION__SERVER__ADDRESS;
static CHARSTRING modulepar_PX__LOCATION__UPDATE__PERIOD;
const CHARSTRING& PX__LOCATION__UPDATE__PERIOD = modulepar_PX__LOCATION__UPDATE__PERIOD;
static CHARSTRING modulepar_PX__LOCATION__CONTAINER__NAME;
const CHARSTRING& PX__LOCATION__CONTAINER__NAME = modulepar_PX__LOCATION__CONTAINER__NAME;
static OneM2M__Types::Labels modulepar_PX__LABELS;
const OneM2M__Types::Labels& PX__LABELS = modulepar_PX__LABELS;
static BOOLEAN modulepar_PX__IS__LOC__CONTAINER;
const BOOLEAN& PX__IS__LOC__CONTAINER = modulepar_PX__IS__LOC__CONTAINER;
static const size_t num_namespaces = 1;
static const namespace_t xml_namespaces[num_namespaces+1] = {
  { NULL, NULL },
  { "", "" }
};

TTCN_Module module_object("OneM2M_Pixits", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 1LU, xml_namespaces, post_init_module, set_module_param, NULL, log_module_param, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_1,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("OneM2M_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Pixits");
OneM2M__Types::module_object.pre_init_module();
current_location.update_lineno(21);
/* OneM2M_Pixits.ttcn, line 21 */
modulepar_PX__DELETE__CREATED__RESOURCES = TRUE;
current_location.update_lineno(23);
/* OneM2M_Pixits.ttcn, line 23 */
modulepar_PX__RESOURCE__TO__BE__DELETED = cs_0;
current_location.update_lineno(25);
/* OneM2M_Pixits.ttcn, line 25 */
modulepar_PX__RESOURCES__TO__BE__DELETED.set_size(2);
modulepar_PX__RESOURCES__TO__BE__DELETED[0] = cs_0;
modulepar_PX__RESOURCES__TO__BE__DELETED[1] = cs_1;
current_location.update_lineno(27);
/* OneM2M_Pixits.ttcn, line 27 */
modulepar_PX__SUT__ADDRESS = cs_2;
current_location.update_lineno(29);
/* OneM2M_Pixits.ttcn, line 29 */
modulepar_PX__AE1__ADDRESS = cs_3;
current_location.update_lineno(31);
/* OneM2M_Pixits.ttcn, line 31 */
modulepar_PX__AE2__ADDRESS = cs_4;
current_location.update_lineno(33);
/* OneM2M_Pixits.ttcn, line 33 */
modulepar_PX__CSE1__ADDRESS = cs_5;
current_location.update_lineno(35);
/* OneM2M_Pixits.ttcn, line 35 */
modulepar_PX__XML__NAMESPACE = cs_6;
current_location.update_lineno(37);
/* OneM2M_Pixits.ttcn, line 37 */
modulepar_PX__CSE__NAME = cs_7;
current_location.update_lineno(39);
/* OneM2M_Pixits.ttcn, line 39 */
modulepar_PX__CSE__ID = cs_8;
current_location.update_lineno(41);
/* OneM2M_Pixits.ttcn, line 41 */
modulepar_PX__CSE__RESOURCE__ID = cs_9;
current_location.update_lineno(43);
/* OneM2M_Pixits.ttcn, line 43 */
modulepar_PX__UNSTRUCTURED = FALSE;
current_location.update_lineno(45);
/* OneM2M_Pixits.ttcn, line 45 */
modulepar_PX__AE1__ID__STEM = cs_10;
current_location.update_lineno(47);
/* OneM2M_Pixits.ttcn, line 47 */
modulepar_PX__AE2__ID__STEM = cs_10;
current_location.update_lineno(49);
/* OneM2M_Pixits.ttcn, line 49 */
modulepar_PX__SUPER__USER = cs_11;
current_location.update_lineno(51);
/* OneM2M_Pixits.ttcn, line 51 */
modulepar_PX__APP__ID = cs_12;
current_location.update_lineno(53);
/* OneM2M_Pixits.ttcn, line 53 */
modulepar_PX__RUN__POSTAMBLE = TRUE;
current_location.update_lineno(55);
/* OneM2M_Pixits.ttcn, line 55 */
modulepar_PX__ACOR.set_size(1);
modulepar_PX__ACOR[0] = cs_13;
current_location.update_lineno(57);
/* OneM2M_Pixits.ttcn, line 57 */
modulepar_PX__ADDRESSING__FORMAT = OneM2M__Types::AddressingFormat::e__cseRelative;
current_location.update_lineno(59);
/* OneM2M_Pixits.ttcn, line 59 */
modulepar_PX__SERIALIZATION = cs_14;
current_location.update_lineno(61);
/* OneM2M_Pixits.ttcn, line 61 */
modulepar_PX__PROTOCOL__BINDING = cs_15;
current_location.update_lineno(63);
/* OneM2M_Pixits.ttcn, line 63 */
modulepar_PX__FROM__IS__AE__ID = TRUE;
current_location.update_lineno(67);
/* OneM2M_Pixits.ttcn, line 67 */
modulepar_PX__IUT__IS__ASN__CSE = FALSE;
current_location.update_lineno(68);
/* OneM2M_Pixits.ttcn, line 68 */
modulepar_PX__IUT__IS__MN__CSE = FALSE;
current_location.update_lineno(71);
/* OneM2M_Pixits.ttcn, line 71 */
modulepar_PX__LOCATION__TARGET__ID = cs_16;
current_location.update_lineno(72);
/* OneM2M_Pixits.ttcn, line 72 */
modulepar_PX__LOCATION__SERVER__ADDRESS = cs_17;
current_location.update_lineno(74);
/* OneM2M_Pixits.ttcn, line 74 */
modulepar_PX__LOCATION__UPDATE__PERIOD = cs_18;
current_location.update_lineno(75);
/* OneM2M_Pixits.ttcn, line 75 */
modulepar_PX__LOCATION__CONTAINER__NAME = cs_19;
current_location.update_lineno(77);
/* OneM2M_Pixits.ttcn, line 77 */
modulepar_PX__LABELS.set_size(1);
modulepar_PX__LABELS[0] = cs_20;
current_location.update_lineno(78);
/* OneM2M_Pixits.ttcn, line 78 */
modulepar_PX__IS__LOC__CONTAINER = FALSE;
}

static void post_init_module()
{
TTCN_Location current_location("OneM2M_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Pixits");
OneM2M__Types::module_object.post_init_module();
}

static boolean set_module_param(Module_Param& param)
{
const char* const par_name = param.get_id()->get_current_name();
if (!strcmp(par_name, "PX_DELETE_CREATED_RESOURCES")) {
modulepar_PX__DELETE__CREATED__RESOURCES.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RESOURCE_TO_BE_DELETED")) {
modulepar_PX__RESOURCE__TO__BE__DELETED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RESOURCES_TO_BE_DELETED")) {
modulepar_PX__RESOURCES__TO__BE__DELETED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SUT_ADDRESS")) {
modulepar_PX__SUT__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE1_ADDRESS")) {
modulepar_PX__AE1__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE2_ADDRESS")) {
modulepar_PX__AE2__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE1_ADDRESS")) {
modulepar_PX__CSE1__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_XML_NAMESPACE")) {
modulepar_PX__XML__NAMESPACE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_NAME")) {
modulepar_PX__CSE__NAME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_ID")) {
modulepar_PX__CSE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_RESOURCE_ID")) {
modulepar_PX__CSE__RESOURCE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_UNSTRUCTURED")) {
modulepar_PX__UNSTRUCTURED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE1_ID_STEM")) {
modulepar_PX__AE1__ID__STEM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE2_ID_STEM")) {
modulepar_PX__AE2__ID__STEM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SUPER_USER")) {
modulepar_PX__SUPER__USER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_APP_ID")) {
modulepar_PX__APP__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RUN_POSTAMBLE")) {
modulepar_PX__RUN__POSTAMBLE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_ACOR")) {
modulepar_PX__ACOR.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_ADDRESSING_FORMAT")) {
modulepar_PX__ADDRESSING__FORMAT.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SERIALIZATION")) {
modulepar_PX__SERIALIZATION.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_PROTOCOL_BINDING")) {
modulepar_PX__PROTOCOL__BINDING.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_FROM_IS_AE_ID")) {
modulepar_PX__FROM__IS__AE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IUT_IS_ASN_CSE")) {
modulepar_PX__IUT__IS__ASN__CSE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IUT_IS_MN_CSE")) {
modulepar_PX__IUT__IS__MN__CSE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_TARGET_ID")) {
modulepar_PX__LOCATION__TARGET__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_SERVER_ADDRESS")) {
modulepar_PX__LOCATION__SERVER__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_UPDATE_PERIOD")) {
modulepar_PX__LOCATION__UPDATE__PERIOD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_CONTAINER_NAME")) {
modulepar_PX__LOCATION__CONTAINER__NAME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LABELS")) {
modulepar_PX__LABELS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IS_LOC_CONTAINER")) {
modulepar_PX__IS__LOC__CONTAINER.set_param(param);
return TRUE;
} else return FALSE;
}

static void log_module_param()
{
TTCN_Logger::log_event_str("PX_DELETE_CREATED_RESOURCES := ");
PX__DELETE__CREATED__RESOURCES.log();
TTCN_Logger::log_event_str(", PX_RESOURCE_TO_BE_DELETED := ");
PX__RESOURCE__TO__BE__DELETED.log();
TTCN_Logger::log_event_str(", PX_RESOURCES_TO_BE_DELETED := ");
PX__RESOURCES__TO__BE__DELETED.log();
TTCN_Logger::log_event_str(", PX_SUT_ADDRESS := ");
PX__SUT__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_AE1_ADDRESS := ");
PX__AE1__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_AE2_ADDRESS := ");
PX__AE2__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_CSE1_ADDRESS := ");
PX__CSE1__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_XML_NAMESPACE := ");
PX__XML__NAMESPACE.log();
TTCN_Logger::log_event_str(", PX_CSE_NAME := ");
PX__CSE__NAME.log();
TTCN_Logger::log_event_str(", PX_CSE_ID := ");
PX__CSE__ID.log();
TTCN_Logger::log_event_str(", PX_CSE_RESOURCE_ID := ");
PX__CSE__RESOURCE__ID.log();
TTCN_Logger::log_event_str(", PX_UNSTRUCTURED := ");
PX__UNSTRUCTURED.log();
TTCN_Logger::log_event_str(", PX_AE1_ID_STEM := ");
PX__AE1__ID__STEM.log();
TTCN_Logger::log_event_str(", PX_AE2_ID_STEM := ");
PX__AE2__ID__STEM.log();
TTCN_Logger::log_event_str(", PX_SUPER_USER := ");
PX__SUPER__USER.log();
TTCN_Logger::log_event_str(", PX_APP_ID := ");
PX__APP__ID.log();
TTCN_Logger::log_event_str(", PX_RUN_POSTAMBLE := ");
PX__RUN__POSTAMBLE.log();
TTCN_Logger::log_event_str(", PX_ACOR := ");
PX__ACOR.log();
TTCN_Logger::log_event_str(", PX_ADDRESSING_FORMAT := ");
PX__ADDRESSING__FORMAT.log();
TTCN_Logger::log_event_str(", PX_SERIALIZATION := ");
PX__SERIALIZATION.log();
TTCN_Logger::log_event_str(", PX_PROTOCOL_BINDING := ");
PX__PROTOCOL__BINDING.log();
TTCN_Logger::log_event_str(", PX_FROM_IS_AE_ID := ");
PX__FROM__IS__AE__ID.log();
TTCN_Logger::log_event_str(", PX_IUT_IS_ASN_CSE := ");
PX__IUT__IS__ASN__CSE.log();
TTCN_Logger::log_event_str(", PX_IUT_IS_MN_CSE := ");
PX__IUT__IS__MN__CSE.log();
TTCN_Logger::log_event_str(", PX_LOCATION_TARGET_ID := ");
PX__LOCATION__TARGET__ID.log();
TTCN_Logger::log_event_str(", PX_LOCATION_SERVER_ADDRESS := ");
PX__LOCATION__SERVER__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_LOCATION_UPDATE_PERIOD := ");
PX__LOCATION__UPDATE__PERIOD.log();
TTCN_Logger::log_event_str(", PX_LOCATION_CONTAINER_NAME := ");
PX__LOCATION__CONTAINER__NAME.log();
TTCN_Logger::log_event_str(", PX_LABELS := ");
PX__LABELS.log();
TTCN_Logger::log_event_str(", PX_IS_LOC_CONTAINER := ");
PX__IS__LOC__CONTAINER.log();
}


} /* end of namespace */
