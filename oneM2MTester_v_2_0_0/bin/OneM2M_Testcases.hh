// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for oneM2MTester (martin@ubuntu) on Wed May 31 13:52:13 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef OneM2M__Testcases_HH
#define OneM2M__Testcases_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include <TTCN3.hh>
#include "OneM2M_Functions.hh"

#if TTCN3_VERSION != 60100
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.\
 Run make clean and rebuild the project if the version of the compiler changed recently.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace OneM2M__Testcases {

/* Function prototypes */

extern verdicttype testcase_TC__DELETE__RESOURCES(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__001(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__003(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__004(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__005(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__006(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__008(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__REG__BV__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__001__03(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__001(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::ResultContent& p__resultContent);
extern void start_f__CSE__DMR__BV__001(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::ResultContent& p__resultContent);
extern verdicttype testcase_TC__CSE__DMR__BV__002__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__002__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__002__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__002__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__002__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__002__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__002(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern void start_f__CSE__DMR__BV__002(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__BV__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__003__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__003__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__003__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__003__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__003__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__003(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern void start_f__CSE__DMR__BV__003(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__004__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__004__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__004__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__004(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern void start_f__CSE__DMR__BV__004(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__BV__005__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__005__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__005__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__005__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__005__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__005__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__005(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern void start_f__CSE__DMR__BV__005(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__BV__006__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__006__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__006__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__006__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__006__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__BV__006__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__BV__006(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern void start_f__CSE__DMR__BV__006(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse, const OneM2M__Types::ResourceType_template& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__childRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__001__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__CRE__BV__001(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__TypesAndValues::RequestPrimitiveList& p__requestPrimitiveList, const COMPONENT& p__notifyHandler);
extern void start_f__CSE__DMR__CRE__BV__001(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__TypesAndValues::RequestPrimitiveList& p__requestPrimitiveList, const COMPONENT& p__notifyHandler);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__002__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__CRE__BV__002(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__CRE__BV__002(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__003__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__003(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__CRE__BV__003(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__004__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__004(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__CRE__BV__004(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__005__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__005__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__005__03(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__CRE__BV__005(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AttributeAux& p__invalidAttribute);
extern void start_f__CSE__DMR__CRE__BV__005(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AttributeAux& p__invalidAttribute);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__006__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__006__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__006__03(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__CRE__BV__006(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__CRE__BV__006(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__008(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BI__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BI__011(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__012__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__012(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__CRE__BV__012(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__013__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__013(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__CRE__BV__013(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__014__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__014(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__CRE__BV__014(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__07(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__08(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__09(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__10(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__12(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__13(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__14(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__15(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__16(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__17(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__18(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__19(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__20(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__21(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__22(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__23(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__24(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__25(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__26(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__27(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__28(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__29(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__30(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__015__31(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__015(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AttributeAux& p__optionalAttribute);
extern void start_f__CSE__DMR__CRE__BV__015(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AttributeAux& p__optionalAttribute);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__07(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__016__08(boolean has_timer, double timer_value);
extern void f__CSE__DMR__CRE__BV__016(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__requestAnnc);
extern void start_f__CSE__DMR__CRE__BV__016(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__requestAnnc);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__CRE__BV__017__07(boolean has_timer, double timer_value);
extern OneM2M__Types::RequestPrimitive f__CSE__DMR__CRE__BV__017(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__requestAnnc);
extern void start_f__CSE__DMR__CRE__BV__017(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__requestAnnc);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__001__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__RET__BV__001(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__001(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__003__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__003(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__003(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__004__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__004(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__004(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__005__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__005(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__005(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__006__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__006(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__006(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__007__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__007(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__007(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__008__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__008(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__008(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__011(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__012(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__013__14(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__RET__BV__013(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__013(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__014__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__014(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__014(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__015__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__015(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__015(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__016__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__016(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__016(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BV__017__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BV__017(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__DMR__RET__BV__017(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__018__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__018(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__018(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__RET__BO__019__14(boolean has_timer, double timer_value);
extern void f__CSE__DMR__RET__BO__019(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__DMR__RET__BO__019(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__001__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__UPD__BV__001(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern void start_f__CSE__DMR__UPD__BV__001(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__002__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__UPD__BV__002(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern void start_f__CSE__DMR__UPD__BV__002(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__003__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__UPD__BV__003(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern void start_f__CSE__DMR__UPD__BV__003(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__004__06(boolean has_timer, double timer_value);
extern OneM2M__Types::ResponsePrimitive f__CSE__DMR__UPD__BV__004(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern void start_f__CSE__DMR__UPD__BV__004(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__005__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__UPD__BI__005(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& , const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern void start_f__CSE__DMR__UPD__BI__005(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__006__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__UPD__BO__006(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern void start_f__CSE__DMR__UPD__BO__006(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__007__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__UPD__BO__007(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern void start_f__CSE__DMR__UPD__BO__007(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BO__008__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__UPD__BO__008(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern void start_f__CSE__DMR__UPD__BO__008(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::RequestPrimitive_template& p__updateRequestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__nullFields);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BV__011(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__012(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__UPD__BI__013(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__001__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__DEL__BV__001(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive);
extern void start_f__CSE__DMR__DEL__BV__001(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__002__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__DEL__BV__002(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive);
extern void start_f__CSE__DMR__DEL__BV__002(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__004__06(boolean has_timer, double timer_value);
extern void f__CSE__DMR__DEL__BV__004(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::ResourceType& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitiveChildResource);
extern void start_f__CSE__DMR__DEL__BV__004(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::ResourceType& p__childResourceType, const OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitiveChildResource);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__005(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__006(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BO__008(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BV__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__DMR__DEL__BO__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__001(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BO__003(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BO__004(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BI__005(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__006(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__008(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__009__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__009__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__009__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__012(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__LOC__BV__013(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__001(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__003(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__004(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__005(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__006(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__008(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__011(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__012(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__013(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__014(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__015(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__016(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__017(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__018__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__018__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__018__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__018__04(boolean has_timer, double timer_value);
extern void f__CSE__GMG__BV__018(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__GMG__BV__018(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__GMG__BO__019__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__019__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__019__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__019__04(boolean has_timer, double timer_value);
extern void f__CSE__GMG__BO__019(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__accessControlOperations);
extern void start_f__CSE__GMG__BO__019(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__accessControlOperations);
extern verdicttype testcase_TC__CSE__GMG__BV__020__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__020__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__020__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__020__04(boolean has_timer, double timer_value);
extern void f__CSE__GMG__BV__020(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__GMG__BV__020(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__GMG__BO__021__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__021__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__021__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BO__021__04(boolean has_timer, double timer_value);
extern void f__CSE__GMG__BO__021(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__accessControlOperations);
extern void start_f__CSE__GMG__BO__021(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__accessControlOperations);
extern verdicttype testcase_TC__CSE__GMG__BV__022__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__022__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__022__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__022__04(boolean has_timer, double timer_value);
extern void f__CSE__GMG__BV__022(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern void start_f__CSE__GMG__BV__022(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__contentResponse);
extern verdicttype testcase_TC__CSE__GMG__BV__023(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__GMG__BV__024(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__001__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__001__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__003(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__004(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__005(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__006(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__007(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__008(boolean has_timer, double timer_value);
extern void f__CSE__SUB__BV__008(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent);
extern void start_f__CSE__SUB__BV__008(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent);
extern verdicttype testcase_TC__CSE__SUB__BV__009(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__010(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__011(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__012(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__013(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__014(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__015(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__016(boolean has_timer, double timer_value);
extern void f__CSE__SUB__BV__016();
extern void start_f__CSE__SUB__BV__016(const COMPONENT& component_reference);
extern verdicttype testcase_TC__CSE__SUB__BV__017(boolean has_timer, double timer_value);
extern void f__CSE__SUB__BV__017(const UNIVERSAL_CHARSTRING& p__subscriptionReference);
extern void start_f__CSE__SUB__BV__017(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__subscriptionReference);
extern verdicttype testcase_TC__CSE__SUB__BV__018(boolean has_timer, double timer_value);
extern void f__CSE__SUB__BV__018(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent, const INTEGER& p__numberOfAggregatedNotification);
extern void start_f__CSE__SUB__BV__018(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent, const INTEGER& p__numberOfAggregatedNotification);
extern verdicttype testcase_TC__CSE__SUB__BV__019(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SUB__BV__020(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__001(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__002(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__003__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__003__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__003__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__003__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BV__003(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__SEC__ACP__BV__003(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__004__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__004__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__004__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__004__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BV__004(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__SEC__ACP__BV__004(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__011__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__011__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__011__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__011__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BV__011(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__SEC__ACP__BV__011(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__012__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__012__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__012__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__012__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BO__012(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__acor);
extern void start_f__CSE__SEC__ACP__BO__012(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AccessControlOperations& p__acor);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__013__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__013__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__013__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BO__013__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BO__013(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__SEC__ACP__BO__013(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__014__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__014__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__014__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__014__04(boolean has_timer, double timer_value);
extern void f__CSE__SEC__ACP__BV__014(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern void start_f__CSE__SEC__ACP__BV__014(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__015(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CSE__SEC__ACP__BV__016(boolean has_timer, double timer_value);

/* Global variable declarations */

extern const OneM2M__Types::AttributeAux__list_template& f__CSE__DMR__UPD__BV__003_p__nullFields_defval;
extern const OneM2M__Types::AttributeAux__list_template& f__CSE__DMR__UPD__BV__004_p__nullFields_defval;
extern const OneM2M__Types::AttributeAux__list_template& f__CSE__DMR__UPD__BO__008_p__nullFields_defval;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
