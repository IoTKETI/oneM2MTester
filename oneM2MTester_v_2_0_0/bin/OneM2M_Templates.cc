// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for oneM2MTester (martin@ubuntu) on Wed May 31 13:52:13 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "OneM2M_Templates.hh"

namespace OneM2M__Templates {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();

/* Literal string constants */

static const CHARSTRING cs_19(0, NULL),
cs_15(9, "-m_create"),
cs_16(15, "-m_createAEAnnc"),
cs_21(12, "-m_createAcp"),
cs_22(15, "-m_createAcpAux"),
cs_20(11, "-m_createAe"),
cs_23(12, "-m_createCSE"),
cs_24(18, "-m_createContainer"),
cs_25(24, "-m_createContentInstance"),
cs_28(14, "-m_createGroup"),
cs_38(23, "-m_createLocationPolicy"),
cs_30(16, "-m_createMgmtObj"),
cs_31(13, "-m_createNode"),
cs_39(21, "-m_createNotification"),
cs_33(23, "-m_createPollingChannel"),
cs_34(17, "-m_createSchedule"),
cs_36(33, "-m_createServiceSubscribedAppRule"),
cs_37(21, "-m_createSubscription"),
cs_40(17, "-m_deleteResource"),
cs_43(23, "-m_responseNotification"),
cs_18('/'),
cs_35(17, "0 0 0,1,2 1 1 * *"),
cs_26(8, "AnyValue"),
cs_17(18, "Credential-ID:None"),
cs_0(4, "HTTP"),
cs_29(7, "MyGroup"),
cs_32(6, "NodeID"),
cs_4(14, "NotInitialized"),
cs_41(4, "PT1S"),
cs_42('a'),
cs_27(11, "admin:admin"),
cs_1(18, "m_retrieveResource"),
cs_3(40, "m_retrieveResourceAttributeContentOption"),
cs_2(35, "m_retrieveResourceAttributeOptionTo"),
cs_5(8, "m_update"),
cs_9(11, "m_updateAcp"),
cs_6(10, "m_updateAe"),
cs_7(17, "m_updateContainer"),
cs_8(23, "m_updateContentInstance"),
cs_10(13, "m_updateGroup"),
cs_14(22, "m_updateLocationPolicy"),
cs_12(22, "m_updatePollingChannel"),
cs_11(16, "m_updateSchedule"),
cs_13(20, "m_updateSubscription");
static const unsigned char module_checksum[] = { 0xc8, 0x12, 0xe5, 0x85, 0xce, 0x71, 0x75, 0x22, 0xe1, 0x41, 0xf6, 0x45, 0x89, 0x4e, 0x28, 0x6a };

/* Global variable definitions */

static OneM2M__Types::AttributeAux__list_template template_m__request_p__forcedFields_defval;
const OneM2M__Types::AttributeAux__list_template& m__request_p__forcedFields_defval = template_m__request_p__forcedFields_defval;
static OneM2M__Types::AttributeAux__list_template template_m__response_p__forcedFields_defval;
const OneM2M__Types::AttributeAux__list_template& m__response_p__forcedFields_defval = template_m__response_p__forcedFields_defval;
static OneM2M__Types::AttributeAux__list_template template_m__httpResponse_p__forcedFields_defval;
const OneM2M__Types::AttributeAux__list_template& m__httpResponse_p__forcedFields_defval = template_m__httpResponse_p__forcedFields_defval;
static OneM2M__Types::RequestPrimitive_template template_m__update;
const OneM2M__Types::RequestPrimitive_template& m__update = template_m__update;
static OneM2M__Types::RequestPrimitive_template template_m__updateAeBase;
const OneM2M__Types::RequestPrimitive_template& m__updateAeBase = template_m__updateAeBase;
static OneM2M__Types::RequestPrimitive_template template_m__updateContainerBase;
const OneM2M__Types::RequestPrimitive_template& m__updateContainerBase = template_m__updateContainerBase;
static OneM2M__Types::RequestPrimitive_template template_m__updateContentInstanceBase;
const OneM2M__Types::RequestPrimitive_template& m__updateContentInstanceBase = template_m__updateContentInstanceBase;
static OneM2M__Types::RequestPrimitive_template template_m__updateAcpBase;
const OneM2M__Types::RequestPrimitive_template& m__updateAcpBase = template_m__updateAcpBase;
static OneM2M__Types::SetOfAcrs_template template_m__updateAcpPrivileges_p__privileges_defval;
const OneM2M__Types::SetOfAcrs_template& m__updateAcpPrivileges_p__privileges_defval = template_m__updateAcpPrivileges_p__privileges_defval;
static OneM2M__Types::SetOfAcrs_template template_m__updateAcpPrivileges_p__selfPrivileges_defval;
const OneM2M__Types::SetOfAcrs_template& m__updateAcpPrivileges_p__selfPrivileges_defval = template_m__updateAcpPrivileges_p__selfPrivileges_defval;
static OneM2M__Types::RequestPrimitive_template template_m__updateGroupBase;
const OneM2M__Types::RequestPrimitive_template& m__updateGroupBase = template_m__updateGroupBase;
static OneM2M__Types::RequestPrimitive_template template_m__updateScheduleBase;
const OneM2M__Types::RequestPrimitive_template& m__updateScheduleBase = template_m__updateScheduleBase;
static OneM2M__Types::RequestPrimitive_template template_m__updatePollingChannelBase;
const OneM2M__Types::RequestPrimitive_template& m__updatePollingChannelBase = template_m__updatePollingChannelBase;
static OneM2M__Types::RequestPrimitive_template template_m__updateSubscriptionBase;
const OneM2M__Types::RequestPrimitive_template& m__updateSubscriptionBase = template_m__updateSubscriptionBase;
static OneM2M__Types::RequestPrimitive_template template_m__create;
const OneM2M__Types::RequestPrimitive_template& m__create = template_m__create;
static UNIVERSAL_CHARSTRING_template template_mw__create_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__create_p__from_defval = template_mw__create_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__create_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__create_p__to_defval = template_mw__create_p__to_defval;
static OneM2M__Types::AcpType_template template_m__createAEAnnc_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& m__createAEAnnc_p__accessControlPolicyIds_defval = template_m__createAEAnnc_p__accessControlPolicyIds_defval;
static UNIVERSAL_CHARSTRING_template template_m__createAEAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& m__createAEAnnc_p__to_defval = template_m__createAEAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_m__createAEAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& m__createAEAnnc_p__from_defval = template_m__createAEAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING const_m__createAEAnnc_p__stemId_defval;
const UNIVERSAL_CHARSTRING& m__createAEAnnc_p__stemId_defval = const_m__createAEAnnc_p__stemId_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAEAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAEAnnc_p__from_defval = template_mw__createAEAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAEAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAEAnnc_p__to_defval = template_mw__createAEAnnc_p__to_defval;
static OneM2M__Types::AcpType_template template_mw__createAEAnnc_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& mw__createAEAnnc_p__accessControlPolicyIds_defval = template_mw__createAEAnnc_p__accessControlPolicyIds_defval;
static OneM2M__Types::AcpType_template template_m__createAe_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& m__createAe_p__accessControlPolicyIds_defval = template_m__createAe_p__accessControlPolicyIds_defval;
static UNIVERSAL_CHARSTRING_template template_m__createAe_p__from_defval;
const UNIVERSAL_CHARSTRING_template& m__createAe_p__from_defval = template_m__createAe_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_m__createAe_p__resourceName_defval;
const UNIVERSAL_CHARSTRING_template& m__createAe_p__resourceName_defval = template_m__createAe_p__resourceName_defval;
static OneM2M__Types::PoaList_template template_m__createAe_p__poaList_defval;
const OneM2M__Types::PoaList_template& m__createAe_p__poaList_defval = template_m__createAe_p__poaList_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAe_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAe_p__from_defval = template_mw__createAe_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAe_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAe_p__to_defval = template_mw__createAe_p__to_defval;
static OneM2M__Types::AcpType_template template_m__createAeAux_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& m__createAeAux_p__accessControlPolicyIds_defval = template_m__createAeAux_p__accessControlPolicyIds_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createAcpBase;
const OneM2M__Types::RequestPrimitive_template& m__createAcpBase = template_m__createAcpBase;
static UNIVERSAL_CHARSTRING_template template_m__createAcp_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__createAcp_p__name_defval = template_m__createAcp_p__name_defval;
static OneM2M__Types::ListOfURIs_template template_m__createAcp_p__acor_defval;
const OneM2M__Types::ListOfURIs_template& m__createAcp_p__acor_defval = template_m__createAcp_p__acor_defval;
static OneM2M__Types::AccessControlOperations_template template_m__createAcp_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& m__createAcp_p__allowedOperations_defval = template_m__createAcp_p__allowedOperations_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAccessControlPolicyAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAccessControlPolicyAnnc_p__from_defval = template_mw__createAccessControlPolicyAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createAccessControlPolicyAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createAccessControlPolicyAnnc_p__to_defval = template_mw__createAccessControlPolicyAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_m__createAcpAux_p__acpName_defval;
const UNIVERSAL_CHARSTRING_template& m__createAcpAux_p__acpName_defval = template_m__createAcpAux_p__acpName_defval;
static OneM2M__Types::ListOfURIs_template template_m__createAcpAux_p__acor_defval;
const OneM2M__Types::ListOfURIs_template& m__createAcpAux_p__acor_defval = template_m__createAcpAux_p__acor_defval;
static OneM2M__Types::AccessControlOperations_template template_m__createAcpAux_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& m__createAcpAux_p__allowedOperations_defval = template_m__createAcpAux_p__allowedOperations_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createContainerBase;
const OneM2M__Types::RequestPrimitive_template& m__createContainerBase = template_m__createContainerBase;
static OneM2M__Types::RequestPrimitive_template template_m__createContainer__noResourceName;
const OneM2M__Types::RequestPrimitive_template& m__createContainer__noResourceName = template_m__createContainer__noResourceName;
static UNIVERSAL_CHARSTRING_template template_m__createContainer_p__resourceName_defval;
const UNIVERSAL_CHARSTRING_template& m__createContainer_p__resourceName_defval = template_m__createContainer_p__resourceName_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContainer_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContainer_p__from_defval = template_mw__createContainer_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContainer_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContainer_p__to_defval = template_mw__createContainer_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContainerAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContainerAnncBase_p__from_defval = template_mw__createContainerAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContainerAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContainerAnncBase_p__to_defval = template_mw__createContainerAnncBase_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createFlexContainer_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createFlexContainer_p__from_defval = template_mw__createFlexContainer_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createFlexContainer_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createFlexContainer_p__to_defval = template_mw__createFlexContainer_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGenericIwkOpInstance_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGenericIwkOpInstance_p__from_defval = template_mw__createGenericIwkOpInstance_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGenericIwkOpInstance_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGenericIwkOpInstance_p__to_defval = template_mw__createGenericIwkOpInstance_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createContentInstanceBase;
const OneM2M__Types::RequestPrimitive_template& m__createContentInstanceBase = template_m__createContentInstanceBase;
static OneM2M__Types::RequestPrimitive_template template_m__createContentInstance__noResourceName;
const OneM2M__Types::RequestPrimitive_template& m__createContentInstance__noResourceName = template_m__createContentInstance__noResourceName;
static UNIVERSAL_CHARSTRING_template template_mw__createContentInstanceAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContentInstanceAnnc_p__from_defval = template_mw__createContentInstanceAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContentInstanceAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContentInstanceAnnc_p__to_defval = template_mw__createContentInstanceAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContentInstanceAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContentInstanceAnncBase_p__from_defval = template_mw__createContentInstanceAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createContentInstanceAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createContentInstanceAnncBase_p__to_defval = template_mw__createContentInstanceAnncBase_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createGroupBase;
const OneM2M__Types::RequestPrimitive_template& m__createGroupBase = template_m__createGroupBase;
static OneM2M__Types::ListOfURIs_template template_m__createGroup_p__memberIds_defval;
const OneM2M__Types::ListOfURIs_template& m__createGroup_p__memberIds_defval = template_m__createGroup_p__memberIds_defval;
static OneM2M__Types::MemberType_template template_m__createGroup_p__memberType_defval;
const OneM2M__Types::MemberType_template& m__createGroup_p__memberType_defval = template_m__createGroup_p__memberType_defval;
static OneM2M__Types::ConsistencyStrategy_template template_m__createGroup_p__consistencyStrategy_defval;
const OneM2M__Types::ConsistencyStrategy_template& m__createGroup_p__consistencyStrategy_defval = template_m__createGroup_p__consistencyStrategy_defval;
static OneM2M__Types::ListOfURIs_template template_m__createGroup_p__membersAccessControlPolicyIDs_defval;
const OneM2M__Types::ListOfURIs_template& m__createGroup_p__membersAccessControlPolicyIDs_defval = template_m__createGroup_p__membersAccessControlPolicyIDs_defval;
static UNIVERSAL_CHARSTRING_template template_m__createGroup_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__createGroup_p__name_defval = template_m__createGroup_p__name_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGroupAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGroupAnnc_p__from_defval = template_mw__createGroupAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGroupAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGroupAnnc_p__to_defval = template_mw__createGroupAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGroupAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGroupAnncBase_p__from_defval = template_mw__createGroupAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createGroupAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createGroupAnncBase_p__to_defval = template_mw__createGroupAnncBase_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createMgmtObjBase;
const OneM2M__Types::RequestPrimitive_template& m__createMgmtObjBase = template_m__createMgmtObjBase;
static OneM2M__Types::RequestPrimitive_template template_m__createMgmtObj;
const OneM2M__Types::RequestPrimitive_template& m__createMgmtObj = template_m__createMgmtObj;
static UNIVERSAL_CHARSTRING_template template_mw__createMgmtObjAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createMgmtObjAnnc_p__from_defval = template_mw__createMgmtObjAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createMgmtObjAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createMgmtObjAnnc_p__to_defval = template_mw__createMgmtObjAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createMgmtObjAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createMgmtObjAnncBase_p__from_defval = template_mw__createMgmtObjAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createMgmtObjAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createMgmtObjAnncBase_p__to_defval = template_mw__createMgmtObjAnncBase_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createNodeBase;
const OneM2M__Types::RequestPrimitive_template& m__createNodeBase = template_m__createNodeBase;
static OneM2M__Types::RequestPrimitive_template template_m__createNode;
const OneM2M__Types::RequestPrimitive_template& m__createNode = template_m__createNode;
static UNIVERSAL_CHARSTRING_template template_mw__createNodeAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createNodeAnnc_p__from_defval = template_mw__createNodeAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createNodeAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createNodeAnnc_p__to_defval = template_mw__createNodeAnnc_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createPollingChannelBase;
const OneM2M__Types::RequestPrimitive_template& m__createPollingChannelBase = template_m__createPollingChannelBase;
static OneM2M__Types::RequestPrimitive_template template_m__createScheduleBase;
const OneM2M__Types::RequestPrimitive_template& m__createScheduleBase = template_m__createScheduleBase;
static UNIVERSAL_CHARSTRING_template template_mw__createScheduleAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createScheduleAnnc_p__from_defval = template_mw__createScheduleAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createScheduleAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createScheduleAnnc_p__to_defval = template_mw__createScheduleAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createScheduleAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createScheduleAnncBase_p__from_defval = template_mw__createScheduleAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createScheduleAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createScheduleAnncBase_p__to_defval = template_mw__createScheduleAnncBase_p__to_defval;
static OneM2M__Types::RequestPrimitive_template template_m__createSubscriptionBase;
const OneM2M__Types::RequestPrimitive_template& m__createSubscriptionBase = template_m__createSubscriptionBase;
static OneM2M__Types::ListOfURIs_template template_m__createSubscription_p__notificationURI_defval;
const OneM2M__Types::ListOfURIs_template& m__createSubscription_p__notificationURI_defval = template_m__createSubscription_p__notificationURI_defval;
static UNIVERSAL_CHARSTRING_template template_m__createSubscriptionAdvanced_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__createSubscriptionAdvanced_p__name_defval = template_m__createSubscriptionAdvanced_p__name_defval;
static OneM2M__Types::EventNotificationCriteria_template template_m__createSubscriptionAdvanced_p__eventNotificationCriteria_defval;
const OneM2M__Types::EventNotificationCriteria_template& m__createSubscriptionAdvanced_p__eventNotificationCriteria_defval = template_m__createSubscriptionAdvanced_p__eventNotificationCriteria_defval;
static INTEGER_template template_m__createSubscriptionAdvanced_p__expirationCounter_defval;
const INTEGER_template& m__createSubscriptionAdvanced_p__expirationCounter_defval = template_m__createSubscriptionAdvanced_p__expirationCounter_defval;
static OneM2M__Types::BatchNotify_template template_m__createSubscriptionAdvanced_p__batchNotify_defval;
const OneM2M__Types::BatchNotify_template& m__createSubscriptionAdvanced_p__batchNotify_defval = template_m__createSubscriptionAdvanced_p__batchNotify_defval;
static BOOLEAN_template template_m__createSubscriptionAdvanced_p__latestNotify_defval;
const BOOLEAN_template& m__createSubscriptionAdvanced_p__latestNotify_defval = template_m__createSubscriptionAdvanced_p__latestNotify_defval;
static UNIVERSAL_CHARSTRING_template template_m__createSubscriptionAdvanced_p__subscriberURI_defval;
const UNIVERSAL_CHARSTRING_template& m__createSubscriptionAdvanced_p__subscriberURI_defval = template_m__createSubscriptionAdvanced_p__subscriberURI_defval;
static OneM2M__Types::NotificationContentType_template template_m__createSubscriptionAdvanced_p__notificationContentType_defval;
const OneM2M__Types::NotificationContentType_template& m__createSubscriptionAdvanced_p__notificationContentType_defval = template_m__createSubscriptionAdvanced_p__notificationContentType_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createLocationPolicyAnnc_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createLocationPolicyAnnc_p__from_defval = template_mw__createLocationPolicyAnnc_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createLocationPolicyAnnc_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createLocationPolicyAnnc_p__to_defval = template_mw__createLocationPolicyAnnc_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createLocationPolicyAnncBase_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createLocationPolicyAnncBase_p__from_defval = template_mw__createLocationPolicyAnncBase_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createLocationPolicyAnncBase_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createLocationPolicyAnncBase_p__to_defval = template_mw__createLocationPolicyAnncBase_p__to_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createSemanticDescriptor_p__from_defval;
const UNIVERSAL_CHARSTRING_template& mw__createSemanticDescriptor_p__from_defval = template_mw__createSemanticDescriptor_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_mw__createSemanticDescriptor_p__to_defval;
const UNIVERSAL_CHARSTRING_template& mw__createSemanticDescriptor_p__to_defval = template_mw__createSemanticDescriptor_p__to_defval;
static OneM2M__Types::SemanticDescriptor__optional_template template_mw__createSemanticDescriptor_p__semanticDescriptor_defval;
const OneM2M__Types::SemanticDescriptor__optional_template& mw__createSemanticDescriptor_p__semanticDescriptor_defval = template_mw__createSemanticDescriptor_p__semanticDescriptor_defval;
static UNIVERSAL_CHARSTRING const_m__deleteRequest_p__originator_defval;
const UNIVERSAL_CHARSTRING& m__deleteRequest_p__originator_defval = const_m__deleteRequest_p__originator_defval;
static OneM2M__Types::RequestPrimitive_template template_mw__notifyBase;
const OneM2M__Types::RequestPrimitive_template& mw__notifyBase = template_mw__notifyBase;
static OneM2M__Types::RequestPrimitive_template template_mw__aggregatedNotifyBase;
const OneM2M__Types::RequestPrimitive_template& mw__aggregatedNotifyBase = template_mw__aggregatedNotifyBase;
static UNIVERSAL_CHARSTRING const_m__contentCreateAEAnnc_p__appId_defval;
const UNIVERSAL_CHARSTRING& m__contentCreateAEAnnc_p__appId_defval = const_m__contentCreateAEAnnc_p__appId_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateAEAnnc_p__nodeLink_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateAEAnnc_p__nodeLink_defval = template_m__contentCreateAEAnnc_p__nodeLink_defval;
static OneM2M__Types::Labels_template template_mw__contentCreateAEAnnc_p__labels_defval;
const OneM2M__Types::Labels_template& mw__contentCreateAEAnnc_p__labels_defval = template_mw__contentCreateAEAnnc_p__labels_defval;
static OneM2M__Types::AcpType_template template_mw__contentCreateAEAnnc_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& mw__contentCreateAEAnnc_p__accessControlPolicyIds_defval = template_mw__contentCreateAEAnnc_p__accessControlPolicyIds_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateAe_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateAe_p__name_defval = template_m__contentCreateAe_p__name_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateAe_p__appId_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateAe_p__appId_defval = template_m__contentCreateAe_p__appId_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateAcp_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateAcp_p__name_defval = template_m__contentCreateAcp_p__name_defval;
static OneM2M__Types::ListOfURIs_template template_m__contentCreateAcp_p__acor_defval;
const OneM2M__Types::ListOfURIs_template& m__contentCreateAcp_p__acor_defval = template_m__contentCreateAcp_p__acor_defval;
static OneM2M__Types::AccessControlOperations_template template_m__contentCreateAcp_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& m__contentCreateAcp_p__allowedOperations_defval = template_m__contentCreateAcp_p__allowedOperations_defval;
static OneM2M__Types::Labels_template template_mw__contentCreateAcpAnnc_p__labels_defval;
const OneM2M__Types::Labels_template& mw__contentCreateAcpAnnc_p__labels_defval = template_mw__contentCreateAcpAnnc_p__labels_defval;
static OneM2M__Types::MemberType_template template_m__contentCreateGroup_p__memberType_defval;
const OneM2M__Types::MemberType_template& m__contentCreateGroup_p__memberType_defval = template_m__contentCreateGroup_p__memberType_defval;
static OneM2M__Types::ConsistencyStrategy_template template_m__contentCreateGroup_p__consistencyStrategy_defval;
const OneM2M__Types::ConsistencyStrategy_template& m__contentCreateGroup_p__consistencyStrategy_defval = template_m__contentCreateGroup_p__consistencyStrategy_defval;
static OneM2M__Types::ListOfURIs_template template_m__contentCreateGroup_p__membersAccessControlPolicyIDs_defval;
const OneM2M__Types::ListOfURIs_template& m__contentCreateGroup_p__membersAccessControlPolicyIDs_defval = template_m__contentCreateGroup_p__membersAccessControlPolicyIDs_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateGroup_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateGroup_p__name_defval = template_m__contentCreateGroup_p__name_defval;
static OneM2M__Types::GroupAnnc__optional_template template_mw__contentCreateGroupAnncBase;
const OneM2M__Types::GroupAnnc__optional_template& mw__contentCreateGroupAnncBase = template_mw__contentCreateGroupAnncBase;
static OneM2M__Types::AcpType_template template_m__contentCreateMgmtObj_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& m__contentCreateMgmtObj_p__accessControlPolicyIds_defval = template_m__contentCreateMgmtObj_p__accessControlPolicyIds_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateMgmtObj_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateMgmtObj_p__name_defval = template_m__contentCreateMgmtObj_p__name_defval;
static OneM2M__Types::MgmtObjAnnc__optional_template template_mw__contentCreateMgmtObjAnncBase;
const OneM2M__Types::MgmtObjAnnc__optional_template& mw__contentCreateMgmtObjAnncBase = template_mw__contentCreateMgmtObjAnncBase;
static OneM2M__Types::AcpType_template template_m__contentCreateNode_p__accessControlPolicyIds_defval;
const OneM2M__Types::AcpType_template& m__contentCreateNode_p__accessControlPolicyIds_defval = template_m__contentCreateNode_p__accessControlPolicyIds_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateNode_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateNode_p__name_defval = template_m__contentCreateNode_p__name_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateNode_p__nodeId_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateNode_p__nodeId_defval = template_m__contentCreateNode_p__nodeId_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreatePollingChannel_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreatePollingChannel_p__name_defval = template_m__contentCreatePollingChannel_p__name_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateSchedule_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateSchedule_p__name_defval = template_m__contentCreateSchedule_p__name_defval;
static OneM2M__Types::ScheduleAnnc__optional_template template_mw__contentCreateScheduleAnncBase;
const OneM2M__Types::ScheduleAnnc__optional_template& mw__contentCreateScheduleAnncBase = template_mw__contentCreateScheduleAnncBase;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateSubscription_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateSubscription_p__name_defval = template_m__contentCreateSubscription_p__name_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateSubscriptionAdvanced_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateSubscriptionAdvanced_p__name_defval = template_m__contentCreateSubscriptionAdvanced_p__name_defval;
static OneM2M__Types::EventNotificationCriteria_notificationEventType__list const_m__eventNotificationCriteria_p__notificationEventType__list_defval;
const OneM2M__Types::EventNotificationCriteria_notificationEventType__list& m__eventNotificationCriteria_p__notificationEventType__list_defval = const_m__eventNotificationCriteria_p__notificationEventType__list_defval;
static OneM2M__Types::AttributeList__1_template template_m__eventNotificationCriteria_p__attribute__list_defval;
const OneM2M__Types::AttributeList__1_template& m__eventNotificationCriteria_p__attribute__list_defval = template_m__eventNotificationCriteria_p__attribute__list_defval;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateContentInstance_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateContentInstance_p__name_defval = template_m__contentCreateContentInstance_p__name_defval;
static UNIVERSAL_CHARSTRING const_m__contentCreateContentInstance_p__primitiveContent_defval;
const UNIVERSAL_CHARSTRING& m__contentCreateContentInstance_p__primitiveContent_defval = const_m__contentCreateContentInstance_p__primitiveContent_defval;
static OneM2M__Types::ContentInstanceAnnc__optional_template template_mw__contentCreateContentInstanceAnncBase;
const OneM2M__Types::ContentInstanceAnnc__optional_template& mw__contentCreateContentInstanceAnncBase = template_mw__contentCreateContentInstanceAnncBase;
static UNIVERSAL_CHARSTRING_template template_m__contentCreateContainer_p__name_defval;
const UNIVERSAL_CHARSTRING_template& m__contentCreateContainer_p__name_defval = template_m__contentCreateContainer_p__name_defval;
static OneM2M__Types::ContainerAnnc__optional_template template_mw__contentCreateContainerAnncBase;
const OneM2M__Types::ContainerAnnc__optional_template& mw__contentCreateContainerAnncBase = template_mw__contentCreateContainerAnncBase;
static OneM2M__Types::LocationPolicyAnnc__optional_template template_mw__contentCreateLocationPolicyAnncBase;
const OneM2M__Types::LocationPolicyAnnc__optional_template& mw__contentCreateLocationPolicyAnncBase = template_mw__contentCreateLocationPolicyAnncBase;
static OneM2M__Types::SemanticDescriptor__optional_template template_mw__contentCreateSemanticDescriptor;
const OneM2M__Types::SemanticDescriptor__optional_template& mw__contentCreateSemanticDescriptor = template_mw__contentCreateSemanticDescriptor;
static OneM2M__Types::AE__optional_template template_m__contentUpdateAe;
const OneM2M__Types::AE__optional_template& m__contentUpdateAe = template_m__contentUpdateAe;
static OneM2M__Types::AccessControlPolicy__optional_template template_m__contentUpdateAcp;
const OneM2M__Types::AccessControlPolicy__optional_template& m__contentUpdateAcp = template_m__contentUpdateAcp;
static OneM2M__Types::Group__optional_template template_m__contentUpdateGroup;
const OneM2M__Types::Group__optional_template& m__contentUpdateGroup = template_m__contentUpdateGroup;
static OneM2M__Types::PollingChannel__optional_template template_m__contentUpdatePollingChannel;
const OneM2M__Types::PollingChannel__optional_template& m__contentUpdatePollingChannel = template_m__contentUpdatePollingChannel;
static OneM2M__Types::Schedule__optional_template template_m__contentUpdateSchedule;
const OneM2M__Types::Schedule__optional_template& m__contentUpdateSchedule = template_m__contentUpdateSchedule;
static OneM2M__Types::Subscription__optional_template template_m__contentUpdateSubscription;
const OneM2M__Types::Subscription__optional_template& m__contentUpdateSubscription = template_m__contentUpdateSubscription;
static OneM2M__Types::Container__optional_template template_m__contentUpdateContainer;
const OneM2M__Types::Container__optional_template& m__contentUpdateContainer = template_m__contentUpdateContainer;
static OneM2M__Types::ContentInstance__optional_template template_m__contentUpdateContentInstance;
const OneM2M__Types::ContentInstance__optional_template& m__contentUpdateContentInstance = template_m__contentUpdateContentInstance;
static OneM2M__Types::AE__optional_template template_mw__contentAeBase;
const OneM2M__Types::AE__optional_template& mw__contentAeBase = template_mw__contentAeBase;
static OneM2M__Types::AE__optional_template template_m__contentAe__allOmit;
const OneM2M__Types::AE__optional_template& m__contentAe__allOmit = template_m__contentAe__allOmit;
static OneM2M__Types::AE__optional_template template_mw__contentAe__any;
const OneM2M__Types::AE__optional_template& mw__contentAe__any = template_mw__contentAe__any;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcpBase;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcpBase = template_mw__contentAcpBase;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__any;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__any = template_mw__contentAcp__any;
static OneM2M__Types::AccessControlPolicy__optional_template template_m__contentAcp__allOmit;
const OneM2M__Types::AccessControlPolicy__optional_template& m__contentAcp__allOmit = template_m__contentAcp__allOmit;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc1;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc1 = template_mw__contentAcp__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentAcp__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentAcp__rc2 = template_mw__contentAcp__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentAcp__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentAcp__rc3 = template_mw__contentAcp__rc3;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc4;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc4 = template_mw__contentAcp__rc4;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc5;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc5 = template_mw__contentAcp__rc5;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc6;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc6 = template_mw__contentAcp__rc6;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc7;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc7 = template_mw__contentAcp__rc7;
static OneM2M__Types::AccessControlPolicy__optional_template template_mw__contentAcp__rc8;
const OneM2M__Types::AccessControlPolicy__optional_template& mw__contentAcp__rc8 = template_mw__contentAcp__rc8;
static OneM2M__Types::Group__optional_template template_mw__contentGroupBase;
const OneM2M__Types::Group__optional_template& mw__contentGroupBase = template_mw__contentGroupBase;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__any;
const OneM2M__Types::Group__optional_template& mw__contentGroup__any = template_mw__contentGroup__any;
static OneM2M__Types::Group__optional_template template_m__contentGroup__allOmit;
const OneM2M__Types::Group__optional_template& m__contentGroup__allOmit = template_m__contentGroup__allOmit;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc1;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc1 = template_mw__contentGroup__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentGroup__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentGroup__rc2 = template_mw__contentGroup__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentGroup__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentGroup__rc3 = template_mw__contentGroup__rc3;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc4;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc4 = template_mw__contentGroup__rc4;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc5;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc5 = template_mw__contentGroup__rc5;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc6;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc6 = template_mw__contentGroup__rc6;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc7;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc7 = template_mw__contentGroup__rc7;
static OneM2M__Types::Group__optional_template template_mw__contentGroup__rc8;
const OneM2M__Types::Group__optional_template& mw__contentGroup__rc8 = template_mw__contentGroup__rc8;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannelBase;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannelBase = template_mw__contentPollingChannelBase;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannel__any;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannel__any = template_mw__contentPollingChannel__any;
static OneM2M__Types::PollingChannel__optional_template template_m__contentPollingChannel__allOmit;
const OneM2M__Types::PollingChannel__optional_template& m__contentPollingChannel__allOmit = template_m__contentPollingChannel__allOmit;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannel__rc1;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannel__rc1 = template_mw__contentPollingChannel__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentPollingChannel__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentPollingChannel__rc2 = template_mw__contentPollingChannel__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentPollingChannel__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentPollingChannel__rc3 = template_mw__contentPollingChannel__rc3;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannel__rc4;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannel__rc4 = template_mw__contentPollingChannel__rc4;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannel__rc5;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannel__rc5 = template_mw__contentPollingChannel__rc5;
static OneM2M__Types::PollingChannel__optional_template template_mw__contentPollingChannel__rc6;
const OneM2M__Types::PollingChannel__optional_template& mw__contentPollingChannel__rc6 = template_mw__contentPollingChannel__rc6;
static OneM2M__Types::Schedule__optional_template template_mw__contentScheduleBase;
const OneM2M__Types::Schedule__optional_template& mw__contentScheduleBase = template_mw__contentScheduleBase;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__any;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__any = template_mw__contentSchedule__any;
static OneM2M__Types::Schedule__optional_template template_m__contentSchedule__allOmit;
const OneM2M__Types::Schedule__optional_template& m__contentSchedule__allOmit = template_m__contentSchedule__allOmit;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc1;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc1 = template_mw__contentSchedule__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentSchedule__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentSchedule__rc2 = template_mw__contentSchedule__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentSchedule__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentSchedule__rc3 = template_mw__contentSchedule__rc3;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc4;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc4 = template_mw__contentSchedule__rc4;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc5;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc5 = template_mw__contentSchedule__rc5;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc6;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc6 = template_mw__contentSchedule__rc6;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc7;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc7 = template_mw__contentSchedule__rc7;
static OneM2M__Types::Schedule__optional_template template_mw__contentSchedule__rc8;
const OneM2M__Types::Schedule__optional_template& mw__contentSchedule__rc8 = template_mw__contentSchedule__rc8;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscriptionBase;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscriptionBase = template_mw__contentSubscriptionBase;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__any;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__any = template_mw__contentSubscription__any;
static OneM2M__Types::Subscription__optional_template template_m__contentSubscription__allOmit;
const OneM2M__Types::Subscription__optional_template& m__contentSubscription__allOmit = template_m__contentSubscription__allOmit;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc1;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc1 = template_mw__contentSubscription__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentSubscription__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentSubscription__rc2 = template_mw__contentSubscription__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentSubscription__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentSubscription__rc3 = template_mw__contentSubscription__rc3;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc4;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc4 = template_mw__contentSubscription__rc4;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc5;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc5 = template_mw__contentSubscription__rc5;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc6;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc6 = template_mw__contentSubscription__rc6;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc7;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc7 = template_mw__contentSubscription__rc7;
static OneM2M__Types::Subscription__optional_template template_mw__contentSubscription__rc8;
const OneM2M__Types::Subscription__optional_template& mw__contentSubscription__rc8 = template_mw__contentSubscription__rc8;
static OneM2M__Types::ContentInstance__optional_template template_mw__contentContentInstanceBase;
const OneM2M__Types::ContentInstance__optional_template& mw__contentContentInstanceBase = template_mw__contentContentInstanceBase;
static OneM2M__Types::Container__optional_template template_mw__contentContainerBase;
const OneM2M__Types::Container__optional_template& mw__contentContainerBase = template_mw__contentContainerBase;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__any;
const OneM2M__Types::Container__optional_template& mw__contentContainer__any = template_mw__contentContainer__any;
static OneM2M__Types::Container__optional_template template_m__contentContainer__allOmit;
const OneM2M__Types::Container__optional_template& m__contentContainer__allOmit = template_m__contentContainer__allOmit;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc1;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc1 = template_mw__contentContainer__rc1;
static UNIVERSAL_CHARSTRING_template template_mw__contentContainer__rc2;
const UNIVERSAL_CHARSTRING_template& mw__contentContainer__rc2 = template_mw__contentContainer__rc2;
static OneM2M__Types::ResourceWrapper_template template_mw__contentContainer__rc3;
const OneM2M__Types::ResourceWrapper_template& mw__contentContainer__rc3 = template_mw__contentContainer__rc3;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc4;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc4 = template_mw__contentContainer__rc4;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc5;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc5 = template_mw__contentContainer__rc5;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc6;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc6 = template_mw__contentContainer__rc6;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc7;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc7 = template_mw__contentContainer__rc7;
static OneM2M__Types::Container__optional_template template_mw__contentContainer__rc8;
const OneM2M__Types::Container__optional_template& mw__contentContainer__rc8 = template_mw__contentContainer__rc8;
static OneM2M__Types::Notification__1_template template_m__contentNotification__allOmit;
const OneM2M__Types::Notification__1_template& m__contentNotification__allOmit = template_m__contentNotification__allOmit;
static OneM2M__Types::Notification__1_template template_mw__contentNotification__any;
const OneM2M__Types::Notification__1_template& mw__contentNotification__any = template_mw__contentNotification__any;
static OneM2M__Types::Notification__1_template template_mw__contentNotificationBase;
const OneM2M__Types::Notification__1_template& mw__contentNotificationBase = template_mw__contentNotificationBase;
static OneM2M__Types::AE__update__invalid_template template_m__contentUpdateAe__invalid;
const OneM2M__Types::AE__update__invalid_template& m__contentUpdateAe__invalid = template_m__contentUpdateAe__invalid;
static OneM2M__Types::ACP__update__invalid_template template_m__contentUpdateAcp__invalid;
const OneM2M__Types::ACP__update__invalid_template& m__contentUpdateAcp__invalid = template_m__contentUpdateAcp__invalid;
static OneM2M__Types::Group__update__invalid_template template_m__contentUpdateGroup__invalid;
const OneM2M__Types::Group__update__invalid_template& m__contentUpdateGroup__invalid = template_m__contentUpdateGroup__invalid;
static OneM2M__Types::PollingChannel__update__invalid_template template_m__contentUpdatePollingChannel__invalid;
const OneM2M__Types::PollingChannel__update__invalid_template& m__contentUpdatePollingChannel__invalid = template_m__contentUpdatePollingChannel__invalid;
static OneM2M__Types::Schedule__update__invalid_template template_m__contentUpdateSchedule__invalid;
const OneM2M__Types::Schedule__update__invalid_template& m__contentUpdateSchedule__invalid = template_m__contentUpdateSchedule__invalid;
static OneM2M__Types::Subscription__update__invalid_template template_m__contentUpdateSubscription__invalid;
const OneM2M__Types::Subscription__update__invalid_template& m__contentUpdateSubscription__invalid = template_m__contentUpdateSubscription__invalid;
static OneM2M__Types::Container__update__invalid_template template_m__contentUpdateContainer__invalid;
const OneM2M__Types::Container__update__invalid_template& m__contentUpdateContainer__invalid = template_m__contentUpdateContainer__invalid;
static OneM2M__Types::PrimitiveContent_template template_m__responsePrimitive_p__content_defval;
const OneM2M__Types::PrimitiveContent_template& m__responsePrimitive_p__content_defval = template_m__responsePrimitive_p__content_defval;
static OneM2M__Types::PrimitiveContent_template template_mw__responsePrimitiveOK_p__content_defval;
const OneM2M__Types::PrimitiveContent_template& mw__responsePrimitiveOK_p__content_defval = template_mw__responsePrimitiveOK_p__content_defval;
static OneM2M__Types::ResponsePrimitive_template template_mw__responsePrimitiveKO;
const OneM2M__Types::ResponsePrimitive_template& mw__responsePrimitiveKO = template_mw__responsePrimitiveKO;
static OneM2M__Types::PrimitiveContent_template template_m__responseNotification_p__notification_defval;
const OneM2M__Types::PrimitiveContent_template& m__responseNotification_p__notification_defval = template_m__responseNotification_p__notification_defval;
static const size_t num_namespaces = 1;
static const namespace_t xml_namespaces[num_namespaces+1] = {
  { NULL, NULL },
  { "", "" }
};

TTCN_Module module_object("OneM2M_Templates", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 1LU, xml_namespaces, post_init_module, NULL, NULL, NULL, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_1,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

CHARSTRING f__rnd(const INTEGER& p__lower, const INTEGER& p__upper)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 32, TTCN_Location::LOCATION_FUNCTION, "f_rnd");
current_location.update_lineno(34);
/* OneM2M_Templates.ttcn, line 34 */
return int2str((float2int((rnd() * int2float(((p__upper - p__lower) + 1)))) + p__lower));
}

OneM2M__Types::MsgOut_template m__request(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AttributeAux__list_template& p__forcedFields)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 45, TTCN_Location::LOCATION_TEMPLATE, "m_request");
OneM2M__Types::MsgOut_template ret_val;
ret_val.primitive().requestPrimitive() = p__requestPrimitive;
ret_val.host() = OneM2M__Pixits::PX__SUT__ADDRESS;
ret_val.xmlNamespace() = OneM2M__Pixits::PX__XML__NAMESPACE;
ret_val.protocolBinding() = OneM2M__Pixits::PX__PROTOCOL__BINDING;
ret_val.serialization() = OneM2M__Pixits::PX__SERIALIZATION;
ret_val.forcedFields() = p__forcedFields;
return ret_val;
}

OneM2M__Types::MsgOut_template m__response(const OneM2M__Types::ResponsePrimitive_template& p__responsePrimitive, const OneM2M__Types::AttributeAux__list_template& p__forcedFields)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 58, TTCN_Location::LOCATION_TEMPLATE, "m_response");
OneM2M__Types::MsgOut_template ret_val;
ret_val.primitive().responsePrimitive() = p__responsePrimitive;
ret_val.host() = OneM2M__Pixits::PX__SUT__ADDRESS;
ret_val.xmlNamespace() = OneM2M__Pixits::PX__XML__NAMESPACE;
ret_val.protocolBinding() = OneM2M__Pixits::PX__PROTOCOL__BINDING;
ret_val.serialization() = OneM2M__Pixits::PX__SERIALIZATION;
ret_val.forcedFields() = p__forcedFields;
return ret_val;
}

OneM2M__Types::MsgOut_template m__httpResponse(const OneM2M__Types::ResponsePrimitive_template& p__responsePrimitive, const OneM2M__Types::AttributeAux__list_template& p__forcedFields)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 71, TTCN_Location::LOCATION_TEMPLATE, "m_httpResponse");
OneM2M__Types::MsgOut_template ret_val;
ret_val.primitive().responsePrimitive() = p__responsePrimitive;
ret_val.host() = OneM2M__Pixits::PX__SUT__ADDRESS;
ret_val.xmlNamespace() = OneM2M__Pixits::PX__XML__NAMESPACE;
ret_val.protocolBinding() = cs_0;
ret_val.serialization() = OneM2M__Pixits::PX__SERIALIZATION;
ret_val.forcedFields() = p__forcedFields;
return ret_val;
}

OneM2M__Types::MsgIn_template mw__request(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 80, TTCN_Location::LOCATION_TEMPLATE, "mw_request");
OneM2M__Types::MsgIn_template ret_val;
ret_val.primitive().requestPrimitive() = p__requestPrimitive;
return ret_val;
}

OneM2M__Types::MsgIn_template mw__response(const OneM2M__Types::ResponsePrimitive_template& p__responsePrimitive)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 88, TTCN_Location::LOCATION_TEMPLATE, "mw_response");
OneM2M__Types::MsgIn_template ret_val;
ret_val.primitive().responsePrimitive() = p__responsePrimitive;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__retrieveResource(const UNIVERSAL_CHARSTRING& p__targetResourceAddress, const UNIVERSAL_CHARSTRING& p__originator)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 103, TTCN_Location::LOCATION_TEMPLATE, "m_retrieveResource");
OneM2M__Types::RequestPrimitive_template ret_val;
ret_val.operation() = OneM2M__Types::Operation::int2;
ret_val.to__() = p__targetResourceAddress;
ret_val.from__() = p__originator;
ret_val.requestIdentifier() = (cs_1 + f__rnd(1, 1000000));
ret_val.resourceType() = OMIT_VALUE;
ret_val.primitiveContent() = OMIT_VALUE;
ret_val.roleIDs() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.requestExpirationTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.operationExecutionTime() = OMIT_VALUE;
ret_val.responseType() = OMIT_VALUE;
ret_val.resultPersistence() = OMIT_VALUE;
ret_val.resultContent() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.deliveryAggregation() = OMIT_VALUE;
ret_val.groupRequestIdentifier() = OMIT_VALUE;
ret_val.filterCriteria() = OMIT_VALUE;
ret_val.discoveryResultType() = OMIT_VALUE;
ret_val.tokens() = OMIT_VALUE;
ret_val.tokenIDs() = OMIT_VALUE;
ret_val.localTokenIDs() = OMIT_VALUE;
ret_val.tokenRequestIndicator() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__retrieveResourceAttributeToOption(const UNIVERSAL_CHARSTRING& p__targetResourceAddress, const UNIVERSAL_CHARSTRING& p__originator)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 134, TTCN_Location::LOCATION_TEMPLATE, "m_retrieveResourceAttributeToOption");
OneM2M__Types::RequestPrimitive_template ret_val;
ret_val.operation() = OneM2M__Types::Operation::int2;
ret_val.to__() = p__targetResourceAddress;
ret_val.from__() = p__originator;
ret_val.requestIdentifier() = (cs_2 + f__rnd(1, 1000000));
ret_val.resourceType() = OMIT_VALUE;
ret_val.primitiveContent() = OMIT_VALUE;
ret_val.roleIDs() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.requestExpirationTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.operationExecutionTime() = OMIT_VALUE;
ret_val.responseType() = OMIT_VALUE;
ret_val.resultPersistence() = OMIT_VALUE;
ret_val.resultContent() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.deliveryAggregation() = OMIT_VALUE;
ret_val.groupRequestIdentifier() = OMIT_VALUE;
ret_val.filterCriteria() = OMIT_VALUE;
ret_val.discoveryResultType() = OMIT_VALUE;
ret_val.tokens() = OMIT_VALUE;
ret_val.tokenIDs() = OMIT_VALUE;
ret_val.localTokenIDs() = OMIT_VALUE;
ret_val.tokenRequestIndicator() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__retrieveResourceAttributeContentOption(const UNIVERSAL_CHARSTRING& p__targetResourceAddress, const OneM2M__Types::AttributeList__1_template& p__attributeList, const UNIVERSAL_CHARSTRING& p__originator)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 166, TTCN_Location::LOCATION_TEMPLATE, "m_retrieveResourceAttributeContentOption");
OneM2M__Types::RequestPrimitive_template ret_val;
ret_val.operation() = OneM2M__Types::Operation::int2;
ret_val.to__() = p__targetResourceAddress;
ret_val.from__() = p__originator;
ret_val.requestIdentifier() = (cs_3 + f__rnd(1, 1000000));
ret_val.resourceType() = OMIT_VALUE;
{
OneM2M__Types::Contents_template& tmp_0 = ret_val.primitiveContent().any__1();
tmp_0.set_size(1);
tmp_0[0].AT_AttributeList() = p__attributeList;
}
ret_val.roleIDs() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.requestExpirationTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.operationExecutionTime() = OMIT_VALUE;
ret_val.responseType() = OMIT_VALUE;
ret_val.resultPersistence() = OMIT_VALUE;
ret_val.resultContent() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.deliveryAggregation() = OMIT_VALUE;
ret_val.groupRequestIdentifier() = OMIT_VALUE;
ret_val.filterCriteria() = OMIT_VALUE;
ret_val.discoveryResultType() = OMIT_VALUE;
ret_val.tokens() = OMIT_VALUE;
ret_val.tokenIDs() = OMIT_VALUE;
ret_val.localTokenIDs() = OMIT_VALUE;
ret_val.tokenRequestIndicator() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__updateAcpPrivileges(const OneM2M__Types::SetOfAcrs_template& p__privileges, const OneM2M__Types::SetOfAcrs_template& p__selfPrivileges)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 263, TTCN_Location::LOCATION_TEMPLATE, "m_updateAcpPrivileges");
OneM2M__Types::RequestPrimitive_template ret_val(m__update);
ret_val.requestIdentifier() = (cs_9 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_5 = ret_val.primitiveContent().any__1();
tmp_5.set_size(1);
tmp_5[0].AT_AccessControlPolicy__optional() = m__contentUpdateAcpPrivileges(p__privileges, p__selfPrivileges);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__updateLocationPolicy(const UNIVERSAL_CHARSTRING& p__locResourceAddress, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const CHARSTRING_template& p__locationUpdatePeriod)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 310, TTCN_Location::LOCATION_TEMPLATE, "m_updateLocationPolicy");
OneM2M__Types::RequestPrimitive_template ret_val(m__update);
ret_val.to__() = p__locResourceAddress;
ret_val.requestIdentifier() = cs_14;
{
OneM2M__Types::Contents_template& tmp_10 = ret_val.primitiveContent().any__1();
tmp_10.set_size(1);
{
CHARSTRING_template tmp_11;
tmp_11 = p__locationUpdatePeriod;
tmp_11.check_restriction(TR_VALUE);
tmp_10[0].AT_LocationPolicy__optional() = m__contentUpdateLocationPolicy(p__accessControlPolicyIds, tmp_11);
}
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__create(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 352, TTCN_Location::LOCATION_TEMPLATE, "mw_create");
OneM2M__Types::RequestPrimitive_template ret_val;
ret_val.operation() = OneM2M__Types::Operation::int1;
ret_val.to__() = p__to;
ret_val.from__() = p__from;
ret_val.requestIdentifier() = ANY_VALUE;
ret_val.resourceType() = ANY_VALUE;
ret_val.primitiveContent().any__1() = ANY_VALUE;
ret_val.roleIDs() = ANY_OR_OMIT;
ret_val.originatingTimestamp() = ANY_OR_OMIT;
ret_val.requestExpirationTimestamp() = ANY_OR_OMIT;
ret_val.resultExpirationTimestamp() = ANY_OR_OMIT;
ret_val.operationExecutionTime() = ANY_OR_OMIT;
ret_val.responseType() = ANY_OR_OMIT;
ret_val.resultPersistence() = ANY_OR_OMIT;
ret_val.resultContent() = ANY_OR_OMIT;
ret_val.eventCategory() = ANY_OR_OMIT;
ret_val.deliveryAggregation() = ANY_OR_OMIT;
ret_val.groupRequestIdentifier() = ANY_OR_OMIT;
ret_val.filterCriteria() = ANY_OR_OMIT;
ret_val.discoveryResultType() = ANY_OR_OMIT;
ret_val.tokens() = ANY_OR_OMIT;
ret_val.tokenIDs() = ANY_OR_OMIT;
ret_val.localTokenIDs() = ANY_OR_OMIT;
ret_val.tokenRequestIndicator() = ANY_OR_OMIT;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createAEAnnc(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING_template& p__to, const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING& p__appId, const UNIVERSAL_CHARSTRING& p__stemId)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 389, TTCN_Location::LOCATION_TEMPLATE, "m_createAEAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__to;
ret_val.from__() = p__from;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_16) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10002;
{
OneM2M__Types::Contents_template& tmp_12 = ret_val.primitiveContent().any__1();
tmp_12.set_size(1);
{
OneM2M__Types::Labels_template tmp_13;
tmp_13.set_size(1);
tmp_13[0] = cs_17;
tmp_12[0].AT_AEAnnc__optional() = m__contentCreateAEAnnc(tmp_13, p__accessControlPolicyIds, p__appId, UNIVERSAL_CHARSTRING_template(((p__to.valueof() + cs_18) + p__stemId)));
}
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createAEAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 402, TTCN_Location::LOCATION_TEMPLATE, "mw_createAEAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10002;
{
OneM2M__Types::Contents_template& tmp_14 = ret_val.primitiveContent().any__1();
tmp_14.set_size(1);
{
OneM2M__Types::Labels_template tmp_15;
tmp_15.set_size(1);
tmp_15[0] = cs_17;
tmp_14[0].AT_AEAnnc__optional() = mw__contentCreateAEAnnc(tmp_15, p__accessControlPolicyIds);
}
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createAe(const UNIVERSAL_CHARSTRING& p__appId, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__resourceName, const OneM2M__Types::PoaList_template& p__poaList)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 409, TTCN_Location::LOCATION_TEMPLATE, "m_createAe");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.from__() = p__from;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_20) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int2;
{
OneM2M__Types::Contents_template& tmp_16 = ret_val.primitiveContent().any__1();
tmp_16.set_size(1);
tmp_16[0].AT_AE__optional() = m__contentCreateAe(p__accessControlPolicyIds, p__resourceName, UNIVERSAL_CHARSTRING_template(p__appId), p__poaList);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createAe(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 421, TTCN_Location::LOCATION_TEMPLATE, "mw_createAe");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int2;
{
OneM2M__Types::Contents_template& tmp_17 = ret_val.primitiveContent().any__1();
tmp_17.set_size(1);
tmp_17[0].AT_AE__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createAeAux(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const OneM2M__Types::PoaList_template& p__poaList)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 428, TTCN_Location::LOCATION_TEMPLATE, "m_createAeAux");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.from__() = OneM2M__Pixits::PX__AE1__ID__STEM;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_20) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int2;
{
OneM2M__Types::Contents_template& tmp_18 = ret_val.primitiveContent().any__1();
tmp_18.set_size(1);
tmp_18[0].AT_AE__optional() = m__contentCreateAe(p__accessControlPolicyIds, UNIVERSAL_CHARSTRING_template(OneM2M__TypesAndValues::c__aeAuxName), m__contentCreateAe_p__appId_defval, p__poaList);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createAcp(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::ListOfURIs_template& p__acor, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 448, TTCN_Location::LOCATION_TEMPLATE, "m_createAcp");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.from__() = OneM2M__Pixits::PX__SUPER__USER;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_21) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int1;
{
OneM2M__Types::Contents_template& tmp_20 = ret_val.primitiveContent().any__1();
tmp_20.set_size(1);
tmp_20[0].AT_AccessControlPolicy__optional() = m__contentCreateAcp(p__name, p__acor, p__allowedOperations);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createAccessControlPolicyAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 461, TTCN_Location::LOCATION_TEMPLATE, "mw_createAccessControlPolicyAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.to__() = p__to;
ret_val.from__() = p__from;
ret_val.resourceType() = OneM2M__Types::ResourceType::int10002;
{
OneM2M__Types::Contents_template& tmp_21 = ret_val.primitiveContent().any__1();
tmp_21.set_size(1);
tmp_21[0].AT_AccessControlPolicyAnnc__optional() = mw__contentCreateAcpAnnc(mw__contentCreateAcpAnnc_p__labels_defval);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createAcpAux(const UNIVERSAL_CHARSTRING_template& p__acpName, const OneM2M__Types::ListOfURIs_template& p__acor, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 474, TTCN_Location::LOCATION_TEMPLATE, "m_createAcpAux");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.from__() = OneM2M__Pixits::PX__SUPER__USER;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_22) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int1;
{
OneM2M__Types::Contents_template& tmp_22 = ret_val.primitiveContent().any__1();
tmp_22.set_size(1);
tmp_22[0].AT_AccessControlPolicy__optional() = m__contentCreateAcp(p__acpName, p__acor, p__allowedOperations);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createCSEBase(const OneM2M__Types::ServiceSubscribedAppRule& p__serviceSubscribedAppRule)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 483, TTCN_Location::LOCATION_TEMPLATE, "m_createCSEBase");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.from__() = OneM2M__Pixits::PX__SUPER__USER;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_23) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int1;
{
OneM2M__Types::Contents_template& tmp_23 = ret_val.primitiveContent().any__1();
tmp_23.set_size(1);
tmp_23[0].AT_CSEBase__optional() = m__contentCreateCSEBase(OneM2M__Types::ServiceSubscribedAppRule_template(p__serviceSubscribedAppRule));
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createContainer(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__resourceName)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 514, TTCN_Location::LOCATION_TEMPLATE, "m_createContainer");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_24) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int3;
{
OneM2M__Types::Contents_template& tmp_26 = ret_val.primitiveContent().any__1();
tmp_26.set_size(1);
tmp_26[0].AT_Container__optional() = m__contentCreateContainer(p__resourceName);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createContainer(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 526, TTCN_Location::LOCATION_TEMPLATE, "mw_createContainer");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int3;
{
OneM2M__Types::Contents_template& tmp_27 = ret_val.primitiveContent().any__1();
tmp_27.set_size(1);
tmp_27[0].AT_Container__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createContainerAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 536, TTCN_Location::LOCATION_TEMPLATE, "mw_createContainerAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10003;
{
OneM2M__Types::Contents_template& tmp_28 = ret_val.primitiveContent().any__1();
tmp_28.set_size(1);
tmp_28[0].AT_ContainerAnnc__optional() = mw__contentCreateContainerAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createFlexContainer(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 546, TTCN_Location::LOCATION_TEMPLATE, "mw_createFlexContainer");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int28;
{
OneM2M__Types::Contents_template& tmp_29 = ret_val.primitiveContent().any__1();
tmp_29.set_size(1);
tmp_29[0].AT_FlexContainer__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createGenericIwkOpInstance(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 556, TTCN_Location::LOCATION_TEMPLATE, "mw_createGenericIwkOpInstance");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int28;
{
OneM2M__Types::Contents_template& tmp_30 = ret_val.primitiveContent().any__1();
tmp_30.set_size(1);
tmp_30[0].AT_GenericInterworkingOperationInstance__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createContentInstance(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING& p__primitiveContent)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 585, TTCN_Location::LOCATION_TEMPLATE, "m_createContentInstance");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.from__() = cs_27;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_25) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int4;
{
OneM2M__Types::Contents_template& tmp_33 = ret_val.primitiveContent().any__1();
tmp_33.set_size(1);
tmp_33[0].AT_ContentInstance__optional() = m__contentCreateContentInstance(UNIVERSAL_CHARSTRING_template(p__primitiveContent), m__contentCreateContentInstance_p__primitiveContent_defval);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createContentInstanceAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 598, TTCN_Location::LOCATION_TEMPLATE, "mw_createContentInstanceAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10014;
{
OneM2M__Types::Contents_template& tmp_34 = ret_val.primitiveContent().any__1();
tmp_34.set_size(1);
tmp_34[0].AT_ContentInstanceAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createContentInstanceAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 608, TTCN_Location::LOCATION_TEMPLATE, "mw_createContentInstanceAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10014;
{
OneM2M__Types::Contents_template& tmp_35 = ret_val.primitiveContent().any__1();
tmp_35.set_size(1);
tmp_35[0].AT_ContentInstanceAnnc__optional() = mw__contentCreateContentInstanceAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createGroup(const INTEGER_template& p__maxNrOfMembers, const OneM2M__Types::ListOfURIs_template& p__memberIds, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const OneM2M__Types::MemberType_template& p__memberType, const OneM2M__Types::ConsistencyStrategy_template& p__consistencyStrategy, const OneM2M__Types::ListOfURIs_template& p__membersAccessControlPolicyIDs, const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 627, TTCN_Location::LOCATION_TEMPLATE, "m_createGroup");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_28) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int9;
{
OneM2M__Types::Contents_template& tmp_38 = ret_val.primitiveContent().any__1();
tmp_38.set_size(1);
tmp_38[0].AT_Group__optional() = m__contentCreateGroup(p__maxNrOfMembers, p__memberIds, p__accessControlPolicyIds, p__memberType, p__consistencyStrategy, p__membersAccessControlPolicyIDs, p__name);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createGroupAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 644, TTCN_Location::LOCATION_TEMPLATE, "mw_createGroupAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10009;
{
OneM2M__Types::Contents_template& tmp_39 = ret_val.primitiveContent().any__1();
tmp_39.set_size(1);
tmp_39[0].AT_GroupAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createGroupAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 654, TTCN_Location::LOCATION_TEMPLATE, "mw_createGroupAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10009;
{
OneM2M__Types::Contents_template& tmp_40 = ret_val.primitiveContent().any__1();
tmp_40.set_size(1);
tmp_40[0].AT_GroupAnnc__optional() = mw__contentCreateGroupAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createMgmtObjAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 686, TTCN_Location::LOCATION_TEMPLATE, "mw_createMgmtObjAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10013;
{
OneM2M__Types::Contents_template& tmp_43 = ret_val.primitiveContent().any__1();
tmp_43.set_size(1);
tmp_43[0].AT_MgmtObjAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createMgmtObjAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 696, TTCN_Location::LOCATION_TEMPLATE, "mw_createMgmtObjAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10013;
{
OneM2M__Types::Contents_template& tmp_44 = ret_val.primitiveContent().any__1();
tmp_44.set_size(1);
tmp_44[0].AT_MgmtObjAnnc__optional() = mw__contentCreateMgmtObjAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createNodeAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 728, TTCN_Location::LOCATION_TEMPLATE, "mw_createNodeAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10014;
{
OneM2M__Types::Contents_template& tmp_47 = ret_val.primitiveContent().any__1();
tmp_47.set_size(1);
tmp_47[0].AT_NodeAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createPollingChannel(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__originatorId)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 746, TTCN_Location::LOCATION_TEMPLATE, "m_createPollingChannel");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.from__() = p__originatorId;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_33) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int15;
{
OneM2M__Types::Contents_template& tmp_49 = ret_val.primitiveContent().any__1();
tmp_49.set_size(1);
tmp_49[0].AT_PollingChannel__optional() = m__contentCreatePollingChannel(m__contentCreatePollingChannel_p__name_defval);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createSchedule(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::ScheduleEntries_template& p__scheduleElement)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 767, TTCN_Location::LOCATION_TEMPLATE, "m_createSchedule");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_34) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int18;
{
OneM2M__Types::Contents_template& tmp_53 = ret_val.primitiveContent().any__1();
tmp_53.set_size(1);
tmp_53[0].AT_Schedule__optional() = m__contentCreateSchedule(p__scheduleElement, p__name);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createScheduleAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 779, TTCN_Location::LOCATION_TEMPLATE, "mw_createScheduleAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10018;
{
OneM2M__Types::Contents_template& tmp_54 = ret_val.primitiveContent().any__1();
tmp_54.set_size(1);
tmp_54[0].AT_ScheduleAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createScheduleAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 789, TTCN_Location::LOCATION_TEMPLATE, "mw_createScheduleAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10018;
{
OneM2M__Types::Contents_template& tmp_55 = ret_val.primitiveContent().any__1();
tmp_55.set_size(1);
tmp_55[0].AT_ScheduleAnnc__optional() = mw__contentCreateScheduleAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createServiceSubscribedAppRule(const OneM2M__Types::ListOfM2MID& p__applicableCredIDs, const OneM2M__Types::ListOfM2MID& p__allowedAppIDs, const OneM2M__Types::ListOfM2MID& p__allowedAEs)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 796, TTCN_Location::LOCATION_TEMPLATE, "m_createServiceSubscribedAppRule");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_36) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int19;
{
OneM2M__Types::Contents_template& tmp_56 = ret_val.primitiveContent().any__1();
tmp_56.set_size(1);
tmp_56[0].AT_ServiceSubscribedAppRule__optional() = m__contentCreateServiceSubscribedAppRule(p__applicableCredIDs, p__allowedAppIDs, p__allowedAEs);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createSubscription(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::ListOfURIs_template& p__notificationURI)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 816, TTCN_Location::LOCATION_TEMPLATE, "m_createSubscription");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.to__() = p__parentResourceAddress;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_37) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int23;
{
OneM2M__Types::Contents_template& tmp_59 = ret_val.primitiveContent().any__1();
tmp_59.set_size(1);
tmp_59[0].AT_Subscription__optional() = m__contentCreateSubscription(p__notificationURI, p__name);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createSubscriptionAdvanced(const UNIVERSAL_CHARSTRING& p__parentResourceAddress, const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::ListOfURIs_template& p__notificationURI, const OneM2M__Types::EventNotificationCriteria_template& p__eventNotificationCriteria, const INTEGER_template& p__expirationCounter, const OneM2M__Types::BatchNotify_template& p__batchNotify, const BOOLEAN_template& p__latestNotify, const UNIVERSAL_CHARSTRING_template& p__subscriberURI, const OneM2M__Types::NotificationContentType_template& p__notificationContentType)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 825, TTCN_Location::LOCATION_TEMPLATE, "m_createSubscriptionAdvanced");
OneM2M__Types::RequestPrimitive_template ret_val(m__createSubscription(p__parentResourceAddress, p__name, p__notificationURI));
{
OneM2M__Types::Contents_template& tmp_60 = ret_val.primitiveContent().any__1();
tmp_60.set_size(1);
tmp_60[0].AT_Subscription__optional() = m__contentCreateSubscriptionAdvanced(p__notificationURI, p__name, p__eventNotificationCriteria, p__expirationCounter, p__batchNotify, p__latestNotify, p__subscriberURI, p__notificationContentType);
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createLocationPolicy(const OneM2M__Types::LocationSource_template& p__locationSource, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const CHARSTRING_template& p__locationUpdatePeriod, const UNIVERSAL_CHARSTRING_template& p__locationTargetID, const UNIVERSAL_CHARSTRING_template& p__locationServerAddress)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 839, TTCN_Location::LOCATION_TEMPLATE, "m_createLocationPolicy");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_38) + f__rnd(1, 1000000));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10;
{
OneM2M__Types::Contents_template& tmp_61 = ret_val.primitiveContent().any__1();
tmp_61.set_size(1);
{
CHARSTRING_template tmp_62;
tmp_62 = p__locationUpdatePeriod;
tmp_62.check_restriction(TR_VALUE);
UNIVERSAL_CHARSTRING_template tmp_63;
tmp_63 = p__locationTargetID;
tmp_63.check_restriction(TR_VALUE);
UNIVERSAL_CHARSTRING_template tmp_64;
tmp_64 = p__locationServerAddress;
tmp_64.check_restriction(TR_VALUE);
tmp_61[0].AT_LocationPolicy__optional() = m__contentCreateLocationPolicy(p__locationSource, p__accessControlPolicyIds, tmp_62, tmp_63, tmp_64);
}
}
ret_val.resultContent() = OneM2M__Types::ResultContent::int1;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createLocationPolicyAnnc(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 852, TTCN_Location::LOCATION_TEMPLATE, "mw_createLocationPolicyAnnc");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10010;
{
OneM2M__Types::Contents_template& tmp_65 = ret_val.primitiveContent().any__1();
tmp_65.set_size(1);
tmp_65[0].AT_LocationPolicyAnnc__optional() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createLocationPolicyAnncBase(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 862, TTCN_Location::LOCATION_TEMPLATE, "mw_createLocationPolicyAnncBase");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int10010;
{
OneM2M__Types::Contents_template& tmp_66 = ret_val.primitiveContent().any__1();
tmp_66.set_size(1);
tmp_66[0].AT_LocationPolicyAnnc__optional() = mw__contentCreateLocationPolicyAnncBase;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__createNotification(const OneM2M__Types::Representation_template& p__resourcePresentation, const OneM2M__Types::NotificationEventType_template& p__notifEventType, const UNIVERSAL_CHARSTRING_template& p__subscriptionReference, const UNIVERSAL_CHARSTRING_template& p__notifForwardingURI)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 869, TTCN_Location::LOCATION_TEMPLATE, "m_createNotification");
OneM2M__Types::RequestPrimitive_template ret_val(m__create);
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_39) + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_67 = ret_val.primitiveContent().any__1();
tmp_67.set_size(1);
tmp_67[0].AT_Notification() = m__contentCreateNotification(p__resourcePresentation, p__notifEventType, p__subscriptionReference, p__notifForwardingURI);
}
ret_val.resultContent() = OneM2M__Types::ResultContent::int1;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__createSemanticDescriptor(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to, const OneM2M__Types::SemanticDescriptor__optional_template& p__semanticDescriptor)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 881, TTCN_Location::LOCATION_TEMPLATE, "mw_createSemanticDescriptor");
OneM2M__Types::RequestPrimitive_template ret_val(mw__create(p__from, p__to));
ret_val.resourceType() = OneM2M__Types::ResourceType::int24;
{
OneM2M__Types::Contents_template& tmp_68 = ret_val.primitiveContent().any__1();
tmp_68.set_size(1);
tmp_68[0].AT_SemanticDescriptor__optional() = p__semanticDescriptor;
}
return ret_val;
}

OneM2M__Types::RequestPrimitive_template m__deleteRequest(const UNIVERSAL_CHARSTRING& p__resourceAddress, const UNIVERSAL_CHARSTRING& p__originator)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 892, TTCN_Location::LOCATION_TEMPLATE, "m_deleteRequest");
OneM2M__Types::RequestPrimitive_template ret_val;
ret_val.operation() = OneM2M__Types::Operation::int4;
ret_val.to__() = p__resourceAddress;
ret_val.from__() = p__originator;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_40) + f__rnd(1, 1000000));
ret_val.resourceType() = OMIT_VALUE;
ret_val.primitiveContent() = OMIT_VALUE;
ret_val.roleIDs() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.requestExpirationTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.operationExecutionTime() = OMIT_VALUE;
ret_val.responseType() = OMIT_VALUE;
ret_val.resultPersistence() = OMIT_VALUE;
ret_val.resultContent() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.deliveryAggregation() = OMIT_VALUE;
ret_val.groupRequestIdentifier() = OMIT_VALUE;
ret_val.filterCriteria() = OMIT_VALUE;
ret_val.discoveryResultType() = OMIT_VALUE;
ret_val.tokens() = OMIT_VALUE;
ret_val.tokenIDs() = OMIT_VALUE;
ret_val.localTokenIDs() = OMIT_VALUE;
ret_val.tokenRequestIndicator() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::RequestPrimitive_template mw__notify(const OneM2M__Types::Notification__1_template& p__notification)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 985, TTCN_Location::LOCATION_TEMPLATE, "mw_notify");
OneM2M__Types::RequestPrimitive_template ret_val(mw__notifyBase);
{
OneM2M__Types::Contents_template& tmp_71 = ret_val.primitiveContent().any__1();
tmp_71.set_size(1);
tmp_71[0].AT_Notification() = p__notification;
}
return ret_val;
}

OneM2M__Types::AEAnnc__optional_template m__contentCreateAEAnnc(const OneM2M__Types::Labels_template& p__labels, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING& p__appId, const UNIVERSAL_CHARSTRING_template& p__nodeLink)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1005, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateAEAnnc");
OneM2M__Types::AEAnnc__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = p__labels;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.link() = OMIT_VALUE;
ret_val.appName() = OMIT_VALUE;
ret_val.app__ID() = p__appId;
ret_val.aE__ID() = OMIT_VALUE;
ret_val.pointOfAccess() = OMIT_VALUE;
ret_val.ontologyRef() = OMIT_VALUE;
ret_val.nodeLink() = p__nodeLink;
ret_val.requestReachability() = TRUE;
ret_val.contentSerialization() = OMIT_VALUE;
ret_val.e2eSecInfo() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::AEAnnc__optional_template mw__contentCreateAEAnnc(const OneM2M__Types::Labels_template& p__labels, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1036, TTCN_Location::LOCATION_TEMPLATE, "mw_contentCreateAEAnnc");
OneM2M__Types::AEAnnc__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = p__labels;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = ANY_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.link() = ANY_VALUE;
ret_val.appName() = OMIT_VALUE;
ret_val.app__ID() = OMIT_VALUE;
ret_val.aE__ID() = OMIT_VALUE;
ret_val.pointOfAccess() = OMIT_VALUE;
ret_val.ontologyRef() = OMIT_VALUE;
ret_val.nodeLink() = OMIT_VALUE;
ret_val.requestReachability() = OMIT_VALUE;
ret_val.contentSerialization() = OMIT_VALUE;
ret_val.e2eSecInfo() = ANY_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::AE__optional_template m__contentCreateAe(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING_template& p__name, const UNIVERSAL_CHARSTRING_template& p__appId, const OneM2M__Types::PoaList_template& p__poaList)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1065, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateAe");
OneM2M__Types::AE__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.appName() = OMIT_VALUE;
ret_val.app__ID() = p__appId;
ret_val.aE__ID() = OMIT_VALUE;
ret_val.pointOfAccess() = p__poaList;
ret_val.ontologyRef() = OMIT_VALUE;
ret_val.nodeLink() = OMIT_VALUE;
ret_val.requestReachability() = TRUE;
ret_val.contentSerialization() = OMIT_VALUE;
ret_val.e2eSecInfo() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::AccessControlPolicy__optional_template m__contentCreateAcp(const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::ListOfURIs_template& p__acor, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1097, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateAcp");
OneM2M__Types::AccessControlPolicy__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
{
OneM2M__Types::SetOfAcrs_accessControlRule__list_template& tmp_72 = ret_val.privileges().accessControlRule__list();
tmp_72.set_size(1);
tmp_72[0] = m__createAcr(p__acor, p__allowedOperations).valueof();
}
{
OneM2M__Types::SetOfAcrs_accessControlRule__list_template& tmp_73 = ret_val.selfPrivileges().accessControlRule__list();
tmp_73.set_size(1);
tmp_73[0] = m__createAcr(p__acor, OneM2M__Types::AccessControlOperations_template(OneM2M__Types::AccessControlOperations::int63)).valueof();
}
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::AccessControlPolicyAnnc__optional_template mw__contentCreateAcpAnnc(const OneM2M__Types::Labels_template& p__labels)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1121, TTCN_Location::LOCATION_TEMPLATE, "mw_contentCreateAcpAnnc");
OneM2M__Types::AccessControlPolicyAnnc__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = p__labels;
ret_val.expirationTime() = ANY_VALUE;
ret_val.link() = ANY_VALUE;
ret_val.privileges() = ANY_OR_OMIT;
ret_val.selfPrivileges() = ANY_OR_OMIT;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::AccessControlRule_template m__createAcr(const OneM2M__Types::ListOfURIs_template& p__acor, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1136, TTCN_Location::LOCATION_TEMPLATE, "m_createAcr");
OneM2M__Types::AccessControlRule_template ret_val;
ret_val.accessControlOriginators() = p__acor;
ret_val.accessControlOperations() = p__allowedOperations;
ret_val.accessControlContexts__list() = NULL_VALUE;
ret_val.accessControlAuthenticationFlag() = OMIT_VALUE;
ret_val.accessControlObjectDetails__list() = NULL_VALUE;
return ret_val;
}

OneM2M__Types::CSEBase__optional_template m__contentCreateCSEBase(const OneM2M__Types::ServiceSubscribedAppRule_template& p__serviceSubscribedAppRule)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1144, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateCSEBase");
OneM2M__Types::CSEBase__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = OMIT_VALUE;
ret_val.cseType() = OMIT_VALUE;
ret_val.cSE__ID() = OMIT_VALUE;
ret_val.supportedResourceType() = OMIT_VALUE;
ret_val.pointOfAccess() = OMIT_VALUE;
ret_val.nodeLink() = OMIT_VALUE;
ret_val.e2eSecInfo() = OMIT_VALUE;
{
OneM2M__Types::CSEBase__optional_choice_choice__list_template& tmp_74 = ret_val.choice().choice__list();
tmp_74.set_size(1);
tmp_74[0].serviceSubscribedAppRule() = p__serviceSubscribedAppRule;
}
return ret_val;
}

OneM2M__Types::Group__optional_template m__contentCreateGroup(const INTEGER_template& p__maxNrOfMembers, const OneM2M__Types::ListOfURIs_template& p__memberIds, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const OneM2M__Types::MemberType_template& p__memberType, const OneM2M__Types::ConsistencyStrategy_template& p__consistencyStrategy, const OneM2M__Types::ListOfURIs_template& p__membersAccessControlPolicyIDs, const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1173, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateGroup");
OneM2M__Types::Group__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.creator() = OMIT_VALUE;
ret_val.memberType() = p__memberType;
ret_val.currentNrOfMembers() = OMIT_VALUE;
ret_val.maxNrOfMembers() = p__maxNrOfMembers;
ret_val.memberIDs() = p__memberIds;
ret_val.membersAccessControlPolicyIDs() = p__membersAccessControlPolicyIDs;
ret_val.memberTypeValidated() = OMIT_VALUE;
ret_val.consistencyStrategy() = p__consistencyStrategy;
ret_val.groupName() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::MgmtObj__optional_template m__contentCreateMgmtObj(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1235, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateMgmtObj");
OneM2M__Types::MgmtObj__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.mgmtDefinition() = OMIT_VALUE;
ret_val.objectIDs() = OMIT_VALUE;
ret_val.objectPaths() = OMIT_VALUE;
ret_val.description() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Node__optional_template m__contentCreateNode(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const UNIVERSAL_CHARSTRING_template& p__name, const UNIVERSAL_CHARSTRING_template& p__nodeId)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1281, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateNode");
OneM2M__Types::Node__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.nodeID() = p__nodeId;
ret_val.hostedCSELink() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::PollingChannel__optional_template m__contentCreatePollingChannel(const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1306, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreatePollingChannel");
OneM2M__Types::PollingChannel__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Schedule__optional_template m__contentCreateSchedule(const OneM2M__Types::ScheduleEntries_template& p__scheduleElement, const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1322, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateSchedule");
OneM2M__Types::Schedule__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.scheduleElement() = p__scheduleElement;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::ServiceSubscribedAppRule__optional_template m__contentCreateServiceSubscribedAppRule(const OneM2M__Types::ListOfM2MID& p__applicableCredIDs, const OneM2M__Types::ListOfM2MID& p__allowedAppIDs, const OneM2M__Types::ListOfM2MID& p__allowedAEs)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1354, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateServiceSubscribedAppRule");
OneM2M__Types::ServiceSubscribedAppRule__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.applicableCredIDs() = p__applicableCredIDs;
ret_val.allowedApp__IDs() = p__allowedAppIDs;
ret_val.allowedAEs() = p__allowedAEs;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Subscription__optional_template m__contentCreateSubscription(const OneM2M__Types::ListOfURIs_template& p__notificationURI, const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1377, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateSubscription");
OneM2M__Types::Subscription__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.creator() = OMIT_VALUE;
ret_val.eventNotificationCriteria() = OMIT_VALUE;
ret_val.expirationCounter() = OMIT_VALUE;
ret_val.notificationURI() = p__notificationURI;
ret_val.groupID() = OMIT_VALUE;
ret_val.notificationForwardingURI() = OMIT_VALUE;
ret_val.batchNotify() = OMIT_VALUE;
ret_val.rateLimit() = OMIT_VALUE;
ret_val.preSubscriptionNotify() = OMIT_VALUE;
ret_val.pendingNotification() = OMIT_VALUE;
ret_val.notificationStoragePriority() = OMIT_VALUE;
ret_val.latestNotify() = OMIT_VALUE;
ret_val.notificationContentType() = OMIT_VALUE;
ret_val.notificationEventCat() = OMIT_VALUE;
ret_val.subscriberURI() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Subscription__optional_template m__contentCreateSubscriptionAdvanced(const OneM2M__Types::ListOfURIs_template& p__notificationURI, const UNIVERSAL_CHARSTRING_template& p__name, const OneM2M__Types::EventNotificationCriteria_template& p__eventNotificationCriteria, const INTEGER_template& p__expirationCounter, const OneM2M__Types::BatchNotify_template& p__batchNotify, const BOOLEAN_template& p__latestNotify, const UNIVERSAL_CHARSTRING_template& p__subscriberURI, const OneM2M__Types::NotificationContentType_template& p__notificationContentType)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1407, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateSubscriptionAdvanced");
OneM2M__Types::Subscription__optional_template ret_val(m__contentCreateSubscription(p__notificationURI, p__name));
ret_val.eventNotificationCriteria() = p__eventNotificationCriteria;
ret_val.expirationCounter() = p__expirationCounter;
ret_val.batchNotify() = p__batchNotify;
ret_val.latestNotify() = p__latestNotify;
ret_val.notificationContentType() = p__notificationContentType;
ret_val.subscriberURI() = p__subscriberURI;
return ret_val;
}

OneM2M__Types::EventNotificationCriteria_template m__eventNotificationCriteria(const OneM2M__Types::EventNotificationCriteria_notificationEventType__list& p__notificationEventType__list, const OneM2M__Types::AttributeList__1_template& p__attribute__list)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1423, TTCN_Location::LOCATION_TEMPLATE, "m_eventNotificationCriteria");
OneM2M__Types::EventNotificationCriteria_template ret_val;
ret_val.createdBefore() = OMIT_VALUE;
ret_val.createdAfter() = OMIT_VALUE;
ret_val.modifiedSince() = OMIT_VALUE;
ret_val.unmodifiedSince() = OMIT_VALUE;
ret_val.stateTagSmaller() = OMIT_VALUE;
ret_val.stateTagBigger() = OMIT_VALUE;
ret_val.expireBefore() = OMIT_VALUE;
ret_val.expireAfter() = OMIT_VALUE;
ret_val.sizeAbove() = OMIT_VALUE;
ret_val.sizeBelow() = OMIT_VALUE;
ret_val.operationMonitor__list() = NULL_VALUE;
ret_val.attribute() = p__attribute__list;
ret_val.notificationEventType__list() = p__notificationEventType__list;
ret_val.missingData() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::BatchNotify_template m__batchNotifyNumber3Duration1(const INTEGER& p__number)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1440, TTCN_Location::LOCATION_TEMPLATE, "m_batchNotifyNumber3Duration1");
OneM2M__Types::BatchNotify_template ret_val;
ret_val.number() = p__number;
ret_val.duration() = cs_41;
return ret_val;
}

OneM2M__Types::ContentInstance__optional_template m__contentCreateContentInstance(const UNIVERSAL_CHARSTRING_template& p__name, const UNIVERSAL_CHARSTRING& p__primitiveContent)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1453, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateContentInstance");
OneM2M__Types::ContentInstance__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.stateTag() = OMIT_VALUE;
ret_val.creator() = OMIT_VALUE;
ret_val.contentInfo() = cs_42;
ret_val.contentSize() = OMIT_VALUE;
ret_val.contentRef() = OMIT_VALUE;
ret_val.ontologyRef() = OMIT_VALUE;
{
XSD::AnyType_template& tmp_75 = ret_val.content();
{
XSD::AnyType_embed__values_template& tmp_76 = tmp_75.embed__values();
tmp_76.set_size(1);
tmp_76[0] = p__primitiveContent;
}
tmp_75.attr() = OMIT_VALUE;
tmp_75.elem__list() = NULL_VALUE;
}
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Container__optional_template m__contentCreateContainer(const UNIVERSAL_CHARSTRING_template& p__name)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1504, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateContainer");
OneM2M__Types::Container__optional_template ret_val;
ret_val.resourceName() = p__name;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OMIT_VALUE;
ret_val.accessControlPolicyIDs() = OMIT_VALUE;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.stateTag() = OMIT_VALUE;
ret_val.creator() = OMIT_VALUE;
ret_val.maxNrOfInstances() = OMIT_VALUE;
ret_val.maxByteSize() = OMIT_VALUE;
ret_val.maxInstanceAge() = OMIT_VALUE;
ret_val.currentNrOfInstances() = OMIT_VALUE;
ret_val.currentByteSize() = OMIT_VALUE;
ret_val.locationID() = OMIT_VALUE;
ret_val.ontologyRef() = OMIT_VALUE;
ret_val.disableRetrieval() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::LocationPolicy__optional_template m__contentCreateLocationPolicy(const OneM2M__Types::LocationSource_template& p__locationSource, const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const CHARSTRING_template& p__locationUpdatePeriod, const UNIVERSAL_CHARSTRING_template& p__locationTargetID, const UNIVERSAL_CHARSTRING_template& p__locationServerAddress)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1557, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateLocationPolicy");
OneM2M__Types::LocationPolicy__optional_template ret_val;
ret_val.resourceName() = OneM2M__TypesAndValues::c__defaultLocationPolicyResourceName;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OneM2M__Pixits::PX__LABELS;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.locationSource() = p__locationSource;
ret_val.locationUpdatePeriod() = p__locationUpdatePeriod;
ret_val.locationTargetID() = p__locationTargetID;
ret_val.locationServer() = p__locationServerAddress;
ret_val.locationContainerID() = OMIT_VALUE;
ret_val.locationContainerName() = OneM2M__Pixits::PX__LOCATION__CONTAINER__NAME;
ret_val.locationStatus() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Notification__1_template m__contentCreateNotification(const OneM2M__Types::Representation_template& p__resourcePresentation, const OneM2M__Types::NotificationEventType_template& p__notifEventType, const UNIVERSAL_CHARSTRING_template& p__subReference, const UNIVERSAL_CHARSTRING_template& p__notifForwardingURI)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1605, TTCN_Location::LOCATION_TEMPLATE, "m_contentCreateNotification");
OneM2M__Types::Notification__1_template ret_val;
{
OneM2M__Types::Notification__1_notificationEvent_template& tmp_77 = ret_val.notificationEvent();
tmp_77.representation() = p__resourcePresentation;
{
OneM2M__Types::Notification__1_notificationEvent_operationMonitor_template& tmp_78 = tmp_77.operationMonitor();
tmp_78.operation() = OMIT_VALUE;
tmp_78.originator() = OMIT_VALUE;
}
tmp_77.notificationEventType() = p__notifEventType;
}
ret_val.verificationRequest() = OMIT_VALUE;
ret_val.subscriptionDeletion() = OMIT_VALUE;
ret_val.subscriptionReference() = p__subReference;
ret_val.creator() = OMIT_VALUE;
ret_val.notificationForwardingURI() = p__notifForwardingURI;
ret_val.iPEDiscoveryRequest() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::SemanticDescriptor__optional_template mw__contentCreateSemanticDescriptor__ontologyRef(const UNIVERSAL_CHARSTRING_template& p__ontologyRef)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1654, TTCN_Location::LOCATION_TEMPLATE, "mw_contentCreateSemanticDescriptor_ontologyRef");
OneM2M__Types::SemanticDescriptor__optional_template ret_val(mw__contentCreateSemanticDescriptor);
ret_val.ontologyRef() = p__ontologyRef;
return ret_val;
}

OneM2M__Types::AccessControlPolicy__optional_template m__contentUpdateAcpPrivileges(const OneM2M__Types::SetOfAcrs_template& p__privileges, const OneM2M__Types::SetOfAcrs_template& p__selfPrivileges)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1709, TTCN_Location::LOCATION_TEMPLATE, "m_contentUpdateAcpPrivileges");
OneM2M__Types::AccessControlPolicy__optional_template ret_val(m__contentUpdateAcp);
ret_val.privileges() = p__privileges;
ret_val.selfPrivileges() = p__selfPrivileges;
return ret_val;
}

OneM2M__Types::LocationPolicy__optional_template m__contentUpdateLocationPolicy(const OneM2M__Types::AcpType_template& p__accessControlPolicyIds, const CHARSTRING_template& p__locationUpdatePeriod)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 1860, TTCN_Location::LOCATION_TEMPLATE, "m_contentUpdateLocationPolicy");
OneM2M__Types::LocationPolicy__optional_template ret_val;
ret_val.resourceName() = OMIT_VALUE;
ret_val.resourceType() = OMIT_VALUE;
ret_val.resourceID() = OMIT_VALUE;
ret_val.parentID() = OMIT_VALUE;
ret_val.creationTime() = OMIT_VALUE;
ret_val.lastModifiedTime() = OMIT_VALUE;
ret_val.labels() = OneM2M__Pixits::PX__LABELS;
ret_val.accessControlPolicyIDs() = p__accessControlPolicyIds;
ret_val.expirationTime() = OMIT_VALUE;
ret_val.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
ret_val.announceTo() = OMIT_VALUE;
ret_val.announcedAttribute() = OMIT_VALUE;
ret_val.locationSource() = OMIT_VALUE;
ret_val.locationUpdatePeriod() = p__locationUpdatePeriod;
ret_val.locationTargetID() = OMIT_VALUE;
ret_val.locationServer() = OMIT_VALUE;
ret_val.locationContainerID() = OMIT_VALUE;
ret_val.locationContainerName() = OneM2M__Pixits::PX__LOCATION__CONTAINER__NAME;
ret_val.locationStatus() = OMIT_VALUE;
ret_val.choice() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::Notification__1_template mw__contentNotification(const OneM2M__Types::Representation_template& p__representation)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2654, TTCN_Location::LOCATION_TEMPLATE, "mw_contentNotification");
OneM2M__Types::Notification__1_template ret_val(mw__contentNotificationBase);
{
OneM2M__Types::Notification__1_notificationEvent_template& tmp_81 = ret_val.notificationEvent();
tmp_81.representation() = p__representation;
tmp_81.operationMonitor() = ANY_OR_OMIT;
tmp_81.notificationEventType() = ANY_VALUE;
}
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template m__responsePrimitive(const OneM2M__Types::ResponseStatusCode& p__statusCode, const UNIVERSAL_CHARSTRING& p__requestId, const OneM2M__Types::PrimitiveContent_template& p__content)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2774, TTCN_Location::LOCATION_TEMPLATE, "m_responsePrimitive");
OneM2M__Types::ResponsePrimitive_template ret_val;
ret_val.responseStatusCode() = p__statusCode;
ret_val.requestIdentifier() = p__requestId;
ret_val.primitiveContent() = p__content;
ret_val.to__() = OMIT_VALUE;
ret_val.from__() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.contentStatus() = OMIT_VALUE;
ret_val.contentOffset() = OMIT_VALUE;
ret_val.assignedTokenIdentifiers() = OMIT_VALUE;
ret_val.tokenRequestInformation() = OMIT_VALUE;
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template m__responsePrimitive__content(const OneM2M__Types::ResponseStatusCode& p__statusCode, const UNIVERSAL_CHARSTRING& p__requestId, const OneM2M__Types::PrimitiveContent_template& p__content)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2794, TTCN_Location::LOCATION_TEMPLATE, "m_responsePrimitive_content");
OneM2M__Types::ResponsePrimitive_template ret_val(m__responsePrimitive(p__statusCode, p__requestId, p__content));
ret_val.primitiveContent() = p__content;
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template mw__responsePrimitive(const OneM2M__Types::ResponseStatusCode& p__statusCode)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2798, TTCN_Location::LOCATION_TEMPLATE, "mw_responsePrimitive");
OneM2M__Types::ResponsePrimitive_template ret_val;
ret_val.responseStatusCode() = p__statusCode;
ret_val.requestIdentifier() = ANY_VALUE;
ret_val.primitiveContent() = ANY_OR_OMIT;
ret_val.to__() = ANY_OR_OMIT;
ret_val.from__() = ANY_OR_OMIT;
ret_val.originatingTimestamp() = ANY_OR_OMIT;
ret_val.resultExpirationTimestamp() = ANY_OR_OMIT;
ret_val.eventCategory() = ANY_OR_OMIT;
ret_val.contentStatus() = ANY_OR_OMIT;
ret_val.contentOffset() = ANY_OR_OMIT;
ret_val.assignedTokenIdentifiers() = ANY_OR_OMIT;
ret_val.tokenRequestInformation() = ANY_OR_OMIT;
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template mw__responsePrimitiveInverse(const OneM2M__Types::ResponseStatusCode& p__statusCode)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2813, TTCN_Location::LOCATION_TEMPLATE, "mw_responsePrimitiveInverse");
OneM2M__Types::ResponsePrimitive_template ret_val;
{
OneM2M__Types::ResponseStatusCode_template& tmp_82 = ret_val.responseStatusCode();
tmp_82.set_type(COMPLEMENTED_LIST, 1);
tmp_82.list_item(0) = p__statusCode;
}
ret_val.requestIdentifier() = ANY_VALUE;
ret_val.primitiveContent() = ANY_OR_OMIT;
ret_val.to__() = ANY_OR_OMIT;
ret_val.from__() = ANY_OR_OMIT;
ret_val.originatingTimestamp() = ANY_OR_OMIT;
ret_val.resultExpirationTimestamp() = ANY_OR_OMIT;
ret_val.eventCategory() = ANY_OR_OMIT;
ret_val.contentStatus() = ANY_OR_OMIT;
ret_val.contentOffset() = ANY_OR_OMIT;
ret_val.assignedTokenIdentifiers() = ANY_OR_OMIT;
ret_val.tokenRequestInformation() = ANY_OR_OMIT;
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template mw__responsePrimitiveOK(const OneM2M__Types::PrimitiveContent_template& p__content)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2828, TTCN_Location::LOCATION_TEMPLATE, "mw_responsePrimitiveOK");
OneM2M__Types::ResponsePrimitive_template ret_val;
{
OneM2M__Types::ResponseStatusCode_template& tmp_83 = ret_val.responseStatusCode();
tmp_83.set_type(VALUE_LIST, 4);
tmp_83.list_item(0) = OneM2M__Types::ResponseStatusCode::int2000;
tmp_83.list_item(1) = OneM2M__Types::ResponseStatusCode::int2001;
tmp_83.list_item(2) = OneM2M__Types::ResponseStatusCode::int2002;
tmp_83.list_item(3) = OneM2M__Types::ResponseStatusCode::int2004;
}
ret_val.requestIdentifier() = ANY_VALUE;
ret_val.primitiveContent() = p__content;
ret_val.to__() = ANY_OR_OMIT;
ret_val.from__() = ANY_OR_OMIT;
ret_val.originatingTimestamp() = ANY_OR_OMIT;
ret_val.resultExpirationTimestamp() = ANY_OR_OMIT;
ret_val.eventCategory() = ANY_OR_OMIT;
ret_val.contentStatus() = ANY_OR_OMIT;
ret_val.contentOffset() = ANY_OR_OMIT;
ret_val.assignedTokenIdentifiers() = ANY_OR_OMIT;
ret_val.tokenRequestInformation() = ANY_OR_OMIT;
return ret_val;
}

OneM2M__Types::ResponsePrimitive_template m__responseNotification(const OneM2M__Types::ResponseStatusCode& p__statusCode, const OneM2M__Types::PrimitiveContent_template& p__notification)
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 2858, TTCN_Location::LOCATION_TEMPLATE, "m_responseNotification");
OneM2M__Types::ResponsePrimitive_template ret_val;
ret_val.responseStatusCode() = p__statusCode;
ret_val.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_43) + f__rnd(1, 1000000));
ret_val.primitiveContent() = p__notification;
ret_val.to__() = OMIT_VALUE;
ret_val.from__() = OMIT_VALUE;
ret_val.originatingTimestamp() = OMIT_VALUE;
ret_val.resultExpirationTimestamp() = OMIT_VALUE;
ret_val.eventCategory() = OMIT_VALUE;
ret_val.contentStatus() = OMIT_VALUE;
ret_val.contentOffset() = OMIT_VALUE;
ret_val.assignedTokenIdentifiers() = OMIT_VALUE;
ret_val.tokenRequestInformation() = OMIT_VALUE;
return ret_val;
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Templates");
OneM2M__TestSystem::module_object.pre_init_module();
module_object.add_function("f_rnd", (genericfunc_t)&f__rnd, NULL);
}

static void post_init_module()
{
TTCN_Location current_location("OneM2M_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Templates");
OneM2M__TestSystem::module_object.post_init_module();
template_m__request_p__forcedFields_defval = OMIT_VALUE;
template_m__response_p__forcedFields_defval = OMIT_VALUE;
template_m__httpResponse_p__forcedFields_defval = OMIT_VALUE;
current_location.update_lineno(197);
/* OneM2M_Templates.ttcn, line 197 */
template_m__update.operation() = OneM2M__Types::Operation::int3;
template_m__update.to__() = cs_4;
template_m__update.from__() = cs_4;
template_m__update.requestIdentifier() = (cs_5 + f__rnd(1, 1000000));
template_m__update.resourceType() = OMIT_VALUE;
template_m__update.primitiveContent() = OMIT_VALUE;
template_m__update.roleIDs() = OMIT_VALUE;
template_m__update.originatingTimestamp() = OMIT_VALUE;
template_m__update.requestExpirationTimestamp() = OMIT_VALUE;
template_m__update.resultExpirationTimestamp() = OMIT_VALUE;
template_m__update.operationExecutionTime() = OMIT_VALUE;
template_m__update.responseType() = OMIT_VALUE;
template_m__update.resultPersistence() = OMIT_VALUE;
template_m__update.resultContent() = OMIT_VALUE;
template_m__update.eventCategory() = OMIT_VALUE;
template_m__update.deliveryAggregation() = OMIT_VALUE;
template_m__update.groupRequestIdentifier() = OMIT_VALUE;
template_m__update.filterCriteria() = OMIT_VALUE;
template_m__update.discoveryResultType() = OMIT_VALUE;
template_m__update.tokens() = OMIT_VALUE;
template_m__update.tokenIDs() = OMIT_VALUE;
template_m__update.localTokenIDs() = OMIT_VALUE;
template_m__update.tokenRequestIndicator() = OMIT_VALUE;
current_location.update_lineno(226);
/* OneM2M_Templates.ttcn, line 226 */
template_m__updateAeBase = m__update;
template_m__updateAeBase.requestIdentifier() = (cs_6 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_1 = template_m__updateAeBase.primitiveContent().any__1();
tmp_1.set_size(1);
template_m__contentUpdateAe.resourceName() = OMIT_VALUE;
template_m__contentUpdateAe.resourceType() = OMIT_VALUE;
template_m__contentUpdateAe.resourceID() = OMIT_VALUE;
template_m__contentUpdateAe.parentID() = OMIT_VALUE;
template_m__contentUpdateAe.creationTime() = OMIT_VALUE;
template_m__contentUpdateAe.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateAe.labels() = OMIT_VALUE;
template_m__contentUpdateAe.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateAe.expirationTime() = OMIT_VALUE;
template_m__contentUpdateAe.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateAe.announceTo() = OMIT_VALUE;
template_m__contentUpdateAe.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateAe.appName() = OMIT_VALUE;
template_m__contentUpdateAe.app__ID() = OMIT_VALUE;
template_m__contentUpdateAe.aE__ID() = OMIT_VALUE;
template_m__contentUpdateAe.pointOfAccess() = OMIT_VALUE;
template_m__contentUpdateAe.ontologyRef() = OMIT_VALUE;
template_m__contentUpdateAe.nodeLink() = OMIT_VALUE;
template_m__contentUpdateAe.requestReachability() = OMIT_VALUE;
template_m__contentUpdateAe.contentSerialization() = OMIT_VALUE;
template_m__contentUpdateAe.e2eSecInfo() = OMIT_VALUE;
template_m__contentUpdateAe.choice() = OMIT_VALUE;
tmp_1[0].AT_AE__optional() = m__contentUpdateAe;
}
current_location.update_lineno(236);
/* OneM2M_Templates.ttcn, line 236 */
template_m__updateContainerBase = m__update;
template_m__updateContainerBase.requestIdentifier() = (cs_7 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_2 = template_m__updateContainerBase.primitiveContent().any__1();
tmp_2.set_size(1);
template_m__contentUpdateContainer.resourceName() = OMIT_VALUE;
template_m__contentUpdateContainer.resourceType() = OMIT_VALUE;
template_m__contentUpdateContainer.resourceID() = OMIT_VALUE;
template_m__contentUpdateContainer.parentID() = OMIT_VALUE;
template_m__contentUpdateContainer.creationTime() = OMIT_VALUE;
template_m__contentUpdateContainer.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateContainer.labels() = OMIT_VALUE;
template_m__contentUpdateContainer.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateContainer.expirationTime() = OMIT_VALUE;
template_m__contentUpdateContainer.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateContainer.announceTo() = OMIT_VALUE;
template_m__contentUpdateContainer.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateContainer.stateTag() = OMIT_VALUE;
template_m__contentUpdateContainer.creator() = OMIT_VALUE;
template_m__contentUpdateContainer.maxNrOfInstances() = OMIT_VALUE;
template_m__contentUpdateContainer.maxByteSize() = OMIT_VALUE;
template_m__contentUpdateContainer.maxInstanceAge() = OMIT_VALUE;
template_m__contentUpdateContainer.currentNrOfInstances() = OMIT_VALUE;
template_m__contentUpdateContainer.currentByteSize() = OMIT_VALUE;
template_m__contentUpdateContainer.locationID() = OMIT_VALUE;
template_m__contentUpdateContainer.ontologyRef() = OMIT_VALUE;
template_m__contentUpdateContainer.disableRetrieval() = OMIT_VALUE;
template_m__contentUpdateContainer.choice() = OMIT_VALUE;
tmp_2[0].AT_Container__optional() = m__contentUpdateContainer;
}
current_location.update_lineno(246);
/* OneM2M_Templates.ttcn, line 246 */
template_m__updateContentInstanceBase = m__update;
template_m__updateContentInstanceBase.requestIdentifier() = (cs_8 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_3 = template_m__updateContentInstanceBase.primitiveContent().any__1();
tmp_3.set_size(1);
template_m__contentUpdateContentInstance.resourceName() = OMIT_VALUE;
template_m__contentUpdateContentInstance.resourceType() = OMIT_VALUE;
template_m__contentUpdateContentInstance.resourceID() = OMIT_VALUE;
template_m__contentUpdateContentInstance.parentID() = OMIT_VALUE;
template_m__contentUpdateContentInstance.creationTime() = OMIT_VALUE;
template_m__contentUpdateContentInstance.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateContentInstance.labels() = OMIT_VALUE;
template_m__contentUpdateContentInstance.expirationTime() = OMIT_VALUE;
template_m__contentUpdateContentInstance.announceTo() = OMIT_VALUE;
template_m__contentUpdateContentInstance.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateContentInstance.stateTag() = OMIT_VALUE;
template_m__contentUpdateContentInstance.creator() = OMIT_VALUE;
template_m__contentUpdateContentInstance.contentInfo() = OMIT_VALUE;
template_m__contentUpdateContentInstance.contentSize() = OMIT_VALUE;
template_m__contentUpdateContentInstance.contentRef() = OMIT_VALUE;
template_m__contentUpdateContentInstance.ontologyRef() = OMIT_VALUE;
template_m__contentUpdateContentInstance.content() = OMIT_VALUE;
template_m__contentUpdateContentInstance.choice() = OMIT_VALUE;
tmp_3[0].AT_ContentInstance__optional() = m__contentUpdateContentInstance;
}
current_location.update_lineno(256);
/* OneM2M_Templates.ttcn, line 256 */
template_m__updateAcpBase = m__update;
template_m__updateAcpBase.requestIdentifier() = (cs_9 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_4 = template_m__updateAcpBase.primitiveContent().any__1();
tmp_4.set_size(1);
template_m__contentUpdateAcp.resourceName() = OMIT_VALUE;
template_m__contentUpdateAcp.resourceType() = OMIT_VALUE;
template_m__contentUpdateAcp.resourceID() = OMIT_VALUE;
template_m__contentUpdateAcp.parentID() = OMIT_VALUE;
template_m__contentUpdateAcp.creationTime() = OMIT_VALUE;
template_m__contentUpdateAcp.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateAcp.labels() = OMIT_VALUE;
template_m__contentUpdateAcp.expirationTime() = OMIT_VALUE;
template_m__contentUpdateAcp.announceTo() = OMIT_VALUE;
template_m__contentUpdateAcp.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateAcp.privileges() = OMIT_VALUE;
template_m__contentUpdateAcp.selfPrivileges() = OMIT_VALUE;
template_m__contentUpdateAcp.choice() = OMIT_VALUE;
tmp_4[0].AT_AccessControlPolicy__optional() = m__contentUpdateAcp;
}
template_m__updateAcpPrivileges_p__privileges_defval = OMIT_VALUE;
template_m__updateAcpPrivileges_p__selfPrivileges_defval = OMIT_VALUE;
current_location.update_lineno(273);
/* OneM2M_Templates.ttcn, line 273 */
template_m__updateGroupBase = m__update;
template_m__updateGroupBase.requestIdentifier() = (cs_10 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_6 = template_m__updateGroupBase.primitiveContent().any__1();
tmp_6.set_size(1);
template_m__contentUpdateGroup.resourceName() = OMIT_VALUE;
template_m__contentUpdateGroup.resourceType() = OMIT_VALUE;
template_m__contentUpdateGroup.resourceID() = OMIT_VALUE;
template_m__contentUpdateGroup.parentID() = OMIT_VALUE;
template_m__contentUpdateGroup.creationTime() = OMIT_VALUE;
template_m__contentUpdateGroup.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateGroup.labels() = OMIT_VALUE;
template_m__contentUpdateGroup.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateGroup.expirationTime() = OMIT_VALUE;
template_m__contentUpdateGroup.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateGroup.announceTo() = OMIT_VALUE;
template_m__contentUpdateGroup.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateGroup.creator() = OMIT_VALUE;
template_m__contentUpdateGroup.memberType() = OMIT_VALUE;
template_m__contentUpdateGroup.currentNrOfMembers() = OMIT_VALUE;
template_m__contentUpdateGroup.maxNrOfMembers() = OMIT_VALUE;
template_m__contentUpdateGroup.memberIDs() = OMIT_VALUE;
template_m__contentUpdateGroup.membersAccessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateGroup.memberTypeValidated() = OMIT_VALUE;
template_m__contentUpdateGroup.consistencyStrategy() = OMIT_VALUE;
template_m__contentUpdateGroup.groupName() = OMIT_VALUE;
template_m__contentUpdateGroup.choice() = OMIT_VALUE;
tmp_6[0].AT_Group__optional() = m__contentUpdateGroup;
}
current_location.update_lineno(283);
/* OneM2M_Templates.ttcn, line 283 */
template_m__updateScheduleBase = m__update;
template_m__updateScheduleBase.requestIdentifier() = (cs_11 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_7 = template_m__updateScheduleBase.primitiveContent().any__1();
tmp_7.set_size(1);
template_m__contentUpdateSchedule.resourceName() = OMIT_VALUE;
template_m__contentUpdateSchedule.resourceType() = OMIT_VALUE;
template_m__contentUpdateSchedule.resourceID() = OMIT_VALUE;
template_m__contentUpdateSchedule.parentID() = OMIT_VALUE;
template_m__contentUpdateSchedule.creationTime() = OMIT_VALUE;
template_m__contentUpdateSchedule.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateSchedule.labels() = OMIT_VALUE;
template_m__contentUpdateSchedule.expirationTime() = OMIT_VALUE;
template_m__contentUpdateSchedule.announceTo() = OMIT_VALUE;
template_m__contentUpdateSchedule.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateSchedule.scheduleElement() = OMIT_VALUE;
template_m__contentUpdateSchedule.choice() = OMIT_VALUE;
tmp_7[0].AT_Schedule__optional() = m__contentUpdateSchedule;
}
current_location.update_lineno(293);
/* OneM2M_Templates.ttcn, line 293 */
template_m__updatePollingChannelBase = m__update;
template_m__updatePollingChannelBase.requestIdentifier() = (cs_12 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_8 = template_m__updatePollingChannelBase.primitiveContent().any__1();
tmp_8.set_size(1);
template_m__contentUpdatePollingChannel.resourceName() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.resourceType() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.resourceID() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.parentID() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.creationTime() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.labels() = OMIT_VALUE;
template_m__contentUpdatePollingChannel.expirationTime() = OMIT_VALUE;
tmp_8[0].AT_PollingChannel__optional() = m__contentUpdatePollingChannel;
}
current_location.update_lineno(303);
/* OneM2M_Templates.ttcn, line 303 */
template_m__updateSubscriptionBase = m__update;
template_m__updateSubscriptionBase.requestIdentifier() = (cs_13 + f__rnd(1, 1000000));
{
OneM2M__Types::Contents_template& tmp_9 = template_m__updateSubscriptionBase.primitiveContent().any__1();
tmp_9.set_size(1);
template_m__contentUpdateSubscription.resourceName() = OMIT_VALUE;
template_m__contentUpdateSubscription.resourceType() = OMIT_VALUE;
template_m__contentUpdateSubscription.resourceID() = OMIT_VALUE;
template_m__contentUpdateSubscription.parentID() = OMIT_VALUE;
template_m__contentUpdateSubscription.creationTime() = OMIT_VALUE;
template_m__contentUpdateSubscription.lastModifiedTime() = OMIT_VALUE;
template_m__contentUpdateSubscription.labels() = OMIT_VALUE;
template_m__contentUpdateSubscription.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateSubscription.expirationTime() = OMIT_VALUE;
template_m__contentUpdateSubscription.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateSubscription.creator() = OMIT_VALUE;
template_m__contentUpdateSubscription.eventNotificationCriteria() = OMIT_VALUE;
template_m__contentUpdateSubscription.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateSubscription.notificationURI() = OMIT_VALUE;
template_m__contentUpdateSubscription.groupID() = OMIT_VALUE;
template_m__contentUpdateSubscription.notificationForwardingURI() = OMIT_VALUE;
template_m__contentUpdateSubscription.batchNotify() = OMIT_VALUE;
template_m__contentUpdateSubscription.rateLimit() = OMIT_VALUE;
template_m__contentUpdateSubscription.preSubscriptionNotify() = OMIT_VALUE;
template_m__contentUpdateSubscription.pendingNotification() = OMIT_VALUE;
template_m__contentUpdateSubscription.notificationStoragePriority() = OMIT_VALUE;
template_m__contentUpdateSubscription.latestNotify() = OMIT_VALUE;
template_m__contentUpdateSubscription.notificationContentType() = OMIT_VALUE;
template_m__contentUpdateSubscription.notificationEventCat() = OMIT_VALUE;
template_m__contentUpdateSubscription.subscriberURI() = OMIT_VALUE;
template_m__contentUpdateSubscription.choice() = OMIT_VALUE;
tmp_9[0].AT_Subscription__optional() = m__contentUpdateSubscription;
}
current_location.update_lineno(322);
/* OneM2M_Templates.ttcn, line 322 */
template_m__create.operation() = OneM2M__Types::Operation::int1;
template_m__create.to__() = cs_4;
template_m__create.from__() = cs_4;
template_m__create.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_15) + f__rnd(1, 1000000));
template_m__create.resourceType() = OMIT_VALUE;
template_m__create.primitiveContent() = OMIT_VALUE;
template_m__create.roleIDs() = OMIT_VALUE;
template_m__create.originatingTimestamp() = OMIT_VALUE;
template_m__create.requestExpirationTimestamp() = OMIT_VALUE;
template_m__create.resultExpirationTimestamp() = OMIT_VALUE;
template_m__create.operationExecutionTime() = OMIT_VALUE;
template_m__create.responseType() = OMIT_VALUE;
template_m__create.resultPersistence() = OMIT_VALUE;
template_m__create.resultContent() = OMIT_VALUE;
template_m__create.eventCategory() = OMIT_VALUE;
template_m__create.deliveryAggregation() = OMIT_VALUE;
template_m__create.groupRequestIdentifier() = OMIT_VALUE;
template_m__create.filterCriteria() = OMIT_VALUE;
template_m__create.discoveryResultType() = OMIT_VALUE;
template_m__create.tokens() = OMIT_VALUE;
template_m__create.tokenIDs() = OMIT_VALUE;
template_m__create.localTokenIDs() = OMIT_VALUE;
template_m__create.tokenRequestIndicator() = OMIT_VALUE;
template_mw__create_p__from_defval = ANY_OR_OMIT;
template_mw__create_p__to_defval = ANY_VALUE;
template_m__createAEAnnc_p__accessControlPolicyIds_defval = OMIT_VALUE;
template_m__createAEAnnc_p__to_defval = OMIT_VALUE;
template_m__createAEAnnc_p__from_defval = OMIT_VALUE;
const_m__createAEAnnc_p__stemId_defval = cs_19;
template_mw__createAEAnnc_p__from_defval = OMIT_VALUE;
template_mw__createAEAnnc_p__to_defval = OMIT_VALUE;
template_mw__createAEAnnc_p__accessControlPolicyIds_defval = OMIT_VALUE;
template_m__createAe_p__accessControlPolicyIds_defval = OMIT_VALUE;
template_m__createAe_p__from_defval = OMIT_VALUE;
template_m__createAe_p__resourceName_defval = OneM2M__TypesAndValues::c__aeAuxName;
template_m__createAe_p__poaList_defval = OMIT_VALUE;
template_mw__createAe_p__from_defval = ANY_OR_OMIT;
template_mw__createAe_p__to_defval = ANY_VALUE;
template_m__createAeAux_p__accessControlPolicyIds_defval = OMIT_VALUE;
current_location.update_lineno(440);
/* OneM2M_Templates.ttcn, line 440 */
template_m__createAcpBase = m__create;
template_m__createAcpBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_21) + f__rnd(1, 1000000));
template_m__createAcpBase.resourceType() = OneM2M__Types::ResourceType::int1;
{
OneM2M__Types::Contents_template& tmp_19 = template_m__createAcpBase.primitiveContent().any__1();
tmp_19.set_size(1);
template_m__contentCreateAcp_p__name_defval = OneM2M__TypesAndValues::c__defaultAccessControlPolicyResourceName;
template_m__contentCreateAcp_p__acor_defval = OneM2M__Pixits::PX__ACOR;
template_m__contentCreateAcp_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
tmp_19[0].AT_AccessControlPolicy__optional() = m__contentCreateAcp(m__contentCreateAcp_p__name_defval, m__contentCreateAcp_p__acor_defval, m__contentCreateAcp_p__allowedOperations_defval);
}
template_m__createAcp_p__name_defval = OneM2M__TypesAndValues::c__defaultAccessControlPolicyResourceName;
template_m__createAcp_p__acor_defval = OneM2M__Pixits::PX__ACOR;
template_m__createAcp_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
template_mw__createAccessControlPolicyAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createAccessControlPolicyAnnc_p__to_defval = ANY_VALUE;
template_m__createAcpAux_p__acpName_defval = OneM2M__TypesAndValues::c__acpAuxName;
template_m__createAcpAux_p__acor_defval = OneM2M__Pixits::PX__ACOR;
template_m__createAcpAux_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
current_location.update_lineno(496);
/* OneM2M_Templates.ttcn, line 496 */
template_m__createContainerBase = m__create;
template_m__createContainerBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_24) + f__rnd(1, 1000000));
template_m__createContainerBase.resourceType() = OneM2M__Types::ResourceType::int3;
{
OneM2M__Types::Contents_template& tmp_24 = template_m__createContainerBase.primitiveContent().any__1();
tmp_24.set_size(1);
template_m__contentCreateContainer_p__name_defval = OneM2M__TypesAndValues::c__defaultContainerResourceName;
tmp_24[0].AT_Container__optional() = m__contentCreateContainer(m__contentCreateContainer_p__name_defval);
}
current_location.update_lineno(508);
/* OneM2M_Templates.ttcn, line 508 */
template_m__createContainer__noResourceName = m__createContainerBase;
{
OneM2M__Types::Contents_template& tmp_25 = template_m__createContainer__noResourceName.primitiveContent().any__1();
tmp_25.set_size(1);
tmp_25[0].AT_Container__optional() = m__contentCreateContainer(UNIVERSAL_CHARSTRING_template(OMIT_VALUE));
}
template_m__createContainer_p__resourceName_defval = OneM2M__TypesAndValues::c__defaultContainerResourceName;
template_mw__createContainer_p__from_defval = ANY_OR_OMIT;
template_mw__createContainer_p__to_defval = ANY_VALUE;
template_mw__createContainerAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createContainerAnncBase_p__to_defval = ANY_VALUE;
template_mw__createFlexContainer_p__from_defval = ANY_OR_OMIT;
template_mw__createFlexContainer_p__to_defval = ANY_VALUE;
template_mw__createGenericIwkOpInstance_p__from_defval = ANY_OR_OMIT;
template_mw__createGenericIwkOpInstance_p__to_defval = ANY_VALUE;
current_location.update_lineno(566);
/* OneM2M_Templates.ttcn, line 566 */
template_m__createContentInstanceBase = m__create;
template_m__createContentInstanceBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_25) + f__rnd(1, 1000000));
template_m__createContentInstanceBase.resourceType() = OneM2M__Types::ResourceType::int4;
{
OneM2M__Types::Contents_template& tmp_31 = template_m__createContentInstanceBase.primitiveContent().any__1();
tmp_31.set_size(1);
template_m__contentCreateContentInstance_p__name_defval = OneM2M__TypesAndValues::c__defaultContentInstanceResourceName;
const_m__contentCreateContentInstance_p__primitiveContent_defval = cs_26;
tmp_31[0].AT_ContentInstance__optional() = m__contentCreateContentInstance(m__contentCreateContentInstance_p__name_defval, m__contentCreateContentInstance_p__primitiveContent_defval);
}
current_location.update_lineno(578);
/* OneM2M_Templates.ttcn, line 578 */
template_m__createContentInstance__noResourceName = m__createContentInstanceBase;
{
OneM2M__Types::Contents_template& tmp_32 = template_m__createContentInstance__noResourceName.primitiveContent().any__1();
tmp_32.set_size(1);
tmp_32[0].AT_ContentInstance__optional() = m__contentCreateContentInstance(UNIVERSAL_CHARSTRING_template(OMIT_VALUE), m__contentCreateContentInstance_p__primitiveContent_defval);
}
template_mw__createContentInstanceAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createContentInstanceAnnc_p__to_defval = ANY_VALUE;
template_mw__createContentInstanceAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createContentInstanceAnncBase_p__to_defval = ANY_VALUE;
current_location.update_lineno(619);
/* OneM2M_Templates.ttcn, line 619 */
template_m__createGroupBase = m__create;
template_m__createGroupBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_28) + f__rnd(1, 1000000));
template_m__createGroupBase.resourceType() = OneM2M__Types::ResourceType::int9;
{
OneM2M__Types::Contents_template& tmp_36 = template_m__createGroupBase.primitiveContent().any__1();
tmp_36.set_size(1);
template_m__contentCreateGroup_p__consistencyStrategy_defval = OMIT_VALUE;
template_m__contentCreateGroup_p__membersAccessControlPolicyIDs_defval = OMIT_VALUE;
template_m__contentCreateGroup_p__name_defval = OneM2M__TypesAndValues::c__defaultGroupResourceName;
template_m__contentCreateGroup_p__memberType_defval = OMIT_VALUE;
{
OneM2M__Types::ListOfURIs_template tmp_37;
tmp_37.set_size(1);
tmp_37[0] = cs_4;
tmp_36[0].AT_Group__optional() = m__contentCreateGroup(INTEGER_template(1), tmp_37, OneM2M__Types::AcpType_template(OMIT_VALUE), OneM2M__Types::MemberType_template(OMIT_VALUE), m__contentCreateGroup_p__consistencyStrategy_defval, m__contentCreateGroup_p__membersAccessControlPolicyIDs_defval, m__contentCreateGroup_p__name_defval);
}
}
template_m__createGroup_p__memberIds_defval.set_size(1);
template_m__createGroup_p__memberIds_defval[0] = cs_4;
template_m__createGroup_p__memberType_defval = OMIT_VALUE;
template_m__createGroup_p__consistencyStrategy_defval = OMIT_VALUE;
template_m__createGroup_p__membersAccessControlPolicyIDs_defval = OMIT_VALUE;
template_m__createGroup_p__name_defval = cs_29;
template_mw__createGroupAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createGroupAnnc_p__to_defval = ANY_VALUE;
template_mw__createGroupAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createGroupAnncBase_p__to_defval = ANY_VALUE;
current_location.update_lineno(664);
/* OneM2M_Templates.ttcn, line 664 */
template_m__createMgmtObjBase = m__create;
template_m__createMgmtObjBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_30) + f__rnd(1, 1000000));
template_m__createMgmtObjBase.resourceType() = OneM2M__Types::ResourceType::int13;
{
OneM2M__Types::Contents_template& tmp_41 = template_m__createMgmtObjBase.primitiveContent().any__1();
tmp_41.set_size(1);
template_m__contentCreateMgmtObj_p__accessControlPolicyIds_defval = OMIT_VALUE;
template_m__contentCreateMgmtObj_p__name_defval = OneM2M__TypesAndValues::c__defaultMgmtObjResourceName;
tmp_41[0].AT_MgmtObj__optional() = m__contentCreateMgmtObj(m__contentCreateMgmtObj_p__accessControlPolicyIds_defval, m__contentCreateMgmtObj_p__name_defval);
}
current_location.update_lineno(675);
/* OneM2M_Templates.ttcn, line 675 */
template_m__createMgmtObj = m__create;
template_m__createMgmtObj.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_30) + f__rnd(1, 1000000));
template_m__createMgmtObj.resourceType() = OneM2M__Types::ResourceType::int13;
{
OneM2M__Types::Contents_template& tmp_42 = template_m__createMgmtObj.primitiveContent().any__1();
tmp_42.set_size(1);
tmp_42[0].AT_MgmtObj__optional() = m__contentCreateMgmtObj(m__contentCreateMgmtObj_p__accessControlPolicyIds_defval, m__contentCreateMgmtObj_p__name_defval);
}
template_mw__createMgmtObjAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createMgmtObjAnnc_p__to_defval = ANY_VALUE;
template_mw__createMgmtObjAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createMgmtObjAnncBase_p__to_defval = ANY_VALUE;
current_location.update_lineno(706);
/* OneM2M_Templates.ttcn, line 706 */
template_m__createNodeBase = m__create;
template_m__createNodeBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_31) + f__rnd(1, 1000000));
template_m__createNodeBase.resourceType() = OneM2M__Types::ResourceType::int14;
{
OneM2M__Types::Contents_template& tmp_45 = template_m__createNodeBase.primitiveContent().any__1();
tmp_45.set_size(1);
template_m__contentCreateNode_p__accessControlPolicyIds_defval = OMIT_VALUE;
template_m__contentCreateNode_p__name_defval = OneM2M__TypesAndValues::c__defaultNodeResourceName;
template_m__contentCreateNode_p__nodeId_defval = cs_32;
tmp_45[0].AT_Node__optional() = m__contentCreateNode(m__contentCreateNode_p__accessControlPolicyIds_defval, m__contentCreateNode_p__name_defval, m__contentCreateNode_p__nodeId_defval);
}
current_location.update_lineno(717);
/* OneM2M_Templates.ttcn, line 717 */
template_m__createNode = m__create;
template_m__createNode.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_31) + f__rnd(1, 1000000));
template_m__createNode.resourceType() = OneM2M__Types::ResourceType::int14;
{
OneM2M__Types::Contents_template& tmp_46 = template_m__createNode.primitiveContent().any__1();
tmp_46.set_size(1);
tmp_46[0].AT_Node__optional() = m__contentCreateNode(m__contentCreateNode_p__accessControlPolicyIds_defval, m__contentCreateNode_p__name_defval, m__contentCreateNode_p__nodeId_defval);
}
template_mw__createNodeAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createNodeAnnc_p__to_defval = ANY_VALUE;
current_location.update_lineno(738);
/* OneM2M_Templates.ttcn, line 738 */
template_m__createPollingChannelBase = m__create;
template_m__createPollingChannelBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_33) + f__rnd(1, 1000000));
template_m__createPollingChannelBase.resourceType() = OneM2M__Types::ResourceType::int15;
{
OneM2M__Types::Contents_template& tmp_48 = template_m__createPollingChannelBase.primitiveContent().any__1();
tmp_48.set_size(1);
template_m__contentCreatePollingChannel_p__name_defval = OneM2M__TypesAndValues::c__defaultPollingChannelResourceName;
tmp_48[0].AT_PollingChannel__optional() = m__contentCreatePollingChannel(m__contentCreatePollingChannel_p__name_defval);
}
current_location.update_lineno(759);
/* OneM2M_Templates.ttcn, line 759 */
template_m__createScheduleBase = m__create;
template_m__createScheduleBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_34) + f__rnd(1, 1000000));
template_m__createScheduleBase.resourceType() = OneM2M__Types::ResourceType::int18;
{
OneM2M__Types::Contents_template& tmp_50 = template_m__createScheduleBase.primitiveContent().any__1();
tmp_50.set_size(1);
template_m__contentCreateSchedule_p__name_defval = OneM2M__TypesAndValues::c__defaultScheduleResourceName;
{
OneM2M__Types::ScheduleEntries_template tmp_51;
{
OneM2M__Types::ScheduleEntries_scheduleEntry__list_template& tmp_52 = tmp_51.scheduleEntry__list();
tmp_52.set_size(1);
tmp_52[0] = cs_35;
}
tmp_50[0].AT_Schedule__optional() = m__contentCreateSchedule(tmp_51, m__contentCreateSchedule_p__name_defval);
}
}
template_mw__createScheduleAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createScheduleAnnc_p__to_defval = ANY_VALUE;
template_mw__createScheduleAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createScheduleAnncBase_p__to_defval = ANY_VALUE;
current_location.update_lineno(808);
/* OneM2M_Templates.ttcn, line 808 */
template_m__createSubscriptionBase = m__create;
template_m__createSubscriptionBase.requestIdentifier() = ((TTCN_Runtime::get_testcasename() + cs_37) + f__rnd(1, 1000000));
template_m__createSubscriptionBase.resourceType() = OneM2M__Types::ResourceType::int23;
{
OneM2M__Types::Contents_template& tmp_57 = template_m__createSubscriptionBase.primitiveContent().any__1();
tmp_57.set_size(1);
template_m__contentCreateSubscription_p__name_defval = OneM2M__TypesAndValues::c__defaultSubscriptionResourceName;
{
OneM2M__Types::ListOfURIs_template tmp_58;
tmp_58.set_size(1);
tmp_58[0] = cs_4;
tmp_57[0].AT_Subscription__optional() = m__contentCreateSubscription(tmp_58, m__contentCreateSubscription_p__name_defval);
}
}
template_m__createSubscription_p__notificationURI_defval.set_size(1);
template_m__createSubscription_p__notificationURI_defval[0] = cs_4;
template_m__createSubscriptionAdvanced_p__name_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__eventNotificationCriteria_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__expirationCounter_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__batchNotify_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__latestNotify_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__subscriberURI_defval = OMIT_VALUE;
template_m__createSubscriptionAdvanced_p__notificationContentType_defval = OneM2M__Types::NotificationContentType::int1;
template_mw__createLocationPolicyAnnc_p__from_defval = ANY_OR_OMIT;
template_mw__createLocationPolicyAnnc_p__to_defval = ANY_VALUE;
template_mw__createLocationPolicyAnncBase_p__from_defval = ANY_OR_OMIT;
template_mw__createLocationPolicyAnncBase_p__to_defval = ANY_VALUE;
template_mw__createSemanticDescriptor_p__from_defval = ANY_OR_OMIT;
template_mw__createSemanticDescriptor_p__to_defval = ANY_VALUE;
template_mw__contentCreateSemanticDescriptor.resourceName() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.resourceType() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.resourceID() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.parentID() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.creationTime() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.labels() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.expirationTime() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.announceTo() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.creator() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.descriptorRepresentation() = ANY_VALUE;
template_mw__contentCreateSemanticDescriptor.semanticOpExec() = OMIT_VALUE;
template_mw__contentCreateSemanticDescriptor.descriptor() = ANY_VALUE;
template_mw__contentCreateSemanticDescriptor.ontologyRef() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.relatedSemantics() = ANY_OR_OMIT;
template_mw__contentCreateSemanticDescriptor.choice() = ANY_OR_OMIT;
template_mw__createSemanticDescriptor_p__semanticDescriptor_defval = mw__contentCreateSemanticDescriptor;
const_m__deleteRequest_p__originator_defval = OneM2M__Pixits::PX__SUPER__USER;
current_location.update_lineno(926);
/* OneM2M_Templates.ttcn, line 926 */
template_mw__notifyBase.operation() = OneM2M__Types::Operation::int5;
template_mw__notifyBase.to__() = ANY_VALUE;
template_mw__notifyBase.from__() = ANY_OR_OMIT;
template_mw__notifyBase.requestIdentifier() = ANY_VALUE;
template_mw__notifyBase.resourceType() = ANY_OR_OMIT;
{
OneM2M__Types::Contents_template& tmp_69 = template_mw__notifyBase.primitiveContent().any__1();
tmp_69.set_size(1);
template_mw__contentNotificationBase.notificationEvent() = ANY_OR_OMIT;
template_mw__contentNotificationBase.verificationRequest() = ANY_OR_OMIT;
template_mw__contentNotificationBase.subscriptionDeletion() = ANY_OR_OMIT;
template_mw__contentNotificationBase.subscriptionReference() = ANY_VALUE;
template_mw__contentNotificationBase.creator() = ANY_OR_OMIT;
template_mw__contentNotificationBase.notificationForwardingURI() = ANY_OR_OMIT;
template_mw__contentNotificationBase.iPEDiscoveryRequest() = ANY_OR_OMIT;
tmp_69[0].AT_Notification() = mw__contentNotificationBase;
}
template_mw__notifyBase.roleIDs() = ANY_OR_OMIT;
template_mw__notifyBase.originatingTimestamp() = ANY_OR_OMIT;
template_mw__notifyBase.requestExpirationTimestamp() = ANY_OR_OMIT;
template_mw__notifyBase.resultExpirationTimestamp() = ANY_OR_OMIT;
template_mw__notifyBase.operationExecutionTime() = ANY_OR_OMIT;
template_mw__notifyBase.responseType() = ANY_OR_OMIT;
template_mw__notifyBase.resultPersistence() = ANY_OR_OMIT;
template_mw__notifyBase.resultContent() = ANY_OR_OMIT;
template_mw__notifyBase.eventCategory() = ANY_OR_OMIT;
template_mw__notifyBase.deliveryAggregation() = ANY_OR_OMIT;
template_mw__notifyBase.groupRequestIdentifier() = ANY_OR_OMIT;
template_mw__notifyBase.filterCriteria() = ANY_OR_OMIT;
template_mw__notifyBase.discoveryResultType() = ANY_OR_OMIT;
template_mw__notifyBase.tokens() = ANY_OR_OMIT;
template_mw__notifyBase.tokenIDs() = ANY_OR_OMIT;
template_mw__notifyBase.localTokenIDs() = ANY_OR_OMIT;
template_mw__notifyBase.tokenRequestIndicator() = ANY_OR_OMIT;
current_location.update_lineno(955);
/* OneM2M_Templates.ttcn, line 955 */
template_mw__aggregatedNotifyBase.operation() = OneM2M__Types::Operation::int5;
template_mw__aggregatedNotifyBase.to__() = ANY_VALUE;
template_mw__aggregatedNotifyBase.from__() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.requestIdentifier() = ANY_VALUE;
template_mw__aggregatedNotifyBase.resourceType() = ANY_OR_OMIT;
{
OneM2M__Types::Contents_template& tmp_70 = template_mw__aggregatedNotifyBase.primitiveContent().any__1();
tmp_70.set_size(1);
tmp_70[0].AT_AggregatedNotification() = ANY_VALUE;
}
template_mw__aggregatedNotifyBase.roleIDs() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.originatingTimestamp() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.requestExpirationTimestamp() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.resultExpirationTimestamp() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.operationExecutionTime() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.responseType() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.resultPersistence() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.resultContent() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.eventCategory() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.deliveryAggregation() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.groupRequestIdentifier() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.filterCriteria() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.discoveryResultType() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.tokens() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.tokenIDs() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.localTokenIDs() = ANY_OR_OMIT;
template_mw__aggregatedNotifyBase.tokenRequestIndicator() = ANY_OR_OMIT;
const_m__contentCreateAEAnnc_p__appId_defval = OneM2M__Pixits::PX__APP__ID;
template_m__contentCreateAEAnnc_p__nodeLink_defval = OMIT_VALUE;
template_mw__contentCreateAEAnnc_p__labels_defval = ANY_VALUE;
template_mw__contentCreateAEAnnc_p__accessControlPolicyIds_defval = ANY_VALUE;
template_m__contentCreateAe_p__name_defval = OneM2M__TypesAndValues::c__defaultAeResourceName;
template_m__contentCreateAe_p__appId_defval = OneM2M__Pixits::PX__APP__ID;
template_mw__contentCreateAcpAnnc_p__labels_defval = OMIT_VALUE;
current_location.update_lineno(1207);
/* OneM2M_Templates.ttcn, line 1207 */
template_mw__contentCreateGroupAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateGroupAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateGroupAnncBase.accessControlPolicyIDs() = ANY_VALUE;
template_mw__contentCreateGroupAnncBase.expirationTime() = ANY_VALUE;
template_mw__contentCreateGroupAnncBase.link() = ANY_VALUE;
template_mw__contentCreateGroupAnncBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.memberType() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.currentNrOfMembers() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.maxNrOfMembers() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.memberIDs() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.membersAccessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.memberTypeValidated() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.consistencyStrategy() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.groupName() = ANY_OR_OMIT;
template_mw__contentCreateGroupAnncBase.choice() = OMIT_VALUE;
current_location.update_lineno(1258);
/* OneM2M_Templates.ttcn, line 1258 */
template_mw__contentCreateMgmtObjAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateMgmtObjAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateMgmtObjAnncBase.accessControlPolicyIDs() = ANY_VALUE;
template_mw__contentCreateMgmtObjAnncBase.expirationTime() = ANY_VALUE;
template_mw__contentCreateMgmtObjAnncBase.link() = ANY_VALUE;
template_mw__contentCreateMgmtObjAnncBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentCreateMgmtObjAnncBase.mgmtDefinition() = ANY_VALUE;
template_mw__contentCreateMgmtObjAnncBase.objectIDs() = ANY_OR_OMIT;
template_mw__contentCreateMgmtObjAnncBase.objectPaths() = ANY_OR_OMIT;
template_mw__contentCreateMgmtObjAnncBase.description() = ANY_OR_OMIT;
current_location.update_lineno(1341);
/* OneM2M_Templates.ttcn, line 1341 */
template_mw__contentCreateScheduleAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateScheduleAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateScheduleAnncBase.expirationTime() = ANY_VALUE;
template_mw__contentCreateScheduleAnncBase.link() = ANY_VALUE;
template_mw__contentCreateScheduleAnncBase.scheduleElement() = ANY_OR_OMIT;
template_m__contentCreateSubscriptionAdvanced_p__name_defval = OneM2M__TypesAndValues::c__defaultSubscriptionResourceName;
const_m__eventNotificationCriteria_p__notificationEventType__list_defval = NULL_VALUE;
template_m__eventNotificationCriteria_p__attribute__list_defval = OMIT_VALUE;
current_location.update_lineno(1482);
/* OneM2M_Templates.ttcn, line 1482 */
template_mw__contentCreateContentInstanceAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateContentInstanceAnncBase.expirationTime() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.link() = OMIT_VALUE;
template_mw__contentCreateContentInstanceAnncBase.stateTag() = ANY_OR_OMIT;
template_mw__contentCreateContentInstanceAnncBase.contentInfo() = ANY_OR_OMIT;
template_mw__contentCreateContentInstanceAnncBase.contentSize() = ANY_OR_OMIT;
template_mw__contentCreateContentInstanceAnncBase.ontologyRef() = ANY_OR_OMIT;
template_mw__contentCreateContentInstanceAnncBase.content() = ANY_OR_OMIT;
template_mw__contentCreateContentInstanceAnncBase.choice() = OMIT_VALUE;
current_location.update_lineno(1533);
/* OneM2M_Templates.ttcn, line 1533 */
template_mw__contentCreateContainerAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateContainerAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateContainerAnncBase.accessControlPolicyIDs() = ANY_VALUE;
template_mw__contentCreateContainerAnncBase.expirationTime() = ANY_VALUE;
template_mw__contentCreateContainerAnncBase.link() = ANY_VALUE;
template_mw__contentCreateContainerAnncBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.stateTag() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.maxNrOfInstances() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.maxByteSize() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.maxInstanceAge() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.currentNrOfInstances() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.currentByteSize() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.locationID() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.ontologyRef() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.disableRetrieval() = ANY_OR_OMIT;
template_mw__contentCreateContainerAnncBase.choice() = OMIT_VALUE;
current_location.update_lineno(1584);
/* OneM2M_Templates.ttcn, line 1584 */
template_mw__contentCreateLocationPolicyAnncBase.resourceName() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.resourceType() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.resourceID() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.parentID() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.creationTime() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.lastModifiedTime() = OMIT_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.labels() = ANY_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.accessControlPolicyIDs() = ANY_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.expirationTime() = ANY_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.link() = ANY_VALUE;
template_mw__contentCreateLocationPolicyAnncBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationSource() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationUpdatePeriod() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationTargetID() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationServer() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationContainerID() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationContainerName() = ANY_OR_OMIT;
template_mw__contentCreateLocationPolicyAnncBase.locationStatus() = ANY_OR_OMIT;
current_location.update_lineno(1628);
/* OneM2M_Templates.ttcn, line 1628 */
current_location.update_lineno(1665);
/* OneM2M_Templates.ttcn, line 1665 */
current_location.update_lineno(1693);
/* OneM2M_Templates.ttcn, line 1693 */
current_location.update_lineno(1717);
/* OneM2M_Templates.ttcn, line 1717 */
current_location.update_lineno(1746);
/* OneM2M_Templates.ttcn, line 1746 */
current_location.update_lineno(1760);
/* OneM2M_Templates.ttcn, line 1760 */
current_location.update_lineno(1778);
/* OneM2M_Templates.ttcn, line 1778 */
current_location.update_lineno(1810);
/* OneM2M_Templates.ttcn, line 1810 */
current_location.update_lineno(1839);
/* OneM2M_Templates.ttcn, line 1839 */
current_location.update_lineno(1887);
/* OneM2M_Templates.ttcn, line 1887 */
template_mw__contentAeBase.resourceName() = ANY_VALUE;
template_mw__contentAeBase.resourceType() = ANY_VALUE;
template_mw__contentAeBase.resourceID() = ANY_VALUE;
template_mw__contentAeBase.parentID() = ANY_VALUE;
template_mw__contentAeBase.creationTime() = ANY_VALUE;
template_mw__contentAeBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentAeBase.labels() = ANY_OR_OMIT;
template_mw__contentAeBase.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentAeBase.expirationTime() = ANY_VALUE;
template_mw__contentAeBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentAeBase.announceTo() = ANY_OR_OMIT;
template_mw__contentAeBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentAeBase.appName() = ANY_OR_OMIT;
template_mw__contentAeBase.app__ID() = ANY_VALUE;
template_mw__contentAeBase.aE__ID() = ANY_VALUE;
template_mw__contentAeBase.pointOfAccess() = ANY_OR_OMIT;
template_mw__contentAeBase.ontologyRef() = ANY_OR_OMIT;
template_mw__contentAeBase.nodeLink() = ANY_OR_OMIT;
template_mw__contentAeBase.requestReachability() = ANY_VALUE;
template_mw__contentAeBase.contentSerialization() = ANY_OR_OMIT;
template_mw__contentAeBase.e2eSecInfo() = ANY_OR_OMIT;
template_mw__contentAeBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(1912);
/* OneM2M_Templates.ttcn, line 1912 */
template_m__contentAe__allOmit.resourceName() = OMIT_VALUE;
template_m__contentAe__allOmit.resourceType() = OMIT_VALUE;
template_m__contentAe__allOmit.resourceID() = OMIT_VALUE;
template_m__contentAe__allOmit.parentID() = OMIT_VALUE;
template_m__contentAe__allOmit.creationTime() = OMIT_VALUE;
template_m__contentAe__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentAe__allOmit.labels() = OMIT_VALUE;
template_m__contentAe__allOmit.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentAe__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentAe__allOmit.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentAe__allOmit.announceTo() = OMIT_VALUE;
template_m__contentAe__allOmit.announcedAttribute() = OMIT_VALUE;
template_m__contentAe__allOmit.appName() = OMIT_VALUE;
template_m__contentAe__allOmit.app__ID() = OMIT_VALUE;
template_m__contentAe__allOmit.aE__ID() = OMIT_VALUE;
template_m__contentAe__allOmit.pointOfAccess() = OMIT_VALUE;
template_m__contentAe__allOmit.ontologyRef() = OMIT_VALUE;
template_m__contentAe__allOmit.nodeLink() = OMIT_VALUE;
template_m__contentAe__allOmit.requestReachability() = OMIT_VALUE;
template_m__contentAe__allOmit.contentSerialization() = OMIT_VALUE;
template_m__contentAe__allOmit.e2eSecInfo() = OMIT_VALUE;
template_m__contentAe__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(1937);
/* OneM2M_Templates.ttcn, line 1937 */
template_mw__contentAe__any.resourceName() = ANY_OR_OMIT;
template_mw__contentAe__any.resourceType() = ANY_OR_OMIT;
template_mw__contentAe__any.resourceID() = ANY_OR_OMIT;
template_mw__contentAe__any.parentID() = ANY_OR_OMIT;
template_mw__contentAe__any.creationTime() = ANY_OR_OMIT;
template_mw__contentAe__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentAe__any.labels() = ANY_OR_OMIT;
template_mw__contentAe__any.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentAe__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentAe__any.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentAe__any.announceTo() = ANY_OR_OMIT;
template_mw__contentAe__any.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentAe__any.appName() = ANY_OR_OMIT;
template_mw__contentAe__any.app__ID() = ANY_OR_OMIT;
template_mw__contentAe__any.aE__ID() = ANY_OR_OMIT;
template_mw__contentAe__any.pointOfAccess() = ANY_OR_OMIT;
template_mw__contentAe__any.ontologyRef() = ANY_OR_OMIT;
template_mw__contentAe__any.nodeLink() = ANY_OR_OMIT;
template_mw__contentAe__any.requestReachability() = ANY_OR_OMIT;
template_mw__contentAe__any.contentSerialization() = ANY_OR_OMIT;
template_mw__contentAe__any.e2eSecInfo() = ANY_OR_OMIT;
template_mw__contentAe__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(1962);
/* OneM2M_Templates.ttcn, line 1962 */
template_mw__contentAcpBase.resourceName() = ANY_VALUE;
template_mw__contentAcpBase.resourceType() = ANY_VALUE;
template_mw__contentAcpBase.resourceID() = ANY_VALUE;
template_mw__contentAcpBase.parentID() = ANY_VALUE;
template_mw__contentAcpBase.creationTime() = ANY_VALUE;
template_mw__contentAcpBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentAcpBase.labels() = ANY_OR_OMIT;
template_mw__contentAcpBase.expirationTime() = ANY_VALUE;
template_mw__contentAcpBase.announceTo() = ANY_OR_OMIT;
template_mw__contentAcpBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentAcpBase.privileges() = ANY_VALUE;
template_mw__contentAcpBase.selfPrivileges() = ANY_VALUE;
template_mw__contentAcpBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(1978);
/* OneM2M_Templates.ttcn, line 1978 */
template_mw__contentAcp__any.resourceName() = ANY_OR_OMIT;
template_mw__contentAcp__any.resourceType() = ANY_OR_OMIT;
template_mw__contentAcp__any.resourceID() = ANY_OR_OMIT;
template_mw__contentAcp__any.parentID() = ANY_OR_OMIT;
template_mw__contentAcp__any.creationTime() = ANY_OR_OMIT;
template_mw__contentAcp__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentAcp__any.labels() = ANY_OR_OMIT;
template_mw__contentAcp__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentAcp__any.announceTo() = ANY_OR_OMIT;
template_mw__contentAcp__any.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentAcp__any.privileges() = ANY_OR_OMIT;
template_mw__contentAcp__any.selfPrivileges() = ANY_OR_OMIT;
template_mw__contentAcp__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(1994);
/* OneM2M_Templates.ttcn, line 1994 */
template_m__contentAcp__allOmit.resourceName() = OMIT_VALUE;
template_m__contentAcp__allOmit.resourceType() = OMIT_VALUE;
template_m__contentAcp__allOmit.resourceID() = OMIT_VALUE;
template_m__contentAcp__allOmit.parentID() = OMIT_VALUE;
template_m__contentAcp__allOmit.creationTime() = OMIT_VALUE;
template_m__contentAcp__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentAcp__allOmit.labels() = OMIT_VALUE;
template_m__contentAcp__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentAcp__allOmit.announceTo() = OMIT_VALUE;
template_m__contentAcp__allOmit.announcedAttribute() = OMIT_VALUE;
template_m__contentAcp__allOmit.privileges() = OMIT_VALUE;
template_m__contentAcp__allOmit.selfPrivileges() = OMIT_VALUE;
template_m__contentAcp__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(2010);
/* OneM2M_Templates.ttcn, line 2010 */
template_mw__contentAcp__rc1 = mw__contentAcpBase;
template_mw__contentAcp__rc1.choice() = OMIT_VALUE;
current_location.update_lineno(2015);
/* OneM2M_Templates.ttcn, line 2015 */
template_mw__contentAcp__rc2 = ANY_VALUE;
current_location.update_lineno(2017);
/* OneM2M_Templates.ttcn, line 2017 */
template_mw__contentAcp__rc3.choice().sg__announceableSubordinateResource().accessControlPolicy() = ANY_VALUE;
template_mw__contentAcp__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2022);
/* OneM2M_Templates.ttcn, line 2022 */
template_mw__contentAcp__rc4 = mw__contentAcpBase;
template_mw__contentAcp__rc4.choice().subscription__list() = ANY_VALUE;
current_location.update_lineno(2026);
/* OneM2M_Templates.ttcn, line 2026 */
template_mw__contentAcp__rc5 = mw__contentAcpBase;
template_mw__contentAcp__rc5.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2030);
/* OneM2M_Templates.ttcn, line 2030 */
template_mw__contentAcp__rc6 = mw__contentAcpBase;
template_mw__contentAcp__rc6.resourceName() = OMIT_VALUE;
template_mw__contentAcp__rc6.resourceType() = OMIT_VALUE;
template_mw__contentAcp__rc6.resourceID() = OMIT_VALUE;
template_mw__contentAcp__rc6.parentID() = OMIT_VALUE;
template_mw__contentAcp__rc6.creationTime() = OMIT_VALUE;
template_mw__contentAcp__rc6.lastModifiedTime() = OMIT_VALUE;
template_mw__contentAcp__rc6.labels() = OMIT_VALUE;
template_mw__contentAcp__rc6.expirationTime() = OMIT_VALUE;
template_mw__contentAcp__rc6.announceTo() = OMIT_VALUE;
template_mw__contentAcp__rc6.announcedAttribute() = OMIT_VALUE;
template_mw__contentAcp__rc6.privileges() = OMIT_VALUE;
template_mw__contentAcp__rc6.selfPrivileges() = OMIT_VALUE;
template_mw__contentAcp__rc6.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2046);
/* OneM2M_Templates.ttcn, line 2046 */
template_mw__contentAcp__rc7 = mw__contentAcpBase;
current_location.update_lineno(2050);
/* OneM2M_Templates.ttcn, line 2050 */
template_mw__contentAcp__rc8 = m__contentAcp__allOmit;
template_mw__contentAcp__rc8.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2054);
/* OneM2M_Templates.ttcn, line 2054 */
template_mw__contentGroupBase.resourceName() = ANY_VALUE;
template_mw__contentGroupBase.resourceType() = ANY_VALUE;
template_mw__contentGroupBase.resourceID() = ANY_VALUE;
template_mw__contentGroupBase.parentID() = ANY_VALUE;
template_mw__contentGroupBase.creationTime() = ANY_VALUE;
template_mw__contentGroupBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentGroupBase.labels() = ANY_OR_OMIT;
template_mw__contentGroupBase.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentGroupBase.expirationTime() = ANY_VALUE;
template_mw__contentGroupBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentGroupBase.announceTo() = ANY_OR_OMIT;
template_mw__contentGroupBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentGroupBase.creator() = ANY_OR_OMIT;
template_mw__contentGroupBase.memberType() = ANY_VALUE;
template_mw__contentGroupBase.currentNrOfMembers() = ANY_VALUE;
template_mw__contentGroupBase.maxNrOfMembers() = ANY_VALUE;
template_mw__contentGroupBase.memberIDs() = ANY_VALUE;
template_mw__contentGroupBase.membersAccessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentGroupBase.memberTypeValidated() = ANY_OR_OMIT;
template_mw__contentGroupBase.consistencyStrategy() = ANY_OR_OMIT;
template_mw__contentGroupBase.groupName() = ANY_OR_OMIT;
template_mw__contentGroupBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(2079);
/* OneM2M_Templates.ttcn, line 2079 */
template_mw__contentGroup__any.resourceName() = ANY_OR_OMIT;
template_mw__contentGroup__any.resourceType() = ANY_OR_OMIT;
template_mw__contentGroup__any.resourceID() = ANY_OR_OMIT;
template_mw__contentGroup__any.parentID() = ANY_OR_OMIT;
template_mw__contentGroup__any.creationTime() = ANY_OR_OMIT;
template_mw__contentGroup__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentGroup__any.labels() = ANY_OR_OMIT;
template_mw__contentGroup__any.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentGroup__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentGroup__any.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentGroup__any.announceTo() = ANY_OR_OMIT;
template_mw__contentGroup__any.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentGroup__any.creator() = ANY_OR_OMIT;
template_mw__contentGroup__any.memberType() = ANY_OR_OMIT;
template_mw__contentGroup__any.currentNrOfMembers() = ANY_OR_OMIT;
template_mw__contentGroup__any.maxNrOfMembers() = ANY_OR_OMIT;
template_mw__contentGroup__any.memberIDs() = ANY_OR_OMIT;
template_mw__contentGroup__any.membersAccessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentGroup__any.memberTypeValidated() = ANY_OR_OMIT;
template_mw__contentGroup__any.consistencyStrategy() = ANY_OR_OMIT;
template_mw__contentGroup__any.groupName() = ANY_OR_OMIT;
template_mw__contentGroup__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(2104);
/* OneM2M_Templates.ttcn, line 2104 */
template_m__contentGroup__allOmit.resourceName() = OMIT_VALUE;
template_m__contentGroup__allOmit.resourceType() = OMIT_VALUE;
template_m__contentGroup__allOmit.resourceID() = OMIT_VALUE;
template_m__contentGroup__allOmit.parentID() = OMIT_VALUE;
template_m__contentGroup__allOmit.creationTime() = OMIT_VALUE;
template_m__contentGroup__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentGroup__allOmit.labels() = OMIT_VALUE;
template_m__contentGroup__allOmit.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentGroup__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentGroup__allOmit.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentGroup__allOmit.announceTo() = OMIT_VALUE;
template_m__contentGroup__allOmit.announcedAttribute() = OMIT_VALUE;
template_m__contentGroup__allOmit.creator() = OMIT_VALUE;
template_m__contentGroup__allOmit.memberType() = OMIT_VALUE;
template_m__contentGroup__allOmit.currentNrOfMembers() = OMIT_VALUE;
template_m__contentGroup__allOmit.maxNrOfMembers() = OMIT_VALUE;
template_m__contentGroup__allOmit.memberIDs() = OMIT_VALUE;
template_m__contentGroup__allOmit.membersAccessControlPolicyIDs() = OMIT_VALUE;
template_m__contentGroup__allOmit.memberTypeValidated() = OMIT_VALUE;
template_m__contentGroup__allOmit.consistencyStrategy() = OMIT_VALUE;
template_m__contentGroup__allOmit.groupName() = OMIT_VALUE;
template_m__contentGroup__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(2129);
/* OneM2M_Templates.ttcn, line 2129 */
template_mw__contentGroup__rc1 = mw__contentGroupBase;
template_mw__contentGroup__rc1.choice() = OMIT_VALUE;
current_location.update_lineno(2133);
/* OneM2M_Templates.ttcn, line 2133 */
template_mw__contentGroup__rc2 = ANY_VALUE;
current_location.update_lineno(2135);
/* OneM2M_Templates.ttcn, line 2135 */
template_mw__contentGroup__rc3.choice().sg__announceableResource().group__() = ANY_VALUE;
template_mw__contentGroup__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2140);
/* OneM2M_Templates.ttcn, line 2140 */
template_mw__contentGroup__rc4 = mw__contentGroupBase;
{
OneM2M__Types::Group__optional_choice_choice__list_template& tmp_79 = template_mw__contentGroup__rc4.choice().choice__list();
tmp_79.set_size(1);
tmp_79[0].subscription() = ANY_VALUE;
}
current_location.update_lineno(2144);
/* OneM2M_Templates.ttcn, line 2144 */
template_mw__contentGroup__rc5 = mw__contentGroupBase;
template_mw__contentGroup__rc5.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2148);
/* OneM2M_Templates.ttcn, line 2148 */
template_mw__contentGroup__rc6 = mw__contentGroupBase;
template_mw__contentGroup__rc6.resourceName() = OMIT_VALUE;
template_mw__contentGroup__rc6.resourceType() = OMIT_VALUE;
template_mw__contentGroup__rc6.resourceID() = OMIT_VALUE;
template_mw__contentGroup__rc6.parentID() = OMIT_VALUE;
template_mw__contentGroup__rc6.creationTime() = OMIT_VALUE;
template_mw__contentGroup__rc6.lastModifiedTime() = OMIT_VALUE;
template_mw__contentGroup__rc6.labels() = OMIT_VALUE;
template_mw__contentGroup__rc6.accessControlPolicyIDs() = OMIT_VALUE;
template_mw__contentGroup__rc6.expirationTime() = OMIT_VALUE;
template_mw__contentGroup__rc6.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_mw__contentGroup__rc6.announceTo() = OMIT_VALUE;
template_mw__contentGroup__rc6.announcedAttribute() = OMIT_VALUE;
template_mw__contentGroup__rc6.creator() = OMIT_VALUE;
template_mw__contentGroup__rc6.memberType() = OMIT_VALUE;
template_mw__contentGroup__rc6.currentNrOfMembers() = OMIT_VALUE;
template_mw__contentGroup__rc6.maxNrOfMembers() = OMIT_VALUE;
template_mw__contentGroup__rc6.memberIDs() = OMIT_VALUE;
template_mw__contentGroup__rc6.membersAccessControlPolicyIDs() = OMIT_VALUE;
template_mw__contentGroup__rc6.memberTypeValidated() = OMIT_VALUE;
template_mw__contentGroup__rc6.consistencyStrategy() = OMIT_VALUE;
template_mw__contentGroup__rc6.groupName() = OMIT_VALUE;
template_mw__contentGroup__rc6.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2173);
/* OneM2M_Templates.ttcn, line 2173 */
template_mw__contentGroup__rc7 = mw__contentGroupBase;
current_location.update_lineno(2177);
/* OneM2M_Templates.ttcn, line 2177 */
template_mw__contentGroup__rc8 = m__contentGroup__allOmit;
template_mw__contentGroup__rc8.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2181);
/* OneM2M_Templates.ttcn, line 2181 */
template_mw__contentPollingChannelBase.resourceName() = ANY_VALUE;
template_mw__contentPollingChannelBase.resourceType() = ANY_VALUE;
template_mw__contentPollingChannelBase.resourceID() = ANY_VALUE;
template_mw__contentPollingChannelBase.parentID() = ANY_VALUE;
template_mw__contentPollingChannelBase.creationTime() = ANY_VALUE;
template_mw__contentPollingChannelBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentPollingChannelBase.labels() = ANY_OR_OMIT;
template_mw__contentPollingChannelBase.expirationTime() = ANY_VALUE;
current_location.update_lineno(2192);
/* OneM2M_Templates.ttcn, line 2192 */
template_mw__contentPollingChannel__any.resourceName() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.resourceType() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.resourceID() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.parentID() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.creationTime() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.labels() = ANY_OR_OMIT;
template_mw__contentPollingChannel__any.expirationTime() = ANY_OR_OMIT;
current_location.update_lineno(2203);
/* OneM2M_Templates.ttcn, line 2203 */
template_m__contentPollingChannel__allOmit.resourceName() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.resourceType() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.resourceID() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.parentID() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.creationTime() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.labels() = OMIT_VALUE;
template_m__contentPollingChannel__allOmit.expirationTime() = OMIT_VALUE;
current_location.update_lineno(2214);
/* OneM2M_Templates.ttcn, line 2214 */
template_mw__contentPollingChannel__rc1 = mw__contentPollingChannelBase;
current_location.update_lineno(2217);
/* OneM2M_Templates.ttcn, line 2217 */
template_mw__contentPollingChannel__rc2 = ANY_VALUE;
current_location.update_lineno(2219);
/* OneM2M_Templates.ttcn, line 2219 */
template_mw__contentPollingChannel__rc3.choice().sg__subordinateResource().pollingChannel() = ANY_VALUE;
template_mw__contentPollingChannel__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2224);
/* OneM2M_Templates.ttcn, line 2224 */
template_mw__contentPollingChannel__rc4 = mw__contentPollingChannelBase;
current_location.update_lineno(2227);
/* OneM2M_Templates.ttcn, line 2227 */
template_mw__contentPollingChannel__rc5 = mw__contentPollingChannelBase;
current_location.update_lineno(2230);
/* OneM2M_Templates.ttcn, line 2230 */
template_mw__contentPollingChannel__rc6 = mw__contentPollingChannelBase;
template_mw__contentPollingChannel__rc6.resourceName() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.resourceType() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.resourceID() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.parentID() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.creationTime() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.labels() = ANY_OR_OMIT;
template_mw__contentPollingChannel__rc6.expirationTime() = ANY_OR_OMIT;
current_location.update_lineno(2241);
/* OneM2M_Templates.ttcn, line 2241 */
template_mw__contentScheduleBase.resourceName() = ANY_VALUE;
template_mw__contentScheduleBase.resourceType() = ANY_VALUE;
template_mw__contentScheduleBase.resourceID() = ANY_VALUE;
template_mw__contentScheduleBase.parentID() = ANY_VALUE;
template_mw__contentScheduleBase.creationTime() = ANY_VALUE;
template_mw__contentScheduleBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentScheduleBase.labels() = ANY_OR_OMIT;
template_mw__contentScheduleBase.expirationTime() = ANY_VALUE;
template_mw__contentScheduleBase.announceTo() = ANY_OR_OMIT;
template_mw__contentScheduleBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentScheduleBase.scheduleElement() = ANY_VALUE;
template_mw__contentScheduleBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(2256);
/* OneM2M_Templates.ttcn, line 2256 */
template_mw__contentSchedule__any.resourceName() = ANY_OR_OMIT;
template_mw__contentSchedule__any.resourceType() = ANY_OR_OMIT;
template_mw__contentSchedule__any.resourceID() = ANY_OR_OMIT;
template_mw__contentSchedule__any.parentID() = ANY_OR_OMIT;
template_mw__contentSchedule__any.creationTime() = ANY_OR_OMIT;
template_mw__contentSchedule__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentSchedule__any.labels() = ANY_OR_OMIT;
template_mw__contentSchedule__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentSchedule__any.announceTo() = ANY_OR_OMIT;
template_mw__contentSchedule__any.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentSchedule__any.scheduleElement() = ANY_OR_OMIT;
template_mw__contentSchedule__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(2271);
/* OneM2M_Templates.ttcn, line 2271 */
template_m__contentSchedule__allOmit.resourceName() = OMIT_VALUE;
template_m__contentSchedule__allOmit.resourceType() = OMIT_VALUE;
template_m__contentSchedule__allOmit.resourceID() = OMIT_VALUE;
template_m__contentSchedule__allOmit.parentID() = OMIT_VALUE;
template_m__contentSchedule__allOmit.creationTime() = OMIT_VALUE;
template_m__contentSchedule__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentSchedule__allOmit.labels() = OMIT_VALUE;
template_m__contentSchedule__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentSchedule__allOmit.announceTo() = OMIT_VALUE;
template_m__contentSchedule__allOmit.announcedAttribute() = OMIT_VALUE;
template_m__contentSchedule__allOmit.scheduleElement() = OMIT_VALUE;
template_m__contentSchedule__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(2286);
/* OneM2M_Templates.ttcn, line 2286 */
template_mw__contentSchedule__rc1 = mw__contentScheduleBase;
template_mw__contentSchedule__rc1.choice() = OMIT_VALUE;
current_location.update_lineno(2290);
/* OneM2M_Templates.ttcn, line 2290 */
template_mw__contentSchedule__rc2 = ANY_VALUE;
current_location.update_lineno(2292);
/* OneM2M_Templates.ttcn, line 2292 */
template_mw__contentSchedule__rc3.choice().sg__announceableSubordinateResource().schedule() = ANY_VALUE;
template_mw__contentSchedule__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2297);
/* OneM2M_Templates.ttcn, line 2297 */
template_mw__contentSchedule__rc4 = mw__contentScheduleBase;
template_mw__contentSchedule__rc4.choice().choice__list() = ANY_VALUE;
current_location.update_lineno(2301);
/* OneM2M_Templates.ttcn, line 2301 */
template_mw__contentSchedule__rc5 = mw__contentScheduleBase;
template_mw__contentSchedule__rc5.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2305);
/* OneM2M_Templates.ttcn, line 2305 */
template_mw__contentSchedule__rc6 = mw__contentScheduleBase;
template_mw__contentSchedule__rc6.resourceName() = OMIT_VALUE;
template_mw__contentSchedule__rc6.resourceType() = OMIT_VALUE;
template_mw__contentSchedule__rc6.resourceID() = OMIT_VALUE;
template_mw__contentSchedule__rc6.parentID() = OMIT_VALUE;
template_mw__contentSchedule__rc6.creationTime() = OMIT_VALUE;
template_mw__contentSchedule__rc6.lastModifiedTime() = OMIT_VALUE;
template_mw__contentSchedule__rc6.labels() = OMIT_VALUE;
template_mw__contentSchedule__rc6.expirationTime() = OMIT_VALUE;
template_mw__contentSchedule__rc6.announceTo() = OMIT_VALUE;
template_mw__contentSchedule__rc6.announcedAttribute() = OMIT_VALUE;
template_mw__contentSchedule__rc6.scheduleElement() = OMIT_VALUE;
template_mw__contentSchedule__rc6.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2320);
/* OneM2M_Templates.ttcn, line 2320 */
template_mw__contentSchedule__rc7 = mw__contentScheduleBase;
current_location.update_lineno(2324);
/* OneM2M_Templates.ttcn, line 2324 */
template_mw__contentSchedule__rc8 = m__contentSchedule__allOmit;
template_mw__contentSchedule__rc8.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2328);
/* OneM2M_Templates.ttcn, line 2328 */
template_mw__contentSubscriptionBase.resourceName() = ANY_VALUE;
template_mw__contentSubscriptionBase.resourceType() = ANY_VALUE;
template_mw__contentSubscriptionBase.resourceID() = ANY_VALUE;
template_mw__contentSubscriptionBase.parentID() = ANY_VALUE;
template_mw__contentSubscriptionBase.creationTime() = ANY_VALUE;
template_mw__contentSubscriptionBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentSubscriptionBase.labels() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.expirationTime() = ANY_VALUE;
template_mw__contentSubscriptionBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.creator() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.eventNotificationCriteria() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.expirationCounter() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.notificationURI() = ANY_VALUE;
template_mw__contentSubscriptionBase.groupID() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.notificationForwardingURI() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.batchNotify() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.rateLimit() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.preSubscriptionNotify() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.pendingNotification() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.notificationStoragePriority() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.latestNotify() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.notificationContentType() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.notificationEventCat() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.subscriberURI() = ANY_OR_OMIT;
template_mw__contentSubscriptionBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(2356);
/* OneM2M_Templates.ttcn, line 2356 */
template_mw__contentSubscription__any.resourceName() = ANY_OR_OMIT;
template_mw__contentSubscription__any.resourceType() = ANY_OR_OMIT;
template_mw__contentSubscription__any.resourceID() = ANY_OR_OMIT;
template_mw__contentSubscription__any.parentID() = ANY_OR_OMIT;
template_mw__contentSubscription__any.creationTime() = ANY_OR_OMIT;
template_mw__contentSubscription__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentSubscription__any.labels() = ANY_OR_OMIT;
template_mw__contentSubscription__any.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentSubscription__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentSubscription__any.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentSubscription__any.creator() = ANY_OR_OMIT;
template_mw__contentSubscription__any.eventNotificationCriteria() = ANY_OR_OMIT;
template_mw__contentSubscription__any.expirationCounter() = ANY_OR_OMIT;
template_mw__contentSubscription__any.notificationURI() = ANY_OR_OMIT;
template_mw__contentSubscription__any.groupID() = ANY_OR_OMIT;
template_mw__contentSubscription__any.notificationForwardingURI() = ANY_OR_OMIT;
template_mw__contentSubscription__any.batchNotify() = ANY_OR_OMIT;
template_mw__contentSubscription__any.rateLimit() = ANY_OR_OMIT;
template_mw__contentSubscription__any.preSubscriptionNotify() = ANY_OR_OMIT;
template_mw__contentSubscription__any.pendingNotification() = ANY_OR_OMIT;
template_mw__contentSubscription__any.notificationStoragePriority() = ANY_OR_OMIT;
template_mw__contentSubscription__any.latestNotify() = ANY_OR_OMIT;
template_mw__contentSubscription__any.notificationContentType() = ANY_OR_OMIT;
template_mw__contentSubscription__any.notificationEventCat() = ANY_OR_OMIT;
template_mw__contentSubscription__any.subscriberURI() = ANY_OR_OMIT;
template_mw__contentSubscription__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(2385);
/* OneM2M_Templates.ttcn, line 2385 */
template_m__contentSubscription__allOmit.resourceName() = OMIT_VALUE;
template_m__contentSubscription__allOmit.resourceType() = OMIT_VALUE;
template_m__contentSubscription__allOmit.resourceID() = OMIT_VALUE;
template_m__contentSubscription__allOmit.parentID() = OMIT_VALUE;
template_m__contentSubscription__allOmit.creationTime() = OMIT_VALUE;
template_m__contentSubscription__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentSubscription__allOmit.labels() = OMIT_VALUE;
template_m__contentSubscription__allOmit.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentSubscription__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentSubscription__allOmit.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentSubscription__allOmit.creator() = OMIT_VALUE;
template_m__contentSubscription__allOmit.eventNotificationCriteria() = OMIT_VALUE;
template_m__contentSubscription__allOmit.expirationCounter() = OMIT_VALUE;
template_m__contentSubscription__allOmit.notificationURI() = OMIT_VALUE;
template_m__contentSubscription__allOmit.groupID() = OMIT_VALUE;
template_m__contentSubscription__allOmit.notificationForwardingURI() = OMIT_VALUE;
template_m__contentSubscription__allOmit.batchNotify() = OMIT_VALUE;
template_m__contentSubscription__allOmit.rateLimit() = OMIT_VALUE;
template_m__contentSubscription__allOmit.preSubscriptionNotify() = OMIT_VALUE;
template_m__contentSubscription__allOmit.pendingNotification() = OMIT_VALUE;
template_m__contentSubscription__allOmit.notificationStoragePriority() = OMIT_VALUE;
template_m__contentSubscription__allOmit.latestNotify() = OMIT_VALUE;
template_m__contentSubscription__allOmit.notificationContentType() = OMIT_VALUE;
template_m__contentSubscription__allOmit.notificationEventCat() = OMIT_VALUE;
template_m__contentSubscription__allOmit.subscriberURI() = OMIT_VALUE;
template_m__contentSubscription__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(2413);
/* OneM2M_Templates.ttcn, line 2413 */
template_mw__contentSubscription__rc1 = mw__contentSubscriptionBase;
template_mw__contentSubscription__rc1.choice() = OMIT_VALUE;
current_location.update_lineno(2417);
/* OneM2M_Templates.ttcn, line 2417 */
template_mw__contentSubscription__rc2 = ANY_VALUE;
current_location.update_lineno(2419);
/* OneM2M_Templates.ttcn, line 2419 */
template_mw__contentSubscription__rc3.choice().sg__regularResource().subscription() = ANY_VALUE;
template_mw__contentSubscription__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2424);
/* OneM2M_Templates.ttcn, line 2424 */
template_mw__contentSubscription__rc4 = mw__contentSubscriptionBase;
{
OneM2M__Types::Subscription__optional_choice_choice__list_template& tmp_80 = template_mw__contentSubscription__rc4.choice().choice__list();
tmp_80.set_size(1);
tmp_80[0].schedule() = ANY_VALUE;
}
current_location.update_lineno(2428);
/* OneM2M_Templates.ttcn, line 2428 */
template_mw__contentSubscription__rc5 = mw__contentSubscriptionBase;
template_mw__contentSubscription__rc5.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2432);
/* OneM2M_Templates.ttcn, line 2432 */
template_mw__contentSubscription__rc6 = mw__contentSubscriptionBase;
template_mw__contentSubscription__rc6.resourceName() = OMIT_VALUE;
template_mw__contentSubscription__rc6.resourceType() = OMIT_VALUE;
template_mw__contentSubscription__rc6.resourceID() = OMIT_VALUE;
template_mw__contentSubscription__rc6.parentID() = OMIT_VALUE;
template_mw__contentSubscription__rc6.creationTime() = OMIT_VALUE;
template_mw__contentSubscription__rc6.lastModifiedTime() = OMIT_VALUE;
template_mw__contentSubscription__rc6.labels() = OMIT_VALUE;
template_mw__contentSubscription__rc6.accessControlPolicyIDs() = OMIT_VALUE;
template_mw__contentSubscription__rc6.expirationTime() = OMIT_VALUE;
template_mw__contentSubscription__rc6.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_mw__contentSubscription__rc6.creator() = OMIT_VALUE;
template_mw__contentSubscription__rc6.eventNotificationCriteria() = OMIT_VALUE;
template_mw__contentSubscription__rc6.expirationCounter() = OMIT_VALUE;
template_mw__contentSubscription__rc6.notificationURI() = OMIT_VALUE;
template_mw__contentSubscription__rc6.groupID() = OMIT_VALUE;
template_mw__contentSubscription__rc6.notificationForwardingURI() = OMIT_VALUE;
template_mw__contentSubscription__rc6.batchNotify() = OMIT_VALUE;
template_mw__contentSubscription__rc6.rateLimit() = OMIT_VALUE;
template_mw__contentSubscription__rc6.preSubscriptionNotify() = OMIT_VALUE;
template_mw__contentSubscription__rc6.pendingNotification() = OMIT_VALUE;
template_mw__contentSubscription__rc6.notificationStoragePriority() = OMIT_VALUE;
template_mw__contentSubscription__rc6.latestNotify() = OMIT_VALUE;
template_mw__contentSubscription__rc6.notificationContentType() = OMIT_VALUE;
template_mw__contentSubscription__rc6.notificationEventCat() = OMIT_VALUE;
template_mw__contentSubscription__rc6.subscriberURI() = OMIT_VALUE;
template_mw__contentSubscription__rc6.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2461);
/* OneM2M_Templates.ttcn, line 2461 */
template_mw__contentSubscription__rc7 = mw__contentSubscriptionBase;
current_location.update_lineno(2465);
/* OneM2M_Templates.ttcn, line 2465 */
template_mw__contentSubscription__rc8 = m__contentSubscription__allOmit;
template_mw__contentSubscription__rc8.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2469);
/* OneM2M_Templates.ttcn, line 2469 */
template_mw__contentContentInstanceBase.resourceName() = ANY_VALUE;
template_mw__contentContentInstanceBase.resourceType() = ANY_VALUE;
template_mw__contentContentInstanceBase.resourceID() = ANY_VALUE;
template_mw__contentContentInstanceBase.parentID() = ANY_VALUE;
template_mw__contentContentInstanceBase.creationTime() = ANY_VALUE;
template_mw__contentContentInstanceBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentContentInstanceBase.labels() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.expirationTime() = ANY_VALUE;
template_mw__contentContentInstanceBase.announceTo() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.stateTag() = ANY_VALUE;
template_mw__contentContentInstanceBase.creator() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.contentInfo() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.contentSize() = ANY_VALUE;
template_mw__contentContentInstanceBase.contentRef() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.ontologyRef() = ANY_OR_OMIT;
template_mw__contentContentInstanceBase.content() = ANY_VALUE;
template_mw__contentContentInstanceBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(2491);
/* OneM2M_Templates.ttcn, line 2491 */
template_mw__contentContainerBase.resourceName() = ANY_VALUE;
template_mw__contentContainerBase.resourceType() = ANY_VALUE;
template_mw__contentContainerBase.resourceID() = ANY_VALUE;
template_mw__contentContainerBase.parentID() = ANY_VALUE;
template_mw__contentContainerBase.creationTime() = ANY_VALUE;
template_mw__contentContainerBase.lastModifiedTime() = ANY_VALUE;
template_mw__contentContainerBase.labels() = ANY_OR_OMIT;
template_mw__contentContainerBase.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentContainerBase.expirationTime() = ANY_VALUE;
template_mw__contentContainerBase.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentContainerBase.announceTo() = ANY_OR_OMIT;
template_mw__contentContainerBase.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentContainerBase.stateTag() = ANY_VALUE;
template_mw__contentContainerBase.creator() = ANY_OR_OMIT;
template_mw__contentContainerBase.maxNrOfInstances() = ANY_OR_OMIT;
template_mw__contentContainerBase.maxByteSize() = ANY_OR_OMIT;
template_mw__contentContainerBase.maxInstanceAge() = ANY_OR_OMIT;
template_mw__contentContainerBase.currentNrOfInstances() = ANY_VALUE;
template_mw__contentContainerBase.currentByteSize() = ANY_VALUE;
template_mw__contentContainerBase.locationID() = ANY_OR_OMIT;
template_mw__contentContainerBase.ontologyRef() = ANY_OR_OMIT;
template_mw__contentContainerBase.disableRetrieval() = ANY_OR_OMIT;
template_mw__contentContainerBase.choice() = ANY_OR_OMIT;
current_location.update_lineno(2517);
/* OneM2M_Templates.ttcn, line 2517 */
template_mw__contentContainer__any.resourceName() = ANY_OR_OMIT;
template_mw__contentContainer__any.resourceType() = ANY_OR_OMIT;
template_mw__contentContainer__any.resourceID() = ANY_OR_OMIT;
template_mw__contentContainer__any.parentID() = ANY_OR_OMIT;
template_mw__contentContainer__any.creationTime() = ANY_OR_OMIT;
template_mw__contentContainer__any.lastModifiedTime() = ANY_OR_OMIT;
template_mw__contentContainer__any.labels() = ANY_OR_OMIT;
template_mw__contentContainer__any.accessControlPolicyIDs() = ANY_OR_OMIT;
template_mw__contentContainer__any.expirationTime() = ANY_OR_OMIT;
template_mw__contentContainer__any.dynamicAuthorizationConsultationIDs() = ANY_OR_OMIT;
template_mw__contentContainer__any.announceTo() = ANY_OR_OMIT;
template_mw__contentContainer__any.announcedAttribute() = ANY_OR_OMIT;
template_mw__contentContainer__any.stateTag() = ANY_OR_OMIT;
template_mw__contentContainer__any.creator() = ANY_OR_OMIT;
template_mw__contentContainer__any.maxNrOfInstances() = ANY_OR_OMIT;
template_mw__contentContainer__any.maxByteSize() = ANY_OR_OMIT;
template_mw__contentContainer__any.maxInstanceAge() = ANY_OR_OMIT;
template_mw__contentContainer__any.currentNrOfInstances() = ANY_OR_OMIT;
template_mw__contentContainer__any.currentByteSize() = ANY_OR_OMIT;
template_mw__contentContainer__any.locationID() = ANY_OR_OMIT;
template_mw__contentContainer__any.ontologyRef() = ANY_OR_OMIT;
template_mw__contentContainer__any.disableRetrieval() = ANY_OR_OMIT;
template_mw__contentContainer__any.choice() = ANY_OR_OMIT;
current_location.update_lineno(2543);
/* OneM2M_Templates.ttcn, line 2543 */
template_m__contentContainer__allOmit.resourceName() = OMIT_VALUE;
template_m__contentContainer__allOmit.resourceType() = OMIT_VALUE;
template_m__contentContainer__allOmit.resourceID() = OMIT_VALUE;
template_m__contentContainer__allOmit.parentID() = OMIT_VALUE;
template_m__contentContainer__allOmit.creationTime() = OMIT_VALUE;
template_m__contentContainer__allOmit.lastModifiedTime() = OMIT_VALUE;
template_m__contentContainer__allOmit.labels() = OMIT_VALUE;
template_m__contentContainer__allOmit.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentContainer__allOmit.expirationTime() = OMIT_VALUE;
template_m__contentContainer__allOmit.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentContainer__allOmit.announceTo() = OMIT_VALUE;
template_m__contentContainer__allOmit.announcedAttribute() = OMIT_VALUE;
template_m__contentContainer__allOmit.stateTag() = OMIT_VALUE;
template_m__contentContainer__allOmit.creator() = OMIT_VALUE;
template_m__contentContainer__allOmit.maxNrOfInstances() = OMIT_VALUE;
template_m__contentContainer__allOmit.maxByteSize() = OMIT_VALUE;
template_m__contentContainer__allOmit.maxInstanceAge() = OMIT_VALUE;
template_m__contentContainer__allOmit.currentNrOfInstances() = OMIT_VALUE;
template_m__contentContainer__allOmit.currentByteSize() = OMIT_VALUE;
template_m__contentContainer__allOmit.locationID() = OMIT_VALUE;
template_m__contentContainer__allOmit.ontologyRef() = OMIT_VALUE;
template_m__contentContainer__allOmit.disableRetrieval() = OMIT_VALUE;
template_m__contentContainer__allOmit.choice() = OMIT_VALUE;
current_location.update_lineno(2569);
/* OneM2M_Templates.ttcn, line 2569 */
template_mw__contentContainer__rc1 = mw__contentContainerBase;
template_mw__contentContainer__rc1.choice() = OMIT_VALUE;
current_location.update_lineno(2573);
/* OneM2M_Templates.ttcn, line 2573 */
template_mw__contentContainer__rc2 = ANY_VALUE;
current_location.update_lineno(2575);
/* OneM2M_Templates.ttcn, line 2575 */
template_mw__contentContainer__rc3.choice().sg__announceableResource().container() = ANY_VALUE;
template_mw__contentContainer__rc3.uRI() = ANY_VALUE;
current_location.update_lineno(2580);
/* OneM2M_Templates.ttcn, line 2580 */
template_mw__contentContainer__rc4 = mw__contentContainerBase;
template_mw__contentContainer__rc4.choice().choice__list() = ANY_VALUE;
current_location.update_lineno(2584);
/* OneM2M_Templates.ttcn, line 2584 */
template_mw__contentContainer__rc5 = mw__contentContainerBase;
template_mw__contentContainer__rc5.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2588);
/* OneM2M_Templates.ttcn, line 2588 */
template_mw__contentContainer__rc6 = mw__contentContainerBase;
template_mw__contentContainer__rc6.resourceName() = OMIT_VALUE;
template_mw__contentContainer__rc6.resourceType() = OMIT_VALUE;
template_mw__contentContainer__rc6.resourceID() = OMIT_VALUE;
template_mw__contentContainer__rc6.parentID() = OMIT_VALUE;
template_mw__contentContainer__rc6.creationTime() = OMIT_VALUE;
template_mw__contentContainer__rc6.lastModifiedTime() = OMIT_VALUE;
template_mw__contentContainer__rc6.labels() = OMIT_VALUE;
template_mw__contentContainer__rc6.accessControlPolicyIDs() = OMIT_VALUE;
template_mw__contentContainer__rc6.expirationTime() = OMIT_VALUE;
template_mw__contentContainer__rc6.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_mw__contentContainer__rc6.announceTo() = OMIT_VALUE;
template_mw__contentContainer__rc6.announcedAttribute() = OMIT_VALUE;
template_mw__contentContainer__rc6.stateTag() = OMIT_VALUE;
template_mw__contentContainer__rc6.creator() = OMIT_VALUE;
template_mw__contentContainer__rc6.maxNrOfInstances() = OMIT_VALUE;
template_mw__contentContainer__rc6.maxByteSize() = OMIT_VALUE;
template_mw__contentContainer__rc6.maxInstanceAge() = OMIT_VALUE;
template_mw__contentContainer__rc6.currentNrOfInstances() = OMIT_VALUE;
template_mw__contentContainer__rc6.currentByteSize() = OMIT_VALUE;
template_mw__contentContainer__rc6.locationID() = OMIT_VALUE;
template_mw__contentContainer__rc6.ontologyRef() = OMIT_VALUE;
template_mw__contentContainer__rc6.disableRetrieval() = OMIT_VALUE;
template_mw__contentContainer__rc6.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2614);
/* OneM2M_Templates.ttcn, line 2614 */
template_mw__contentContainer__rc7 = mw__contentContainerBase;
current_location.update_lineno(2618);
/* OneM2M_Templates.ttcn, line 2618 */
template_mw__contentContainer__rc8 = m__contentContainer__allOmit;
template_mw__contentContainer__rc8.choice().childResource__list() = ANY_VALUE;
current_location.update_lineno(2622);
/* OneM2M_Templates.ttcn, line 2622 */
template_m__contentNotification__allOmit.notificationEvent() = OMIT_VALUE;
template_m__contentNotification__allOmit.verificationRequest() = OMIT_VALUE;
template_m__contentNotification__allOmit.subscriptionDeletion() = OMIT_VALUE;
template_m__contentNotification__allOmit.subscriptionReference() = OMIT_VALUE;
template_m__contentNotification__allOmit.creator() = OMIT_VALUE;
template_m__contentNotification__allOmit.notificationForwardingURI() = OMIT_VALUE;
template_m__contentNotification__allOmit.iPEDiscoveryRequest() = OMIT_VALUE;
current_location.update_lineno(2632);
/* OneM2M_Templates.ttcn, line 2632 */
template_mw__contentNotification__any.notificationEvent() = ANY_OR_OMIT;
template_mw__contentNotification__any.verificationRequest() = ANY_OR_OMIT;
template_mw__contentNotification__any.subscriptionDeletion() = ANY_OR_OMIT;
template_mw__contentNotification__any.subscriptionReference() = ANY_OR_OMIT;
template_mw__contentNotification__any.creator() = ANY_OR_OMIT;
template_mw__contentNotification__any.notificationForwardingURI() = ANY_OR_OMIT;
template_mw__contentNotification__any.iPEDiscoveryRequest() = ANY_OR_OMIT;
current_location.update_lineno(2643);
/* OneM2M_Templates.ttcn, line 2643 */
current_location.update_lineno(2667);
/* OneM2M_Templates.ttcn, line 2667 */
template_m__contentUpdateAe__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.announceTo() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.appName() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.pointOfAccess() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.ontologyRef() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.nodeLink() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.requestReachability() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.contentSerialization() = OMIT_VALUE;
template_m__contentUpdateAe__invalid.e2eSecInfo() = OMIT_VALUE;
current_location.update_lineno(2684);
/* OneM2M_Templates.ttcn, line 2684 */
template_m__contentUpdateAcp__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.announceTo() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.privileges() = OMIT_VALUE;
template_m__contentUpdateAcp__invalid.selfPrivileges() = OMIT_VALUE;
current_location.update_lineno(2695);
/* OneM2M_Templates.ttcn, line 2695 */
template_m__contentUpdateGroup__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.announceTo() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.maxNrOfMembers() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.memberIDs() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.membersAccessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateGroup__invalid.groupName() = OMIT_VALUE;
current_location.update_lineno(2710);
/* OneM2M_Templates.ttcn, line 2710 */
template_m__contentUpdatePollingChannel__invalid.labels() = OMIT_VALUE;
template_m__contentUpdatePollingChannel__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdatePollingChannel__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdatePollingChannel__invalid.expirationTime() = OMIT_VALUE;
current_location.update_lineno(2717);
/* OneM2M_Templates.ttcn, line 2717 */
template_m__contentUpdateSchedule__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.announceTo() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateSchedule__invalid.scheduleElement() = OMIT_VALUE;
current_location.update_lineno(2728);
/* OneM2M_Templates.ttcn, line 2728 */
template_m__contentUpdateSubscription__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.maxNrOfInstances() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.eventNotificationCriteria() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.notificationURI() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.groupID() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.notificationForwardingURI() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.batchNotify() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.rateLimit() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.pendingNotification() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.notificationStoragePriority() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.latestNotify() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.notificationContentType() = OMIT_VALUE;
template_m__contentUpdateSubscription__invalid.notificationEventCat() = OMIT_VALUE;
current_location.update_lineno(2749);
/* OneM2M_Templates.ttcn, line 2749 */
template_m__contentUpdateContainer__invalid.labels() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.accessControlPolicyIDs() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.creationTime() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.expirationCounter() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.expirationTime() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.dynamicAuthorizationConsultationIDs() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.announceTo() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.announcedAttribute() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.maxNrOfInstances() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.maxByteSize() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.maxInstanceAge() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.locationID() = OMIT_VALUE;
template_m__contentUpdateContainer__invalid.ontologyRef() = OMIT_VALUE;
template_m__responsePrimitive_p__content_defval = OMIT_VALUE;
template_mw__responsePrimitiveOK_p__content_defval = ANY_OR_OMIT;
current_location.update_lineno(2843);
/* OneM2M_Templates.ttcn, line 2843 */
{
OneM2M__Types::ResponseStatusCode_template& tmp_84 = template_mw__responsePrimitiveKO.responseStatusCode();
tmp_84.set_type(COMPLEMENTED_LIST, 4);
tmp_84.list_item(0) = OneM2M__Types::ResponseStatusCode::int2000;
tmp_84.list_item(1) = OneM2M__Types::ResponseStatusCode::int2001;
tmp_84.list_item(2) = OneM2M__Types::ResponseStatusCode::int2002;
tmp_84.list_item(3) = OneM2M__Types::ResponseStatusCode::int2004;
}
template_mw__responsePrimitiveKO.requestIdentifier() = ANY_VALUE;
template_mw__responsePrimitiveKO.primitiveContent() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.to__() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.from__() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.originatingTimestamp() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.resultExpirationTimestamp() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.eventCategory() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.contentStatus() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.contentOffset() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.assignedTokenIdentifiers() = ANY_OR_OMIT;
template_mw__responsePrimitiveKO.tokenRequestInformation() = ANY_OR_OMIT;
template_m__responseNotification_p__notification_defval = OMIT_VALUE;
}


} /* end of namespace */
