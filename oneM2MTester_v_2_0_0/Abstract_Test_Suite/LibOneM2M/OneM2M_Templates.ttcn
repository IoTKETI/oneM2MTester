/**
 *  Copyright Notification
 *  No part of this document may be reproduced, in an electronic retrieval system or otherwise, except as authorized by written permission.
 *  The copyright and the foregoing restriction extend to reproduction in all media.
 *  Â© 2016, oneM2M Partners Type 1 (ARIB, ATIS, CCSA, ETSI, TIA, TSDSI, TTA, TTC).
 *  All rights reserved.
 *  
 *  @author     oneM2M
 *  @version    $URL: https://forge.etsi.org/svn/oneM2M/trunk/ttcn/LibOneM2M/OneM2M_Templates.ttcn $
 *              $Id: OneM2M_Templates.ttcn 288 2017-05-19 07:18:08Z reinaortega $
 *  @desc       Module containing templates for oneM2M
 *
 */
module OneM2M_Templates {

	import from XSD all;
	import from OneM2M_Types all;
	import from OneM2M_TestSystem all;
	import from OneM2M_TypesAndValues all;
	//import from OneM2M_AdditionalTypes all;
	import from OneM2M_Pixits all;
	//import from OneM2M_Functions all;

		
	/**
	 * @desc Get a converted to string random number 
	 * @param p_lower Lower limit 
	 * @param p_upper Upper limit
	 * @return Random number converted to string
	 * @verdict 
	 */
	function f_rnd(in integer p_lower, in integer p_upper) return charstring {
		
		return int2str(float2int(rnd() * int2float(p_upper - p_lower + 1)) + p_lower);	
	}


	/* Templates */
	
	group Primitives {
    	/** 
    	 * @desc Base template for request sending operations
    	 * @param p_requestPrimitive
    	 */
    	template (value) MsgOut m_request(in template (value) RequestPrimitive p_requestPrimitive, in template (omit) AttributeAux_list p_forcedFields := omit) := {
    		primitive := { requestPrimitive := p_requestPrimitive},
    		host := PX_SUT_ADDRESS,
    		xmlNamespace := PX_XML_NAMESPACE,
    		protocolBinding := PX_PROTOCOL_BINDING,
    		serialization := PX_SERIALIZATION, 
    		forcedFields := p_forcedFields
    	};
    	
		/** 
		 * @desc Base template for response sending operations
		 * @param p_responsePrimitive
		 */
		template (value) MsgOut m_response(in template (value) ResponsePrimitive p_responsePrimitive, in template (omit) AttributeAux_list p_forcedFields := omit) := {
			primitive := { responsePrimitive := p_responsePrimitive},
			host := PX_SUT_ADDRESS,
			xmlNamespace := PX_XML_NAMESPACE,
			protocolBinding := PX_PROTOCOL_BINDING,
			serialization := PX_SERIALIZATION, 
			forcedFields := p_forcedFields
		};
		
		/** 
		 * @desc Base template for response sending operations
		 * @param p_responsePrimitive
		 */
		template (value) MsgOut m_httpResponse(in template (value) ResponsePrimitive p_responsePrimitive, in template (omit) AttributeAux_list p_forcedFields := omit) := {
			primitive := { responsePrimitive := p_responsePrimitive},
			host := PX_SUT_ADDRESS,
			xmlNamespace := PX_XML_NAMESPACE,
			protocolBinding := "HTTP",
			serialization := PX_SERIALIZATION, 
			forcedFields := p_forcedFields
		};
		
    	template MsgIn mw_request(in template (present) RequestPrimitive p_requestPrimitive) := {
    		primitive := { requestPrimitive := p_requestPrimitive}
    	};
    	
		/** 
		 * @desc Base template for response receiving operations
		 * @param p_responsePrimitive
		 */
		template MsgIn mw_response(in template (present) ResponsePrimitive p_responsePrimitive) := {
			primitive := { responsePrimitive := p_responsePrimitive}
		};
    	
	}//end of group primitives
	
	group RequestPrimitives { 
		
		group Retrieve {

			/**
			 * @desc Base RETRIEVE request primitive
			 * @param p_targetResourceAddress Target resource address
			 * @param p_originator Originator (from)
			 */
			template (value) RequestPrimitive m_retrieveResource(XSD.ID p_targetResourceAddress, in XSD.ID p_originator) := {
				operation := int2,
				to_ := p_targetResourceAddress,
				from_ := p_originator,
				requestIdentifier := "m_retrieveResource" & f_rnd(1, 1000000),
				resourceType := omit,
				primitiveContent := omit,
				roleIDs := omit, 
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit,
				tokenRequestIndicator := omit
			};
        	
			/**
			 * @desc RETRIEVE request primitive for a single attribute in To field ("targetResourceAddress#AttributeName")
			 * @param p_targetResourceAddress Target resource address (including "#AttributeName")
			 * @param p_originator Originator (from)
			 */
        	template (value) RequestPrimitive m_retrieveResourceAttributeToOption(XSD.ID p_targetResourceAddress, in XSD.ID p_originator) := {
        		operation := int2,
        		to_ := p_targetResourceAddress,
        		from_ := p_originator,
        		requestIdentifier := "m_retrieveResourceAttributeOptionTo" & f_rnd(1, 1000000),
        		resourceType := omit,
				primitiveContent := omit, 
				roleIDs := omit,
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit,
				tokenRequestIndicator := omit
        	};
        	
			/**
			 * @desc RETRIEVE request primtive containing the target attributes in the primitiveContent field
			 * @param p_targetResourceAddress Target resource address 
			 * @param p_attributeList Target attribute list
			 * @param p_originator Originator (from)
			 */
			template (value) RequestPrimitive m_retrieveResourceAttributeContentOption(XSD.ID p_targetResourceAddress, in template (value) AttributeList_1 p_attributeList, in XSD.ID p_originator) := {
				operation := int2,
				to_ := p_targetResourceAddress,
				from_ := p_originator,
				requestIdentifier := "m_retrieveResourceAttributeContentOption" & f_rnd(1, 1000000),
				resourceType := omit,
				primitiveContent := {
					any_1 := {{AttributeList := p_attributeList}}
				},
				roleIDs := omit,
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit,
				tokenRequestIndicator := omit
			};
    	}//end group Retrieve

    	group Update {
    		
    		template (value) RequestPrimitive m_update := {
				operation := int3,
				to_ := "NotInitialized",
				from_ := "NotInitialized",
				requestIdentifier := "m_update" & f_rnd(1, 1000000),
				resourceType := omit,
				primitiveContent:= omit,
				roleIDs := omit, 
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit,
				tokenRequestIndicator := omit
			};
        	
			/**
			 * @desc Base UPDATE request primitive for Ae resource
			 */
			template (value) RequestPrimitive m_updateAeBase modifies m_update:= {
				requestIdentifier := "m_updateAe" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{AE_optional := m_contentUpdateAe}}
				}
			};
        	
			/**
			 * @desc Base UPDATE request primitive for Container resource
			 */
			template (value) RequestPrimitive m_updateContainerBase modifies m_update:= {
				requestIdentifier := "m_updateContainer" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{Container_optional := m_contentUpdateContainer}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for ContentInstance resource
			 */
			template (value) RequestPrimitive m_updateContentInstanceBase modifies m_update:= {
				requestIdentifier := "m_updateContentInstance" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{ContentInstance_optional := m_contentUpdateContentInstance}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for AccessControlPolicy resource
			 */        				
			template (value) RequestPrimitive m_updateAcpBase modifies m_update := {
				requestIdentifier := "m_updateAcp" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{AccessControlPolicy_optional := m_contentUpdateAcp}}
				}
			};
			
			template (value) RequestPrimitive m_updateAcpPrivileges(in template(omit) SetOfAcrs p_privileges := omit, in template(omit) SetOfAcrs p_selfPrivileges := omit) modifies m_update := {
				requestIdentifier := "m_updateAcp" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{AccessControlPolicy_optional := m_contentUpdateAcpPrivileges(p_privileges, p_selfPrivileges)}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for Group resource
			 */
			template (value) RequestPrimitive m_updateGroupBase modifies m_update := {
				requestIdentifier := "m_updateGroup" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{Group_optional := m_contentUpdateGroup}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for Schedule resource
			 */
			template (value) RequestPrimitive m_updateScheduleBase modifies m_update := {
				requestIdentifier := "m_updateSchedule" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{Schedule_optional := m_contentUpdateSchedule}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for PollingChannel resource
			 */
			template (value) RequestPrimitive m_updatePollingChannelBase modifies m_update := {
				requestIdentifier := "m_updatePollingChannel" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{PollingChannel_optional := m_contentUpdatePollingChannel}}
				}
			};
			
			/**
			 * @desc Base UPDATE request primitive for Subscription resource
			 */
			template (value) RequestPrimitive m_updateSubscriptionBase modifies m_update := {
				requestIdentifier := "m_updateSubscription" & f_rnd(1, 1000000),
				primitiveContent:= {
							any_1 := {{Subscription_optional := m_contentUpdateSubscription}}
				}
			};
			
			template (value) RequestPrimitive m_updateLocationPolicy(XSD.ID p_locResourceAddress, in template (omit) AcpType p_accessControlPolicyIds, in template (omit) XSD.Duration p_locationUpdatePeriod) modifies m_update := {
        	  	to_ 				:= p_locResourceAddress,
        	  	requestIdentifier	:= "m_updateLocationPolicy",
        	  	primitiveContent	:= {        	    
        	    			any_1 := {{ LocationPolicy_optional := m_contentUpdateLocationPolicy(p_accessControlPolicyIds, p_locationUpdatePeriod) }}
        		}
			  };
        	
    	}//end group Update
    	
    	group Create {

			template (value) RequestPrimitive m_create := {
				operation := int1,
				to_ := "NotInitialized",
				from_ := "NotInitialized",
				requestIdentifier := testcasename() & "-m_create" & f_rnd(1, 1000000),
				resourceType := omit,
				primitiveContent := omit,
				roleIDs := omit,
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit,
				tokenRequestIndicator := omit

			};
        	
			/**
			 * @desc Base Reception template for create operation
			 */
			template RequestPrimitive mw_create(template XSD.ID p_from := *, template XSD.ID p_to := ?) := {
				operation := int1,
				to_ := p_to,
				from_ := p_from,
				requestIdentifier := ?,
				resourceType := ?,
				primitiveContent := {
					any_1 := ?	
				},
				roleIDs := *,
				originatingTimestamp := *,
				requestExpirationTimestamp := *,
				resultExpirationTimestamp := *,
				operationExecutionTime := *,
				responseType := *,
				resultPersistence := *,
				resultContent := *,
				eventCategory := *,
				deliveryAggregation := *,
				groupRequestIdentifier := *,
				filterCriteria := *,
				discoveryResultType := *,
				tokens := *,
				tokenIDs := *,
				localTokenIDs := *,
				tokenRequestIndicator := *
			}
			
			
			/**
			 * @desc Base CREATE request primitive for AEAnnc resource
			 * @param p_accessControlPolicyIds
			 * @param p_to
			 * @param p_from
			 * @param p_appId
			 * @param p_stemId
			 */
			template (value) RequestPrimitive m_createAEAnnc(template (omit) AcpType p_accessControlPolicyIds := omit, template (omit) XSD.ID p_to := omit, template (omit) XSD.ID p_from := omit, XSD.ID p_appId, XSD.ID p_stemId := "") modifies m_create:= {
				to_ := p_to,
				from_ := p_from,//PX_AE_ID_STEM,//TODO We should use omit, "s", or "c"
				requestIdentifier := testcasename() & "-m_createAEAnnc" & f_rnd(1, 1000000),
				resourceType := int10002,
				primitiveContent := {
					any_1 := {{AEAnnc_optional := m_contentCreateAEAnnc({"Credential-ID:None"}, p_accessControlPolicyIds, p_appId, valueof(p_to) & "/" & p_stemId)}}	
				}
			};
			
			/**
			 * @desc Reception template for CREATE AEAnnc
			 */
			template RequestPrimitive mw_createAEAnnc(template (omit) XSD.ID p_from := omit, template (omit) XSD.ID p_to := omit, template (omit) AcpType p_accessControlPolicyIds := omit) modifies mw_create := {
				resourceType := int10002,
				primitiveContent := {
					any_1 := {{AEAnnc_optional := mw_contentCreateAEAnnc({"Credential-ID:None"}, p_accessControlPolicyIds)}}	
				}
			};

			template (value) RequestPrimitive m_createAe(XSD.ID p_appId, template (omit) AcpType p_accessControlPolicyIds := omit,template (omit) XSD.ID p_from := omit, template (omit) ResourceName p_resourceName :=  c_aeAuxName, in template (omit) PoaList p_poaList := omit) modifies m_create := {
				from_ := p_from,//PX_AE_ID_STEM,//TODO We should use omit, "s", or "c"
				requestIdentifier := testcasename() & "-m_createAe" & f_rnd(1, 1000000),
				resourceType := int2,
				primitiveContent := {
					any_1 := {{AE_optional := m_contentCreateAe(p_accessControlPolicyIds,p_resourceName, p_appId, p_poaList)}}	
				}
			};
        	
			/**
			 * @desc Reception template for AE registration
			 */
			template RequestPrimitive mw_createAe(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int2,
				primitiveContent := {
					any_1 := {{AE_optional := ?}}	
				}
			};  
			        	
        	template (value) RequestPrimitive m_createAeAux(template (omit) AcpType p_accessControlPolicyIds := omit, in template (omit) PoaList p_poaList) modifies m_create := {
        		from_ := PX_AE1_ID_STEM,//TODO We should use omit, "s", or "c"
        		requestIdentifier := testcasename() & "-m_createAe" & f_rnd(1, 1000000),
        		resourceType := int2,
        		primitiveContent := {
        			any_1 := {{AE_optional := m_contentCreateAe(p_accessControlPolicyIds, c_aeAuxName, -, p_poaList)}}	
        		}
			};
        	
			/**
			 * @desc Base CREATE request primitive for AccessControlPolicy resource
			 */
			template (value) RequestPrimitive m_createAcpBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createAcp" & f_rnd(1, 1000000),
				resourceType := int1,
				primitiveContent := {
					any_1 := {{AccessControlPolicy_optional := m_contentCreateAcp ()}}
				}
			};
				
        	template (value) RequestPrimitive m_createAcp(XSD.ID p_parentResourceAddress, in template (omit)  XSD.String p_name := c_defaultAccessControlPolicyResourceName, in template (value) ListOfURIs p_acor := PX_ACOR, in template (value) AccessControlOperations p_allowedOperations := int63) modifies m_create := {
        		to_ := p_parentResourceAddress,
        		from_ := PX_SUPER_USER,
        		requestIdentifier := testcasename() & "-m_createAcp" & f_rnd(1, 1000000),
        		resourceType := int1,
        		primitiveContent := {
					any_1 := {{AccessControlPolicy_optional := m_contentCreateAcp (p_name, p_acor, p_allowedOperations)}}
        		}
        	};
        	
			/**
			 * @desc Reception template for CREATE AcpAnnc
			 */
			template RequestPrimitive mw_createAccessControlPolicyAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				to_ := p_to,
				from_ := p_from,
				resourceType := int10002,
				primitiveContent := {
					any_1 := {{AccessControlPolicyAnnc_optional := mw_contentCreateAcpAnnc(-)}}	
				}
			};
        	
       	
			/**
			 * @desc Base CREATE request primitive for AccessControlPolicy resource (AUX)
			 */
        	template (value) RequestPrimitive m_createAcpAux(in template (value) XSD.String p_acpName := c_acpAuxName, in template (value) ListOfURIs p_acor := PX_ACOR, in template (value) AccessControlOperations p_allowedOperations := int63 ) modifies m_create := {
        		from_ := PX_SUPER_USER,
        		requestIdentifier := testcasename() & "-m_createAcpAux" & f_rnd(1, 1000000),
        		resourceType := int1,
        		primitiveContent := {
        			any_1 := {{AccessControlPolicy_optional := m_contentCreateAcp (p_acpName, p_acor, p_allowedOperations)}}	
        		}
        	};
        	
			template (value) RequestPrimitive m_createCSEBase (in ServiceSubscribedAppRule p_serviceSubscribedAppRule) modifies m_create := {
				from_ := PX_SUPER_USER,
				requestIdentifier := testcasename() & "-m_createCSE" & f_rnd(1, 1000000),
				resourceType := int1,//FIXME Is this the value for CSEBase? In any case, this template is not used at all
				primitiveContent := {
					any_1 := {{CSEBase_optional := m_contentCreateCSEBase (p_serviceSubscribedAppRule)}}
				}
			};
        	
       	
			/**
			 * @desc Base CREATE request primitive for Container resource
			 */
			template (value) RequestPrimitive m_createContainerBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createContainer" & f_rnd(1, 1000000),
				resourceType := int3,
				primitiveContent := {
					
					any_1 := {{Container_optional := m_contentCreateContainer}}
				}
			};
			
			/**
			 * @desc CREATE request primitive for Container resource wiht no resourceName provided
			 */
			template (value) RequestPrimitive m_createContainer_noResourceName modifies m_createContainerBase := {
				primitiveContent := {
					any_1 := {{Container_optional := m_contentCreateContainer(omit)}}
				}
			};
	
    		template (value) RequestPrimitive m_createContainer(XSD.ID p_parentResourceAddress, in template (omit) XSD.String p_resourceName := c_defaultContainerResourceName) modifies m_create := {
    			to_ := p_parentResourceAddress,
    			requestIdentifier := testcasename() & "-m_createContainer" & f_rnd(1, 1000000),
    			resourceType := int3,
    			primitiveContent := {
    				any_1 := {{Container_optional := m_contentCreateContainer(p_resourceName)}}
    			}
    		};
        	
			/**
			 * @desc Reception template for CREATE Container
			 */
			template RequestPrimitive mw_createContainer(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int3,
				primitiveContent := {
					any_1 := {{Container_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Base Reception template for CREATE ContainerAnnc
			 */
			template RequestPrimitive mw_createContainerAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10003,
				primitiveContent := {
					any_1 := {{ContainerAnnc_optional := mw_contentCreateContainerAnncBase}}	
				}
			};
			
			/**
			 * @desc Reception template for CREATE FlexContainer
			 */
			template RequestPrimitive mw_createFlexContainer(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int28, 
				primitiveContent := {
					any_1 := {{FlexContainer_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Reception template for CREATE GenericInterworkingOperationInstance
			 */
			template RequestPrimitive mw_createGenericIwkOpInstance(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int28,  // FIXME: not found in TS004
				primitiveContent := {
					any_1 := {{GenericInterworkingOperationInstance_optional := ?}}	
				}
			}; 
        	
			/**
			 * @desc Base CREATE request primitive for Content Instance resource
			 */
			template (value) RequestPrimitive m_createContentInstanceBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createContentInstance" & f_rnd(1, 1000000),
				resourceType := int4,
				primitiveContent := {
			
					any_1 := {{ContentInstance_optional := m_contentCreateContentInstance}}
				}
			};
				
			/**
			 * @desc CREATE request primitive for Content Instance resource with no resourceName provided
			 */
			template (value) RequestPrimitive m_createContentInstance_noResourceName modifies m_createContentInstanceBase := {
				primitiveContent := {
			
					any_1 := {{ContentInstance_optional := m_contentCreateContentInstance(omit)}}
				}
			};
    		
    		template (value) RequestPrimitive m_createContentInstance(XSD.ID p_parentResourceAddress, XSD.String p_primitiveContent) modifies m_create := {
    			to_ := p_parentResourceAddress,
    			from_ := "admin:admin",
    			requestIdentifier := testcasename() & "-m_createContentInstance" & f_rnd(1, 1000000),
    			resourceType := int4,
    			primitiveContent := {
    				any_1 := {{ContentInstance_optional := m_contentCreateContentInstance(p_primitiveContent)}}	
    			}
    		};
    		
			/**
			 * @desc Reception template for CREATE ContentInstanceAnnc
			 */
			template RequestPrimitive mw_createContentInstanceAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10014,
				primitiveContent := {
					any_1 := {{ContentInstanceAnnc_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Base Reception template for CREATE ContentInstanceAnnc
			 */
			template RequestPrimitive mw_createContentInstanceAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10014,
				primitiveContent := {
					any_1 := {{ContentInstanceAnnc_optional := mw_contentCreateContentInstanceAnncBase}}	
				}
			};  
        	    		
       	
			/**
			 * @desc Base CREATE request primitive for Group resource
			 */
			template (value) RequestPrimitive m_createGroupBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createGroup" & f_rnd(1, 1000000),
				resourceType := int9,
				primitiveContent := {
					any_1 := {{Group_optional := m_contentCreateGroup (1, {"NotInitialized"}, omit, omit)}}	//TODO: p_resourceId
				}
			};
        	
        	template (value) RequestPrimitive m_createGroup(in template (value) XSD.NonNegativeInteger p_maxNrOfMembers,
															in template (value) ListOfURIs p_memberIds := {"NotInitialized"},
															in template (omit) AcpType p_accessControlPolicyIds,
															in template (omit) MemberType p_memberType := omit,
															in template (omit) ConsistencyStrategy p_consistencyStrategy := omit,
															in template (omit) ListOfURIs p_membersAccessControlPolicyIDs := omit,
															in template (omit) XSD.String p_name := "MyGroup") modifies m_create := {
        		requestIdentifier := testcasename() & "-m_createGroup" & f_rnd(1, 1000000),
        		resourceType := int9,
        		primitiveContent := {
        			any_1 := {{Group_optional := m_contentCreateGroup (p_maxNrOfMembers, p_memberIds, p_accessControlPolicyIds, p_memberType, p_consistencyStrategy, p_membersAccessControlPolicyIDs, p_name)}}	//TODO: p_resourceId
        		}
        	};
        	
			/**
			 * @desc Reception template for CREATE GroupAnnc
			 */
			template RequestPrimitive mw_createGroupAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10009,
				primitiveContent := {
					any_1 := {{GroupAnnc_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Base Reception template for CREATE GroupAnnc
			 */
			template RequestPrimitive mw_createGroupAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10009,
				primitiveContent := {
					any_1 := {{GroupAnnc_optional := mw_contentCreateGroupAnncBase}}	
				}
			};
        	
			/**
			 * @desc Base CREATE request primitive for MgmtObj resource
			 */
			template (value) RequestPrimitive m_createMgmtObjBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createMgmtObj" & f_rnd(1, 1000000),
				resourceType := int13,
				primitiveContent := {
					any_1 := {{MgmtObj_optional := m_contentCreateMgmtObj (-,-)}}	
				}
			};
        	
			/**
			 * @desc CREATE request primitive for MgmtObj resource
			 */
			template (value) RequestPrimitive m_createMgmtObj modifies m_create := {
				requestIdentifier := testcasename() & "-m_createMgmtObj" & f_rnd(1, 1000000),
				resourceType := int13,
				primitiveContent := {
					any_1 := {{MgmtObj_optional := m_contentCreateMgmtObj (-, -)}}	
				}
			};
        	
			/**
			 * @desc Reception template for CREATE MgmtObjAnnc
			 */
			template RequestPrimitive mw_createMgmtObjAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10013,
				primitiveContent := {
					any_1 := {{MgmtObjAnnc_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Base Reception template for CREATE MgmtObjAnnc
			 */
			template RequestPrimitive mw_createMgmtObjAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10013,
				primitiveContent := {
					any_1 := {{MgmtObjAnnc_optional := mw_contentCreateMgmtObjAnncBase}}	
				}
			};  
			
			/**
			 * @desc Base CREATE request primitive for Node resource
			 */
			template (value) RequestPrimitive m_createNodeBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createNode" & f_rnd(1, 1000000),
				resourceType := int14,
				primitiveContent := {
					any_1 := {{Node_optional := m_contentCreateNode(-, -, -) }}	
				}
			};
        	
			/**
			 * @desc CREATE request primitive for Node resource
			 */
			template (value) RequestPrimitive m_createNode modifies m_create := {
				requestIdentifier := testcasename() & "-m_createNode" & f_rnd(1, 1000000),
				resourceType := int14,
				primitiveContent := {
					any_1 := {{Node_optional := m_contentCreateNode(-,-,-) }}
				}
			};
        	
			/**
			 * @desc Reception template for CREATE NodeAnnc
			 */
			template RequestPrimitive mw_createNodeAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10014,
				primitiveContent := {
					any_1 := {{NodeAnnc_optional := ?}}	
				}
			};  
       	
			/**
			 * @desc Base CREATE request primitive for PollingChannel resource
			 */
			template (value) RequestPrimitive m_createPollingChannelBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createPollingChannel" & f_rnd(1, 1000000),
				resourceType := int15,
				primitiveContent := {
					any_1 := {{PollingChannel_optional := m_contentCreatePollingChannel (-)}}	
				}
			};
        	
        	template (value) RequestPrimitive m_createPollingChannel(XSD.ID p_parentResourceAddress, in template (value)XSD.ID p_originatorId) modifies m_create := {
        		to_ := p_parentResourceAddress,
        		from_ := p_originatorId,
        		requestIdentifier := testcasename() & "-m_createPollingChannel" & f_rnd(1, 1000000),
        		resourceType := int15,
        		primitiveContent := {
        			any_1 := {{PollingChannel_optional := m_contentCreatePollingChannel ()}}	
        		}
        	};
        	
			/**
			 * @desc Base CREATE request primitive for Schedule resource
			 */
        	template (value) RequestPrimitive m_createScheduleBase modifies m_create := {
        		requestIdentifier := testcasename() & "-m_createSchedule" & f_rnd(1, 1000000),
        		resourceType := int18,
        		primitiveContent := {
        			any_1 := {{Schedule_optional := m_contentCreateSchedule ({{"0 0 0,1,2 1 1 * *"}})}}	
        		}
        	};
        	
        	template (value) RequestPrimitive m_createSchedule(XSD.ID p_parentResourceAddress, in template (omit)  XSD.String p_name, in template (value) ScheduleEntries p_scheduleElement ) modifies m_create := {
        		to_ := p_parentResourceAddress,
        		requestIdentifier := testcasename() & "-m_createSchedule" & f_rnd(1, 1000000),
        		resourceType := int18,
        		primitiveContent := {
        			any_1 := {{Schedule_optional := m_contentCreateSchedule (p_scheduleElement, p_name)}}	
        		}
        	};
        	
			/**
			 * @desc Reception template for CREATE ScheduleAnnc
			 */
			template RequestPrimitive mw_createScheduleAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10018,
				primitiveContent := {
					any_1 := {{ScheduleAnnc_optional := ?}}	
				}
			};  
			
			/**
			 * @desc Base Reception template for CREATE ScheduleAnnc
			 */
			template RequestPrimitive mw_createScheduleAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10018,
				primitiveContent := {
					any_1 := {{ScheduleAnnc_optional := mw_contentCreateScheduleAnncBase}}	
				}
			};  
        	
			template (value) RequestPrimitive m_createServiceSubscribedAppRule (in ListOfM2MID p_applicableCredIDs, in ListOfM2MID p_allowedAppIDs, in ListOfM2MID p_allowedAEs) modifies m_create := {
				requestIdentifier := testcasename() & "-m_createServiceSubscribedAppRule" & f_rnd(1, 1000000),
				resourceType := int19,//FIXME Is this the correct value?
				primitiveContent := {
					any_1 := {{ServiceSubscribedAppRule_optional := m_contentCreateServiceSubscribedAppRule (p_applicableCredIDs, p_allowedAppIDs, p_allowedAEs)}}
				}
			};
        	
       	
			/**
			 * @desc Base CREATE request primitive for Subscription resource
			 */
			template (value) RequestPrimitive m_createSubscriptionBase modifies m_create := {
				requestIdentifier := testcasename() & "-m_createSubscription" & f_rnd(1, 1000000),
				resourceType := int23,
				primitiveContent := {
					any_1 := {{Subscription_optional := m_contentCreateSubscription ({"NotInitialized"})}}	
				}
			};
        	
        	template (value) RequestPrimitive m_createSubscription(XSD.ID p_parentResourceAddress, in template (omit)  XSD.String p_name, in template (value) ListOfURIs p_notificationURI := {"NotInitialized"}) modifies m_create := {
        		to_ := p_parentResourceAddress,
        		requestIdentifier := testcasename() & "-m_createSubscription" & f_rnd(1, 1000000),
        		resourceType := int23,
        		primitiveContent := {
					any_1 := {{Subscription_optional := m_contentCreateSubscription (p_notificationURI, p_name)}}	
        		}
        	};
        	
			template (value) RequestPrimitive m_createSubscriptionAdvanced(	XSD.ID p_parentResourceAddress, 
																		   in template (omit)  XSD.String p_name := omit,
																		   in template (value) ListOfURIs p_notificationURI,
																		   in template (omit) EventNotificationCriteria p_eventNotificationCriteria := omit,
																		   in template (omit) XSD.PositiveInteger p_expirationCounter := omit,
																		   in template (omit) BatchNotify p_batchNotify := omit,
																		   in template (omit) XSD.Boolean p_latestNotify := omit,
																		   in template (omit) XSD.AnyURI p_subscriberURI := omit,
																		   in template (omit) NotificationContentType p_notificationContentType := int1) modifies m_createSubscription := {
				primitiveContent := {
					any_1 := {{Subscription_optional := m_contentCreateSubscriptionAdvanced (p_notificationURI, p_name, p_eventNotificationCriteria, p_expirationCounter, p_batchNotify, p_latestNotify, p_subscriberURI, p_notificationContentType)}}	
				}
			};
        	
        	template (value) RequestPrimitive m_createLocationPolicy(in template (value) LocationSource p_locationSource, in template (omit) AcpType p_accessControlPolicyIds, in template (omit) XSD.Duration p_locationUpdatePeriod, in template (omit) NodeID p_locationTargetID, in template (omit) XSD.AnyURI p_locationServerAddress) modifies m_create := {
        		
        	  	requestIdentifier	:= testcasename() & "-m_createLocationPolicy" & f_rnd(1, 1000000), //the requestIdentifier is supposed to be set similar as "C190XX7T/001"  by prepending the AE-ID-Stem and slash(â/â) in front of it
        	  	resourceType		:= int10,
        	  	primitiveContent	:= {        	    
        	    			any_1 := {{ LocationPolicy_optional := m_contentCreateLocationPolicy(p_locationSource, p_accessControlPolicyIds, p_locationUpdatePeriod, p_locationTargetID, p_locationServerAddress) }}
        	  	},
			  	resultContent := int1//default
        	};
        	
			/**
			 * @desc Reception template for CREATE LocationPolicyAnnc
			 */
			template RequestPrimitive mw_createLocationPolicyAnnc(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10010,
				primitiveContent := {
					any_1 := {{LocationPolicyAnnc_optional := ?}}	
				}
			}; 
			
			/**
			 * @desc Base Reception template for CREATE LocationPolicyAnnc
			 */
			template RequestPrimitive mw_createLocationPolicyAnncBase(template XSD.ID p_from := *, template XSD.ID p_to := ?) modifies mw_create := {
				resourceType := int10010,
				primitiveContent := {
					any_1 := {{LocationPolicyAnnc_optional := mw_contentCreateLocationPolicyAnncBase}}	
				}
			}; 
			
        	template (value) RequestPrimitive m_createNotification(in template (value) Representation p_resourcePresentation, in template (omit)NotificationEventType p_notifEventType, in template (omit) XSD.AnyURI p_subscriptionReference, in template (omit) XSD.AnyURI p_notifForwardingURI) modifies m_create := {
        	  requestIdentifier	:= testcasename() & "-m_createNotification" & f_rnd(1, 1000000),
        	  primitiveContent	:= {	
        	    			any_1 :=	{{ Notification := m_contentCreateNotification(p_resourcePresentation, p_notifEventType, p_subscriptionReference, p_notifForwardingURI)}}        	    
        	  },
        	  resultContent		:= int1 //default
        	  
        	};
        	
			/**
			 * @desc Reception template for SemanticDescriptor creation
			 */
			template RequestPrimitive mw_createSemanticDescriptor(template XSD.ID p_from := *, template XSD.ID p_to := ?, template SemanticDescriptor_optional p_semanticDescriptor := mw_contentCreateSemanticDescriptor) modifies mw_create := {
				resourceType := int24,
				primitiveContent := {
					any_1 := {{SemanticDescriptor_optional := p_semanticDescriptor}}	
				}
			};
			
    	}//end group Create
    	
    	group Delete {
    	
        	template (value) RequestPrimitive m_deleteRequest(XSD.ID p_resourceAddress, in XSD.ID p_originator := PX_SUPER_USER) := {
        		operation := int4,
        		to_ := p_resourceAddress,
        		from_ := p_originator,
        		requestIdentifier := testcasename() & "-m_deleteResource" & f_rnd(1, 1000000),
        		resourceType := omit,
        		primitiveContent := omit, 
				roleIDs := omit, 
				originatingTimestamp := omit,
				requestExpirationTimestamp := omit,
				resultExpirationTimestamp := omit,
				operationExecutionTime := omit,
				responseType := omit,
				resultPersistence := omit,
				resultContent := omit,
				eventCategory := omit,
				deliveryAggregation := omit,
				groupRequestIdentifier := omit,
				filterCriteria := omit,
				discoveryResultType := omit,
				tokens := omit,
				tokenIDs := omit,
				localTokenIDs := omit, 
				tokenRequestIndicator := omit

        	};
        	
    	}//end group Delete
    	
    	group Notify {
    		
			/**
			 * @desc Base NOTIFY request primitive
			 */
			template RequestPrimitive mw_notifyBase := {
				operation := int5,
				to_ := ?,
				from_ := *,
				requestIdentifier := ?,
				resourceType := *,
				primitiveContent := { any_1 := {{ Notification := mw_contentNotificationBase}} },
				roleIDs := *,
				originatingTimestamp := *,
				requestExpirationTimestamp := *,
				resultExpirationTimestamp := *,
				operationExecutionTime := *,
				responseType := *,
				resultPersistence := *,
				resultContent := *,
				eventCategory := *,
				deliveryAggregation := *,
				groupRequestIdentifier := *,
				filterCriteria := *,
				discoveryResultType := *,
				tokens := *,
				tokenIDs := *,
				localTokenIDs := *,
				tokenRequestIndicator := *
			};
			
			/**
			 * @desc Base NOTIFY request primitive
			 */
			template RequestPrimitive mw_aggregatedNotifyBase := {
				operation := int5,
				to_ := ?,
				from_ := *,
				requestIdentifier := ?,
				resourceType := *,
				primitiveContent := { any_1 := {{ AggregatedNotification := ?}} },
				roleIDs := *,
				originatingTimestamp := *,
				requestExpirationTimestamp := *,
				resultExpirationTimestamp := *,
				operationExecutionTime := *,
				responseType := *,
				resultPersistence := *,
				resultContent := *,
				eventCategory := *,
				deliveryAggregation := *,
				groupRequestIdentifier := *,
				filterCriteria := *,
				discoveryResultType := *,
				tokens := *,
				tokenIDs := *,
				localTokenIDs := *,
				tokenRequestIndicator := *
			};
			
			/**
			 * @desc Base NOTIFY request primitive
			 */
			
			template RequestPrimitive mw_notify(in template Notification p_notification) modifies mw_notifyBase := {
				primitiveContent := { 
					any_1 := {{ Notification := p_notification}}
				}
			};
			

			
    		
    	}//end of group Notify
	}//end group RequestPrimitives
	
	group ContentCreate {
		/**
		 * @desc Base primitiveContent for CREATE operation for AEAnnc resource
		 * @param p_labels Labels
		 * @param p_accessControlPolicyIds AcpIDs
		 * @param p_appId App ID
		 * @param p_nodeLink Node link
		 */
		template AEAnnc_optional m_contentCreateAEAnnc (in template (omit)  Labels p_labels, in template (omit) AcpType p_accessControlPolicyIds, XSD.ID p_appId := PX_APP_ID, in template (omit) XSD.AnyURI p_nodeLink := omit) := {
			resourceName := omit,//O TODO 
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := p_labels,//O
			accessControlPolicyIDs := p_accessControlPolicyIds,//O
			expirationTime := omit,//O
			dynamicAuthorizationConsultationIDs := omit, //TODO Check whether it is optional or mandatory for create operation
			link := omit,//M TODO Put the right value
			appName := omit,//O
			app_ID := p_appId,//M
			aE_ID := omit,//NP
			pointOfAccess := omit, //{"http://127.0.0.1:1400/monitor"},//O //{"http://192.168.1.92:18080/notifications/AE"}, // TODO: Check this => AE PoA
			ontologyRef := omit,//O
			nodeLink := p_nodeLink,//NP
			requestReachability := true,//M
			contentSerialization := omit,//O
			e2eSecInfo := omit, //O TODO Check whether it is optional or mandatory for create operation
			choice := omit//NP
		};	

		/**
		 * @desc Base reception template of primitiveContent for CREATE operation for AEAnnc resource
		 * @param p_labels Labels
		 * @param p_accessControlPolicyIds AcpIDs
		 * @param p_appId App ID
		 * @param p_nodeLink Node link
		 */
		template AEAnnc_optional mw_contentCreateAEAnnc (in template  Labels p_labels := ?, in template AcpType p_accessControlPolicyIds := ?) := {
    		resourceName := omit,//NA M
    		resourceType := omit,//NA M
    		resourceID := omit,//NA M
    		parentID := omit,//NA M
    		creationTime := omit,//NA M
    		lastModifiedTime := omit,//NA M
    		labels := p_labels,//MA
    		accessControlPolicyIDs := p_accessControlPolicyIds,//MA
    		expirationTime := ?,//MA M
    		dynamicAuthorizationConsultationIDs := omit, //OA
			link := ?,//M
			appName := omit,//OA
			app_ID := omit,//OA
			aE_ID := omit,//OA
			pointOfAccess := omit, //OA {"http://127.0.0.1:1400/monitor"},//O //{"http://192.168.1.92:18080/notifications/AE"}, // TODO: Check this => AE PoA
			ontologyRef := omit,//OA
			nodeLink := omit,//OA
			requestReachability := omit,//OA
			contentSerialization := omit,//OA
			e2eSecInfo := ?, //MA
			choice := omit//NA
		};	
		
    	/**
    	 * @desc Base primitiveContent for CREATE operation for AE resource
    	 * @param p_name Resource name
    	 * @param p_accessControlPolicyIds ACP IDs for the AE
    	 */
    	template (value) AE_optional m_contentCreateAe (in template (omit) AcpType p_accessControlPolicyIds, in template (omit)  XSD.String p_name := c_defaultAeResourceName, in template (omit) XSD.ID p_appId := PX_APP_ID, in template (omit) PoaList p_poaList) := {

			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := p_accessControlPolicyIds,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
    		announceTo := omit,//O
    		announcedAttribute := omit,//O
    		appName := omit,//O
			app_ID := p_appId,//M
    		aE_ID := omit,//NP
    		pointOfAccess := p_poaList, //O {"http://127.0.0.1:1400/monitor"},//{"http://192.168.1.92:18080/notifications/AE"}, // TODO: Check this => AE PoA
    		ontologyRef := omit,//O
    		nodeLink := omit,//NP
    		requestReachability := true,//M
    		contentSerialization := omit,//O
			e2eSecInfo := omit, //O
    		choice := omit//NP
    	};	
    	
    	/**
    	 * @desc Base primitiveContent for CREATE operation for AccessControlPolicy resource
    	 * @param p_name Resource name
    	 * @param p_acor Allowed originators
    	 * @param p_allowedOperations Allowed operations
    	 */
    	template (value) AccessControlPolicy_optional m_contentCreateAcp (in template (omit) XSD.String p_name := c_defaultAccessControlPolicyResourceName, in template (value) ListOfURIs p_acor := PX_ACOR, in template (value) AccessControlOperations p_allowedOperations := int63 ) := {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			privileges := {
				accessControlRule_list := {valueof(m_createAcr(p_acor, p_allowedOperations))}
			},//M
			selfPrivileges := {
				accessControlRule_list := {valueof(m_createAcr(p_acor, int63))}
			},//M
			choice := omit //NP
		};
		
		/**
		 * @desc Base reception template of primitiveContent for CREATE operation for AccessControlPolicyAnnc resource
		 * @param p_labels Labels
		 */
		template AccessControlPolicyAnnc_optional mw_contentCreateAcpAnnc (in template (omit)  Labels p_labels := omit) := {
			resourceName := omit,//NA M
			resourceType := omit,//NA M
			resourceID := omit,//NA M
			parentID := omit,//NA M
			creationTime := omit,//NA M
			lastModifiedTime := omit,//NA M
			labels := p_labels,//MA
			expirationTime := ?,//MA M
			link := ?,//M
			privileges := *,//MA
			selfPrivileges := *,//MA
			choice := omit//NA
		};	
		
		template (value) AccessControlRule m_createAcr (in template (value) ListOfURIs p_acor, in template (value) AccessControlOperations p_allowedOperations) := {
			accessControlOriginators := p_acor,//{"*"},//{PX_AE_ID_STEM}, //{"admin:admin"},
			accessControlOperations := p_allowedOperations,
			accessControlContexts_list := {},
			accessControlAuthenticationFlag := omit, 
			accessControlObjectDetails_list := {}
		}
    	
		template (value) CSEBase_optional m_contentCreateCSEBase (in template (value) ServiceSubscribedAppRule p_serviceSubscribedAppRule) := {
			resourceName := omit,
			resourceType := omit,
			resourceID := omit,
			parentID := omit,
			creationTime := omit,
			lastModifiedTime := omit,
			labels := omit,
			accessControlPolicyIDs := omit,
			cseType := omit,
			cSE_ID := omit,
			supportedResourceType := omit,
			pointOfAccess := omit,
			nodeLink := omit,
			e2eSecInfo := omit, 
			choice := {
				choice_list := {{
				  serviceSubscribedAppRule := p_serviceSubscribedAppRule
				}}
			}
		}
    	
    	/**
    	 * @desc Base primitiveContent for CREATE operation for Group resource
    	 * @param p_maxNrOfMembers Max number of members
    	 * @param p_memberIds Member IDs
    	 * @param p_accessControlPolicyIds ACP IDs for the Group
    	 * @param p_name Resource name
    	 */
    	template (value) Group_optional m_contentCreateGroup (	in template (value) XSD.NonNegativeInteger p_maxNrOfMembers,
    															in template (value) ListOfURIs p_memberIds,
    															in template (omit) AcpType p_accessControlPolicyIds,
    															in template (omit) MemberType p_memberType := omit,
    															in template (omit) ConsistencyStrategy p_consistencyStrategy := omit,
    															in template (omit) ListOfURIs p_membersAccessControlPolicyIDs := omit,
																in template (omit) XSD.String p_name := c_defaultGroupResourceName) := {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := p_accessControlPolicyIds,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			creator := omit,//O
			memberType := p_memberType,//O
			currentNrOfMembers := omit,//NP
			maxNrOfMembers := p_maxNrOfMembers,//M
			memberIDs := p_memberIds,//M
			membersAccessControlPolicyIDs := p_membersAccessControlPolicyIDs,//O
			memberTypeValidated := omit,//NP
			consistencyStrategy := p_consistencyStrategy,//O
			groupName := omit,//O
			choice := omit//NP
    	};  
    	
		  /**
		  * @desc Base reception template of primitiveContent for CREATE operation for GroupAnnc resource
		  */
		  template GroupAnnc_optional mw_contentCreateGroupAnncBase := {
			  resourceName := omit,//NA M
			  resourceType := omit,//NA M
			  resourceID := omit,//NA M
			  parentID := omit,//NA M
			  creationTime := omit,//NA M
			  lastModifiedTime := omit,//NA M
			  labels := ?,//MA
			  accessControlPolicyIDs := ?,//MA
			  expirationTime := ?,//MA M
			  link := ?,
			  dynamicAuthorizationConsultationIDs := *, //OA
			  memberType := *, //OA
			  currentNrOfMembers := *, //OA
			  maxNrOfMembers := *, //OA
			  memberIDs := *, //OA
			  membersAccessControlPolicyIDs := *, //OA
			  memberTypeValidated := *, //OA
			  consistencyStrategy := *, //OA
			  groupName := *, //OA
			  choice := omit //NA
		  };
    	
		/**
		 * @desc Base primitiveContent for CREATE operation for MgmtObj resource
		 * @param p_name Resource name
		 * @param p_accessControlPolicyIds ACP IDs for the AE
		 */
		template (value) MgmtObj_optional m_contentCreateMgmtObj (in template (omit) AcpType p_accessControlPolicyIds := omit, in template (omit)  XSD.String p_name := c_defaultMgmtObjResourceName) := {
			
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := p_accessControlPolicyIds,//O
			expirationTime := omit,//O
			dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			mgmtDefinition := omit,//O
			objectIDs := omit,//O
			objectPaths := omit,//O
			description := omit//O
		};	  	
		
		/**
		 * @desc Base reception template of primitiveContent for CREATE operation for MgmtObjAnnc resource
		 */
		template MgmtObjAnnc_optional mw_contentCreateMgmtObjAnncBase := {
			resourceName := omit,//NA M
			resourceType := omit,//NA M
			resourceID := omit,//NA M
			parentID := omit,//NA M
			creationTime := omit,//NA M
			lastModifiedTime := omit,//NA M
			labels := ?,//MA
			accessControlPolicyIDs := ?,//MA
			expirationTime := ?,//MA M
			link := ?,
			dynamicAuthorizationConsultationIDs := *, //OA
			mgmtDefinition := ?, //MA
			objectIDs := *, //OA
			objectPaths := *, //OA
			description := * //OA
		};
		
		/**
		 * @desc Base primitiveContent for CREATE operation for Node resource
		 * @param p_name Resource name
		 * @param p_accessControlPolicyIds ACP IDs for the AE
		 */
		template (value) Node_optional m_contentCreateNode (in template (omit) AcpType p_accessControlPolicyIds := omit, in template (omit)  XSD.String p_name := c_defaultNodeResourceName, in template (omit) XSD.ID p_nodeId := "NodeID") := {//TODO Create PX for NodeID
			
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := p_accessControlPolicyIds,//O
			expirationTime := omit,//O
			dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			nodeID := p_nodeId,//M
			hostedCSELink := omit,//O
			choice := omit//O
		};	  	
		
    	
    	/**
    	 * @desc Base primitiveContent for CREATE operation for PollingChannel resource
    	 * @param p_accessControlPolicyIds ACP IDs for the PollingChannel
    	 * @param p_name Resource name
    	 */
    	template (value) PollingChannel_optional m_contentCreatePollingChannel (in template (omit) XSD.String p_name := c_defaultPollingChannelResourceName) := {
			resourceName := p_name,//O
            resourceType := omit,//NP
            resourceID := omit,//NP
            parentID := omit,//NP
            creationTime := omit,//NP
            lastModifiedTime := omit,//NP
            labels := omit,//O
            expirationTime := omit//O
    	};    	
    	
    	/**
    	 * @desc Base primitiveContent for CREATE operation for Schedule resource
    	 * @param p_scheduleElement Schedule
    	 * @param p_name Resource name
    	 */
    	template (value) Schedule_optional m_contentCreateSchedule (in template (value) ScheduleEntries p_scheduleElement,
																	in template (omit) XSD.String p_name := c_defaultScheduleResourceName) := {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			scheduleElement := p_scheduleElement,//M
			choice := omit//NP
    	};  
    	
		/**
		 * @desc Base reception template of primitiveContent for CREATE operation for ScheduleAnnc resource
		 */
		template ScheduleAnnc_optional mw_contentCreateScheduleAnncBase := {
			resourceName := omit,//NA M
			resourceType := omit,//NA M
			resourceID := omit,//NA M
			parentID := omit,//NA M
			creationTime := omit,//NA M
			lastModifiedTime := omit,//NA M
			labels := ?,//MA
			expirationTime := ?,//MA M
			link := ?,
			scheduleElement := * //OA
		};  	
    	
		template (value) ServiceSubscribedAppRule_optional m_contentCreateServiceSubscribedAppRule (in ListOfM2MID p_applicableCredIDs, in ListOfM2MID p_allowedAppIDs, in ListOfM2MID p_allowedAEs) := {
		  	resourceName := omit,//TODO TS-0004 7.4.29.1 2 Missing attribute
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			applicableCredIDs := p_applicableCredIDs,//O
			allowedApp_IDs := p_allowedAppIDs,//O
			allowedAEs := p_allowedAEs,//O
			choice := omit //O
		}
    	

    	/**
    	 * @desc Base primitiveContent for CREATE operation for Subscription resource
    	 * @param p_notificationURI Notification URI
    	 * @param p_name Resource name
    	 */
    	template (value) Subscription_optional m_contentCreateSubscription (in template (value) ListOfURIs p_notificationURI,
																			in template (omit) XSD.String p_name := c_defaultSubscriptionResourceName) := {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			creator := omit,//O
			eventNotificationCriteria := omit,//O
			expirationCounter := omit,//O
			notificationURI := p_notificationURI,//M
			groupID := omit,//O
			notificationForwardingURI := omit,//O
			batchNotify := omit,//O
			rateLimit := omit,//O
			preSubscriptionNotify := omit,//O
			pendingNotification := omit,//O
			notificationStoragePriority := omit,//O
			latestNotify := omit,//O
			notificationContentType := omit, //O
			notificationEventCat := omit,//O
			subscriberURI := omit,//O
			choice := omit//NP
    	};   	
    	
		template (value) Subscription_optional m_contentCreateSubscriptionAdvanced (in template (value) ListOfURIs p_notificationURI,
																					in template (omit)  XSD.String p_name := c_defaultSubscriptionResourceName,
																					in template (omit) EventNotificationCriteria p_eventNotificationCriteria,
																					in template (omit) XSD.PositiveInteger p_expirationCounter,
																					in template (omit) BatchNotify p_batchNotify,
																					in template (omit) XSD.Boolean p_latestNotify,
																					in template (omit) XSD.AnyURI p_subscriberURI,
																					in template (omit) NotificationContentType p_notificationContentType) modifies m_contentCreateSubscription := {
			eventNotificationCriteria := p_eventNotificationCriteria,//O
			expirationCounter := p_expirationCounter,//O
			batchNotify := p_batchNotify,//O
			latestNotify := p_latestNotify,//O
			notificationContentType := p_notificationContentType, //TODO Set to omit once xsd is fixed,//O
			subscriberURI := p_subscriberURI//O
		}; 
		
		template (value) EventNotificationCriteria m_eventNotificationCriteria ( in EventNotificationCriteria.notificationEventType_list p_notificationEventType_list := {}, template (omit) EventNotificationCriteria.attribute p_attribute_list := omit) := { //the parameter should be a list of NotificationEventTypeEventType
			createdBefore := omit,
			createdAfter := omit,
			modifiedSince := omit,
			unmodifiedSince := omit,
			stateTagSmaller := omit,
			stateTagBigger := omit,
			expireBefore := omit,
			expireAfter := omit,
			sizeAbove := omit,
			sizeBelow := omit,
			operationMonitor_list := {},
			attribute := p_attribute_list, 
			notificationEventType_list := p_notificationEventType_list,// TODO this list should be able to be omited see 9.6.8 (TS0001)
			missingData := omit
		};
        
		template (value) BatchNotify m_batchNotifyNumber3Duration1 (in XSD.NonNegativeInteger p_number) := {
			number := p_number,
			duration := "PT1S" //TODO duration has to be set to 1s and match to the Duration regex 
		};
		//normaly duration can be omited
		
		
         	
    	
    	/**
    	 * @desc Base primitiveContent for CREATE operation for ContentInstance resource
    	 * @param p_primitiveContent Content for the ContentInstance
    	 */
    	template (value) ContentInstance_optional m_contentCreateContentInstance(in template (omit) XSD.String p_name := c_defaultContentInstanceResourceName, XSD.String p_primitiveContent := "AnyValue") := {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			stateTag := omit,//NP
			creator := omit,//O
			contentInfo := "a",//O
			contentSize := omit,//NP
			contentRef := omit, //O
			ontologyRef := omit,//O
			content := { 
				embed_values := {p_primitiveContent},
				attr := omit,
				elem_list := {}  
			}, //M
			choice := omit //O
		};
		
		/**
		 * @desc Base primitiveContent for CREATE operation for ContentInstanceAnnc resource
		 * @param p_primitiveContent Content for the ContentInstanceAnnc
		 */
		template ContentInstanceAnnc_optional mw_contentCreateContentInstanceAnncBase := {
			resourceName := omit,//NA M
			resourceType := omit,//NA M
			resourceID := omit,//NA M
			parentID := omit,//NA M
			creationTime := omit,//NA M
			lastModifiedTime := omit,//NA M
			labels := ?,//MA
			expirationTime := omit,//O NA
			link := omit, //O NA
			stateTag := *,// OA
			contentInfo := *,//OA
			contentSize := *,//OA
			ontologyRef := *,//OA
			content := *, //OA
			choice := omit //O
		};
		
    	/**
    	 * @desc Base primitiveContent for CREATE operation for Container resource
    	 * @param p_name Resource name
    	 */
    	template (value) Container_optional m_contentCreateContainer (in template (omit) XSD.String p_name := c_defaultContainerResourceName):= {
			resourceName := p_name,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			stateTag := omit,//NP
			creator := omit,//O
			maxNrOfInstances := omit,//O
			maxByteSize := omit,//O
			maxInstanceAge := omit,//O
			currentNrOfInstances := omit,//NP
			currentByteSize := omit,//NP
			locationID := omit,//O
			ontologyRef := omit,//O
			disableRetrieval := omit, //O
			choice := omit//NP
    	};
    	
		/**
		* @desc Base reception template of primitiveContent for CREATE operation for ContainerAnnc resource
		*/
		template ContainerAnnc_optional mw_contentCreateContainerAnncBase := {
			resourceName := omit,//NA M
			resourceType := omit,//NA M
			resourceID := omit,//NA M
			parentID := omit,//NA M
			creationTime := omit,//NA M
			lastModifiedTime := omit,//NA M
			labels := ?,//MA M
			accessControlPolicyIDs := ?,//MA
			expirationTime := ?,//MA M
			link := ?, //M
			dynamicAuthorizationConsultationIDs := *, //OA
			stateTag := *,	//OA
			maxNrOfInstances := *,	//OA
			maxByteSize := *, //OA
			maxInstanceAge := *, //OA
			currentNrOfInstances := *, //OA
			currentByteSize := *, //OA
			locationID := *, //OA
			ontologyRef := *, //OA
			disableRetrieval := *, //OA
			choice := omit //NA
		};
    	
    	template (value) LocationPolicy_optional m_contentCreateLocationPolicy (in template (value) LocationSource p_locationSource, in template (omit) AcpType p_accessControlPolicyIds, in template (value) XSD.Duration p_locationUpdatePeriod, in template (value) NodeID p_locationTargetID, in template (value) XSD.AnyURI p_locationServerAddress) := {
    	  	resourceName 				:= c_defaultLocationPolicyResourceName, //O
    	  	resourceType				:= omit, //NP
    	    resourceID					:= omit, //NP
    	    parentID					:= omit, //NP
    	  	creationTime				:= omit, //NP
    	  	lastModifiedTime			:= omit, //NP
    	  	labels 						:= PX_LABELS,//O
    	  	accessControlPolicyIDs 	:= p_accessControlPolicyIds, //O
 	  	  	expirationTime 			:= omit, //O
      		dynamicAuthorizationConsultationIDs := omit, //O
    	  	announceTo 				:= omit, 				   //O
    	  	announcedAttribute		:= omit, 			      //O
    		locationSource 			:= p_locationSource, //M
    		locationUpdatePeriod 		:= p_locationUpdatePeriod, //O
    		locationTargetID 			:= p_locationTargetID, 	//O
    		locationServer 			:= p_locationServerAddress,//O
    		locationContainerID		:= omit,    		   //NP
    		locationContainerName 	:= PX_LOCATION_CONTAINER_NAME,//O    		
    	  	locationStatus				:= omit,              //NP
    	    choice 					:= omit  	         //NP
    	   	  	
    	};
    	
	  /**
	  * @desc Base reception template of primitiveContent for CREATE operation for LocationPolicyAnnc resource
	  */
	  template LocationPolicyAnnc_optional mw_contentCreateLocationPolicyAnncBase := {
		  resourceName := omit,//NA M
		  resourceType := omit,//NA M
		  resourceID := omit,//NA M
		  parentID := omit,//NA M
		  creationTime := omit,//NA M
		  lastModifiedTime := omit,//NA M
		  labels := ?,//MA
		  accessControlPolicyIDs := ?,//MA
		  expirationTime := ?,//MA M
		  link := ?,
		  dynamicAuthorizationConsultationIDs := *, //OA
		  locationSource := *, //OA
		  locationUpdatePeriod := *, //OA
		  locationTargetID := *, //OA
		  locationServer := *, //OA
		  locationContainerID := *, //OA
		  locationContainerName := *, //OA
		  locationStatus := *	//OA
	  };
    	
    	template (value) Notification m_contentCreateNotification (in template (value) Representation p_resourcePresentation, 
    																in template (omit) NotificationEventType p_notifEventType, 
    																in template (omit) XSD.AnyURI p_subReference, 
    																in template (omit) XSD.AnyURI p_notifForwardingURI) := {
    	  notificationEvent := {
    	    representation := p_resourcePresentation,
        	operationMonitor := {
        		operation := omit,
        	    originator := omit
        	},
        	notificationEventType := p_notifEventType    	    
    	  },
    	  verificationRequest := omit,
    	  subscriptionDeletion := omit,
    	  subscriptionReference := p_subReference,
    	  creator := omit,
    	  notificationForwardingURI := p_notifForwardingURI,
    	  iPEDiscoveryRequest := omit
    	};
    			
		/**
		 * @desc 	Base primitiveContent for CREATE operation for SemanticDescriptor resource
		 */
		template SemanticDescriptor_optional mw_contentCreateSemanticDescriptor := {			
			resourceName := *,                              //O
			resourceType := omit,                           //NP
			resourceID := omit,                             //NP
			parentID := omit,                               //NP
			creationTime := omit,                           //NP
			lastModifiedTime := omit,                       //NP
			labels := *,                                    //O
			accessControlPolicyIDs := *,                    //O
			expirationTime := *,                            //O
			dynamicAuthorizationConsultationIDs := *,       //?
			announceTo := *,                                //O
			announcedAttribute := *,                        //O
			creator := *,                                   //O
			descriptorRepresentation := ?,                  //M
			semanticOpExec := omit,                         //NP
			descriptor := ?,                                //M
			ontologyRef := *,                               //O
			relatedSemantics := *,                          //O
			choice := *                                     //?
		} 
		
		/**
		 * @desc  primitiveContent for CREATE operation for SemanticDescriptor resource, with specific OntologyRef
		 * @param p_ontologyRef  Expected OntologyRef value
		 */
		template SemanticDescriptor_optional mw_contentCreateSemanticDescriptor_ontologyRef(template XSD.AnyURI p_ontologyRef) modifies mw_contentCreateSemanticDescriptor := {
			ontologyRef := p_ontologyRef
		}  
		
	}//end group ContentCreate
	
	group ContentUpdate {
		
		/**
		 * @desc Base primitiveContent for UPDATE operation for AE resource
		 */
		template (value) AE_optional m_contentUpdateAe := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			appName := omit,//O
			app_ID := omit,//NP
			aE_ID := omit,//NP
			pointOfAccess := omit,//O
			ontologyRef := omit,//O
			nodeLink := omit,//NP
			requestReachability := omit,//O
			contentSerialization := omit,//O
			e2eSecInfo := omit, //O
			choice := omit//NP
		};	
    	
		/**
		 * @desc Base primitiveContent for UPDATE operation for AccessControlPolicy resource
		 */
		template (value) AccessControlPolicy_optional m_contentUpdateAcp := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			privileges := omit,//O
			selfPrivileges := omit,//O
			choice := omit //NP
		};
		
		template (value) AccessControlPolicy_optional m_contentUpdateAcpPrivileges(in template(omit) SetOfAcrs p_privileges, in template(omit) SetOfAcrs p_selfPrivileges) modifies m_contentUpdateAcp := {
			privileges := p_privileges,//O
			selfPrivileges := p_selfPrivileges//O
		};
    	
		/**
		 * @desc Base primitiveContent for UPDATE operation for Group resource
		 */
		template (value) Group_optional m_contentUpdateGroup := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
	    	dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			creator := omit,//NP
			memberType := omit,//NP
			currentNrOfMembers := omit,//NP
			maxNrOfMembers := omit,//O
			memberIDs := omit,//O
			membersAccessControlPolicyIDs := omit,//O
			memberTypeValidated := omit,//NP
			consistencyStrategy := omit,//NP
			groupName := omit,//O
			choice := omit//NP

		};
    	
		/**
		 * @desc Base primitiveContent for UPDATE operation for PollingChannel resource
		 */
		template (value) PollingChannel_optional m_contentUpdatePollingChannel := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit//O
		};
    	
		/**
		 * @desc Base primitiveContent for UPDATE operation for Schedule resource
		 */
		template (value) Schedule_optional m_contentUpdateSchedule := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			scheduleElement := omit,//O
			choice := omit//NP
		};
    	
		/**
		 * @desc Base primitiveContent for UPDATE operation for Subscription resource
		 */
		template (value) Subscription_optional m_contentUpdateSubscription := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			creator := omit,//NP
			eventNotificationCriteria := omit,//O
			expirationCounter := omit,//O
			notificationURI := omit,//O
			groupID := omit,//O
			notificationForwardingURI := omit,//O
			batchNotify := omit,//O
			rateLimit := omit,//O
			preSubscriptionNotify := omit,//NP
			pendingNotification := omit,//O
			notificationStoragePriority := omit,//O
			latestNotify := omit,//O
			notificationContentType := omit,//O
			notificationEventCat := omit,//O
			subscriberURI := omit,//NP
			choice := omit//NP
		};
				
		/**
		 * @desc Base primitiveContent for UPDATE operation for Container resource
		 */
		template (value) Container_optional m_contentUpdateContainer := {
			resourceName := omit,//NP
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//O
    		dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			stateTag := omit,//NP
			creator := omit,//NP
			maxNrOfInstances := omit,//O
			maxByteSize := omit,//O
			maxInstanceAge := omit,//O
			currentNrOfInstances := omit,//NP
			currentByteSize := omit,//NP
			locationID := omit,//O
			ontologyRef := omit,//O
    		disableRetrieval := omit, //NP
			choice := omit//NP
		};
		
		/**
		 * @desc Base primitiveContent for UPDATE operation for ContentInstance resource
		 */
		template (value) ContentInstance_optional m_contentUpdateContentInstance := {
			resourceName := omit,//O
			resourceType := omit,//NP
			resourceID := omit,//NP
			parentID := omit,//NP
			creationTime := omit,//NP
			lastModifiedTime := omit,//NP
			labels := omit,//O
			expirationTime := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			stateTag := omit,//NP
			creator := omit,//O
			contentInfo := omit,//O
			contentSize := omit,//NP
			contentRef := omit, //O
			ontologyRef := omit,//O
			content := omit, //M
			choice := omit //O
		};
		
		template (value) LocationPolicy_optional m_contentUpdateLocationPolicy (in template (omit) AcpType p_accessControlPolicyIds, in template (value) XSD.Duration p_locationUpdatePeriod) := {
    	  	resourceName 			:= omit,//NP
    	  	resourceType			:= omit,//NP
    	    resourceID				:= omit,//NP
    	    parentID				:= omit,//NP
    	  	creationTime			:= omit,//NP
    	  	lastModifiedTime		:= omit,//NP
    	  	labels 					:= PX_LABELS,//O
    	  	accessControlPolicyIDs 	:= p_accessControlPolicyIds,//O
    	  	expirationTime 			:= omit,//O    	  	
    		dynamicAuthorizationConsultationIDs := omit, //O
    	  	announceTo 				:= omit,//O
    	  	announcedAttribute		:= omit,//O
    		locationSource 			:= omit,//NP
    		locationUpdatePeriod 	:= p_locationUpdatePeriod, //O
    		locationTargetID 		:= omit, //NP
    		locationServer 			:= omit, //NP
    		locationContainerID		:= omit, //NP  
    		locationContainerName 	:= PX_LOCATION_CONTAINER_NAME, //O    		 		
    	  	locationStatus			:= omit, //NP
    	    choice 					:= omit  //NP	   	  	
    	};
		
	}//end group ContentUpdate

	group ResponseContent {
		
		template AE_optional mw_contentAeBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := ?,//M
    		dynamicAuthorizationConsultationIDs := *, //O
			announceTo := *,//O
			announcedAttribute := *,//O
			appName := *,//O
			app_ID := ?,//M
			aE_ID := ?,//M
			pointOfAccess := *,//O
			ontologyRef := *,//O
			nodeLink := *,//O
			requestReachability := ?,//M
			contentSerialization := *,//O
			e2eSecInfo:= *, //O
			choice := *//O
		};
    	
		template AE_optional m_contentAe_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//O
			appName := omit,//O
			app_ID := omit,//M
			aE_ID := omit,//M
			pointOfAccess := omit,//O
			ontologyRef := omit,//O
			nodeLink := omit,//O
			requestReachability := omit,//M
			contentSerialization := omit,//O
			e2eSecInfo:= omit, //O
			choice := omit//O
		};
		
		template AE_optional mw_contentAe_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := *,//M
			dynamicAuthorizationConsultationIDs := *, //O
			announceTo := *,//O
			announcedAttribute := *,//O
			appName := *,//O
			app_ID := *,//M
			aE_ID := *,//M
			pointOfAccess := *,//O
			ontologyRef := *,//O
			nodeLink := *,//O
			requestReachability := *,//M
			contentSerialization := *,//O
			e2eSecInfo:= *, //O
			choice := *//O
		};
    	
		template AccessControlPolicy_optional mw_contentAcpBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			expirationTime := ?,//M
			announceTo := *,//O
			announcedAttribute := *,//O
			privileges := ?,//M
			selfPrivileges := ?,//M
			choice := *//O
		};
		
		template AccessControlPolicy_optional mw_contentAcp_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			expirationTime := *,//M
			announceTo := *,//O
			announcedAttribute := *,//M
			privileges := *,//M
			selfPrivileges := *,//M
			choice := *//O
		}
		
		template AccessControlPolicy_optional m_contentAcp_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			expirationTime := omit,//M
			announceTo := omit,//O
			announcedAttribute := omit,//M
			privileges := omit,//M
			selfPrivileges := omit,//M
			choice := omit//O
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc1 modifies mw_contentAcpBase := {
			choice := omit	//O
		}
		
		//TODO
		template XSD.AnyURI mw_contentAcp_rc2 := ?;
		
		template Resource mw_contentAcp_rc3 := {
			choice := {sg_announceableSubordinateResource := {accessControlPolicy := ?}},
			uRI := ? 	
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc4 modifies mw_contentAcpBase := {
			choice := {subscription_list := ?}	//O
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc5 modifies mw_contentAcpBase := {
			choice := {childResource_list := ?}	//O
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc6 modifies mw_contentAcpBase := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			expirationTime := omit,//M
			announceTo := omit,//O
			announcedAttribute := omit,//M
			privileges := omit,//M
			selfPrivileges := omit,//M
			choice := {childResource_list := ?}//O
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc7 modifies mw_contentAcpBase := {
			
		}
		
		template AccessControlPolicy_optional mw_contentAcp_rc8 modifies m_contentAcp_allOmit := {
			choice := {childResource_list := ?}	//O
		}
    	
		template Group_optional mw_contentGroupBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := ?,//M
    		dynamicAuthorizationConsultationIDs := *, //O
			announceTo := *,//O
			announcedAttribute := *,//O
			creator := *,//O
			memberType := ?,//M
			currentNrOfMembers := ?,//M
			maxNrOfMembers := ?,//M
			memberIDs := ?,//M
			membersAccessControlPolicyIDs := *,//O
			memberTypeValidated := *,//O
			consistencyStrategy := *,//O
			groupName := *,//O
			choice := *//O
		};
		
		template Group_optional mw_contentGroup_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := *,//M
			dynamicAuthorizationConsultationIDs := *,//O
			announceTo := *,//O
			announcedAttribute := *,//M
			creator := *,//O
			memberType := *,//M
			currentNrOfMembers := *,//M
			maxNrOfMembers := *,//M
			memberIDs := *,//M
			membersAccessControlPolicyIDs := *,//O
			memberTypeValidated := *,//M
			consistencyStrategy := *,//O
			groupName := *,//O
			choice := *//O
		}
		
		template Group_optional m_contentGroup_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//M
			creator := omit,//O
			memberType := omit,//M
			currentNrOfMembers := omit,//M
			maxNrOfMembers := omit,//M
			memberIDs := omit,//M
			membersAccessControlPolicyIDs := omit,//O
			memberTypeValidated := omit,//M
			consistencyStrategy := omit,//O
			groupName := omit,//O
			choice := omit//O
		}
		
		template Group_optional mw_contentGroup_rc1 modifies mw_contentGroupBase := {
			choice := omit	//O
		}
		
		template XSD.AnyURI mw_contentGroup_rc2 := ?; 
		
		template Resource  mw_contentGroup_rc3 := {
			choice := {sg_announceableResource := {group_ := ?}},
			uRI := ?
		}
		
		template Group_optional mw_contentGroup_rc4 modifies mw_contentGroupBase := {
			choice := {choice_list := {{subscription := ?}}}	//O
		}
		
		template Group_optional mw_contentGroup_rc5 modifies mw_contentGroupBase := {
			choice := {childResource_list := ?}	//O
		}
		
		template Group_optional mw_contentGroup_rc6 modifies mw_contentGroupBase := { 
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit,//O
			announceTo := omit,//O
			announcedAttribute := omit,//M
			creator := omit,//O
			memberType := omit,//M
			currentNrOfMembers := omit,//M
			maxNrOfMembers := omit,//M
			memberIDs := omit,//M
			membersAccessControlPolicyIDs := omit,//O
			memberTypeValidated := omit,//M
			consistencyStrategy := omit,//O
			groupName := omit,//O
			choice := {childResource_list := ?}//O
		}
		
		template Group_optional mw_contentGroup_rc7 modifies mw_contentGroupBase := {
			
		}
		
		template Group_optional mw_contentGroup_rc8 modifies m_contentGroup_allOmit := {
			choice := {childResource_list := ?}	//O
		}
    	
		template PollingChannel_optional mw_contentPollingChannelBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			expirationTime := ?//M
		};
		
		template PollingChannel_optional mw_contentPollingChannel_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			expirationTime := *//M
		};
		
		template PollingChannel_optional m_contentPollingChannel_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			expirationTime := omit//M
		};
		
		template PollingChannel_optional mw_contentPollingChannel_rc1 modifies mw_contentPollingChannelBase := {
		}
		
		template XSD.AnyURI mw_contentPollingChannel_rc2 := ?; 
		
		template Resource  mw_contentPollingChannel_rc3 := {
			choice := {sg_subordinateResource := {pollingChannel := ?}},
			uRI := ?
		}
		
		template PollingChannel_optional mw_contentPollingChannel_rc4 modifies mw_contentPollingChannelBase := {
		}
		
		template PollingChannel_optional mw_contentPollingChannel_rc5 modifies mw_contentPollingChannelBase := {
		}
		
		template PollingChannel_optional mw_contentPollingChannel_rc6 modifies mw_contentPollingChannelBase := { 
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			expirationTime := *//M
		}
		
		template Schedule_optional mw_contentScheduleBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			expirationTime := ?,//M
			announceTo := *,//O
			announcedAttribute := *,//O
			scheduleElement := ?,//M
			choice := *//O
		};
		
		template Schedule_optional mw_contentSchedule_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			expirationTime := *,//M
			announceTo := *,//O
			announcedAttribute := *,//M
			scheduleElement := *,//M
			choice := *//O
		}
		
		template Schedule_optional m_contentSchedule_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			expirationTime := omit,//M
			announceTo := omit,//O
			announcedAttribute := omit,//M
			scheduleElement := omit,//M
			choice := omit//O
		}
		
		template Schedule_optional mw_contentSchedule_rc1 modifies mw_contentScheduleBase := {
			choice := omit	//O
		}
		
		template XSD.AnyURI mw_contentSchedule_rc2 := ?; 
		
		template Resource mw_contentSchedule_rc3 := {
			choice := {sg_announceableSubordinateResource := {schedule := ?}},
			uRI := ?
		}
		
		template Schedule_optional mw_contentSchedule_rc4 modifies mw_contentScheduleBase := {
			choice := {choice_list := ?}	//O
		}
		
		template Schedule_optional mw_contentSchedule_rc5 modifies mw_contentScheduleBase := {
			choice := {childResource_list := ?}	//O
		}
		
		template Schedule_optional mw_contentSchedule_rc6 modifies mw_contentScheduleBase := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			expirationTime := omit,//M
			announceTo := omit,//O
			announcedAttribute := omit,//M
			scheduleElement := omit,//M
			choice := {childResource_list := ?}//O
		}
		
		template Schedule_optional mw_contentSchedule_rc7 modifies mw_contentScheduleBase := {
			
		}
		
		template Schedule_optional mw_contentSchedule_rc8 modifies m_contentSchedule_allOmit := {
			choice := {childResource_list := ?}	//O
		}
    	
		template Subscription_optional mw_contentSubscriptionBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := ?,//M
    		dynamicAuthorizationConsultationIDs := *, //O
			creator := *,//O
			eventNotificationCriteria := *,//O
			expirationCounter := *,//O
			notificationURI := ?,//M
			groupID := *,//O
			notificationForwardingURI := *,//O
			batchNotify := *,//O
			rateLimit := *,//O
			preSubscriptionNotify := *,//O
			pendingNotification := *,//O
			notificationStoragePriority := *,//O
			latestNotify := *,//O
			notificationContentType := *,//O
			notificationEventCat := *,//O
			subscriberURI := *,//O
			choice := *//O
		};
		template Subscription_optional mw_contentSubscription_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := *,//M
		    dynamicAuthorizationConsultationIDs := *, //O
			creator := *,//O
			eventNotificationCriteria := *,//O
			expirationCounter := *,//O
			notificationURI := *,//M
			groupID := *,//O
			notificationForwardingURI := *,//O
			batchNotify := *,//O
			rateLimit := *,//O
			preSubscriptionNotify := *,//O
			pendingNotification := *,//O
			notificationStoragePriority := *,//O
			latestNotify := *,//O
			notificationContentType := *,//M
			notificationEventCat := *,//O
			subscriberURI := *,//O
			choice := *//O
		}
		
		template Subscription_optional m_contentSubscription_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit, //O
			creator := omit,//O
			eventNotificationCriteria := omit,//O
			expirationCounter := omit,//O
			notificationURI := omit,//M
			groupID := omit,//O
			notificationForwardingURI := omit,//O
			batchNotify := omit,//O
			rateLimit := omit,//O
			preSubscriptionNotify := omit,//O
			pendingNotification := omit,//O
			notificationStoragePriority := omit,//O
			latestNotify := omit,//O
			notificationContentType := omit,//M
			notificationEventCat := omit,//O
			subscriberURI := omit,//O
			choice := omit//O
		}
		template Subscription_optional mw_contentSubscription_rc1 modifies mw_contentSubscriptionBase := {
			choice := omit	//O
		}
		
		template XSD.AnyURI mw_contentSubscription_rc2 := ?;  
		
		template Resource mw_contentSubscription_rc3 := {
			choice := {sg_regularResource := {subscription := ?}},
			uRI := ?
		}
		
		template Subscription_optional mw_contentSubscription_rc4 modifies mw_contentSubscriptionBase := {
			choice := { choice_list := {{schedule := ?}}}	//O
		}
		
		template Subscription_optional mw_contentSubscription_rc5 modifies mw_contentSubscriptionBase := {
			choice := {childResource_list := ?}	//O
		}
		
		template Subscription_optional mw_contentSubscription_rc6 modifies mw_contentSubscriptionBase := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
    		dynamicAuthorizationConsultationIDs := omit, //O
			creator := omit,//O
			eventNotificationCriteria := omit,//O
			expirationCounter := omit,//O
			notificationURI := omit,//M
			groupID := omit,//O
			notificationForwardingURI := omit,//O
			batchNotify := omit,//O
			rateLimit := omit,//O
			preSubscriptionNotify := omit,//O
			pendingNotification := omit,//O
			notificationStoragePriority := omit,//O
			latestNotify := omit,//O
			notificationContentType := omit,//M
			notificationEventCat := omit,//O
			subscriberURI := omit,//O
			choice := {childResource_list := ?}//O
		}
		
		template Subscription_optional mw_contentSubscription_rc7 modifies mw_contentSubscriptionBase := {
			
		}
		
		template Subscription_optional mw_contentSubscription_rc8 modifies m_contentSubscription_allOmit := {
			choice := {childResource_list := ?}	//O
		}
    	
		template ContentInstance_optional mw_contentContentInstanceBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			expirationTime := ?,//M
			announceTo := *,//O
			announcedAttribute := *,//O
			stateTag := ?,//M
			creator := *,//O
			contentInfo := *,//O
			contentSize := ?,//M
			contentRef := *, //O
			ontologyRef := *,//O
			content := ?,//M
			choice := * //O
			
		};
		
		template Container_optional mw_contentContainerBase := {
			resourceName := ?,//M
			resourceType := ?,//M
			resourceID := ?,//M
			parentID := ?,//M
			creationTime := ?,//M
			lastModifiedTime := ?,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := ?,//M
    		dynamicAuthorizationConsultationIDs := *, //O
			announceTo := *,//O
			announcedAttribute := *,//O
			stateTag := ?,//M
			creator := *,//O
			maxNrOfInstances := *,//O
			maxByteSize := *,//O
			maxInstanceAge := *,//O
			currentNrOfInstances := ?,//M
			currentByteSize := ?,//M
			locationID := *,//O
			ontologyRef := *,//O
			disableRetrieval := *, //O
			choice := *//O
		};
		
		template Container_optional mw_contentContainer_any := {
			resourceName := *,//M
			resourceType := *,//M
			resourceID := *,//M
			parentID := *,//M
			creationTime := *,//M
			lastModifiedTime := *,//M
			labels := *,//O
			accessControlPolicyIDs := *,//O
			expirationTime := *,//M
			dynamicAuthorizationConsultationIDs := *, //O
			announceTo := *,//O
			announcedAttribute := *,//M
			stateTag := *,//M
			creator := *,//M
			maxNrOfInstances := *,//O
			maxByteSize := *,//O
			maxInstanceAge := *,//O
			currentNrOfInstances := *,//M
			currentByteSize := *,//M
			locationID := *,//O
			ontologyRef := *,//O
			disableRetrieval := *, //O
			choice := *//O
		}
		
		template Container_optional m_contentContainer_allOmit := {
			resourceName := omit,//M
			resourceType := omit,//M
			resourceID := omit,//M
			parentID := omit,//M
			creationTime := omit,//M
			lastModifiedTime := omit,//M
			labels := omit,//O
			accessControlPolicyIDs := omit,//O
			expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
			announcedAttribute := omit,//M
			stateTag := omit,//M
			creator := omit,//M
			maxNrOfInstances := omit,//O
			maxByteSize := omit,//O
			maxInstanceAge := omit,//O
			currentNrOfInstances := omit,//M
			currentByteSize := omit,//M
			locationID := omit,//O
			ontologyRef := omit,//O
			disableRetrieval := omit, //O
			choice := omit//O
		}
		
		template Container_optional mw_contentContainer_rc1 modifies mw_contentContainerBase := {
			choice := omit	//O
		}
		
		template XSD.AnyURI mw_contentContainer_rc2 := ?;
		
		template Resource mw_contentContainer_rc3 := {
			choice := {sg_announceableResource := {container := ?}},
			uRI := ?
		}
		
		template Container_optional mw_contentContainer_rc4 modifies mw_contentContainerBase := {
			choice := {choice_list := ?}	//O
		}
		
		template Container_optional mw_contentContainer_rc5 modifies mw_contentContainerBase := {
			choice := {childResource_list := ?}	//O
		}
		
		template Container_optional mw_contentContainer_rc6 modifies mw_contentContainerBase := {
			resourceName := omit,//M
            resourceType := omit,//M
            resourceID := omit,//M
            parentID := omit,//M
            creationTime := omit,//M
            lastModifiedTime := omit,//M
            labels := omit,//O
            accessControlPolicyIDs := omit,//O
            expirationTime := omit,//M
			dynamicAuthorizationConsultationIDs := omit, //O
			announceTo := omit,//O
            announcedAttribute := omit,//M
            stateTag := omit,//M
            creator := omit,//M
            maxNrOfInstances := omit,//O
            maxByteSize := omit,//O
            maxInstanceAge := omit,//O
            currentNrOfInstances := omit,//M
            currentByteSize := omit,//M
            locationID := omit,//O
            ontologyRef := omit,//O
            disableRetrieval := omit, //O
            choice := {childResource_list := ?}//O
		}
		
		template Container_optional mw_contentContainer_rc7 modifies mw_contentContainerBase := {
		
		}
		
		template Container_optional mw_contentContainer_rc8 modifies m_contentContainer_allOmit := {
			choice := {childResource_list := ?}	//O
		}
		
		template Notification m_contentNotification_allOmit := {
			notificationEvent:= omit,
			verificationRequest := omit,
			subscriptionDeletion := omit,
			subscriptionReference := omit,
			creator := omit,
			notificationForwardingURI := omit,
			iPEDiscoveryRequest := omit
		};
		
		template Notification mw_contentNotification_any := {
			notificationEvent := *,
			verificationRequest := *,
			subscriptionDeletion := *,
			subscriptionReference := *,
			creator := *,
			notificationForwardingURI := *,
			iPEDiscoveryRequest := *
		};
		

		template Notification mw_contentNotificationBase := {
			notificationEvent := *,//O
			verificationRequest := *,//O
			subscriptionDeletion := *,//O
			subscriptionReference := ?,//M
			creator := *,//O
			notificationForwardingURI := *,//O
			iPEDiscoveryRequest := *//O
		};


		template Notification mw_contentNotification (in template Representation p_representation) modifies mw_contentNotificationBase := {
			notificationEvent := {
				representation := p_representation,
				operationMonitor := *,
				notificationEventType := ?
			}
		};


	}//end group responseContent
	
	group SpecialContents {

		template (value) AE_update_invalid m_contentUpdateAe_invalid := {
			labels := omit,
			accessControlPolicyIDs := omit,
			creationTime := omit,
			expirationTime := omit,
			dynamicAuthorizationConsultationIDs := omit, 
			announceTo := omit,
			announcedAttribute := omit,
			appName := omit,
			pointOfAccess := omit,
			ontologyRef := omit,
			nodeLink := omit,
			requestReachability := omit,
			contentSerialization := omit,
			e2eSecInfo := omit
		};
    	
		template (value) ACP_update_invalid m_contentUpdateAcp_invalid := {
			labels := omit,
			expirationTime := omit,
			creationTime := omit,
			expirationCounter := omit,
			announceTo := omit,
			announcedAttribute := omit,
			privileges := omit,
			selfPrivileges := omit
		};
    	
		template (value) Group_update_invalid m_contentUpdateGroup_invalid := {
			labels := omit,
			accessControlPolicyIDs := omit,
			creationTime := omit,
			expirationCounter := omit,
			expirationTime := omit,
			dynamicAuthorizationConsultationIDs := omit, 
			announceTo := omit,
			announcedAttribute := omit,
			maxNrOfMembers := omit,
			memberIDs := omit,
			membersAccessControlPolicyIDs := omit,
			groupName := omit
		};
    	
		template (value) PollingChannel_update_invalid m_contentUpdatePollingChannel_invalid := {
			labels := omit,
			creationTime := omit,
			expirationCounter := omit,
			expirationTime := omit
		};
    	
		template (value) Schedule_update_invalid m_contentUpdateSchedule_invalid := {
			labels := omit,
			creationTime := omit,
			expirationCounter := omit,
			expirationTime := omit,
			dynamicAuthorizationConsultationIDs := omit,
			announceTo := omit,
			announcedAttribute := omit,
			scheduleElement := omit
		};
    	
		template (value) Subscription_update_invalid m_contentUpdateSubscription_invalid := {
			labels := omit,
			accessControlPolicyIDs := omit,
			creationTime := omit,
			maxNrOfInstances := omit,
			expirationTime := omit,
			dynamicAuthorizationConsultationIDs := omit,
			eventNotificationCriteria := omit,
			expirationCounter := omit,
			notificationURI := omit,
			groupID := omit,
			notificationForwardingURI := omit,
			batchNotify := omit,
			rateLimit := omit,
			pendingNotification := omit,
			notificationStoragePriority := omit,
			latestNotify := omit,
			notificationContentType := omit,
			notificationEventCat := omit
		};
		
		template (value) Container_update_invalid m_contentUpdateContainer_invalid := {
			labels := omit,
			accessControlPolicyIDs := omit,
			creationTime := omit,
			expirationCounter := omit,
			expirationTime := omit,
			dynamicAuthorizationConsultationIDs := omit,
			announceTo := omit,
			announcedAttribute := omit,
			maxNrOfInstances := omit,
			maxByteSize := omit,
			maxInstanceAge := omit,
			locationID := omit,
			ontologyRef := omit
		};		
				
	}//end group SpecialContents
	
	group ResponsePrimitives {
		
		/**
		 * @desc  Base template for sending ResponsePrimitive
		 * @param p_statusCode	Status code
		 * @param p_requestId	Request ID of the corresponding request
		 */
		template (value) ResponsePrimitive m_responsePrimitive(in ResponseStatusCode p_statusCode, in RequestID p_requestId, in template (omit) PrimitiveContent p_content := omit) := {
			responseStatusCode := p_statusCode,
			requestIdentifier := p_requestId,
			primitiveContent := p_content,
			to_ := omit,
			from_ := omit,
			originatingTimestamp := omit,
			resultExpirationTimestamp := omit,
			eventCategory := omit,
			contentStatus := omit,
			contentOffset := omit,
			assignedTokenIdentifiers := omit,
			tokenRequestInformation := omit
		};
		
		/**
		 * @desc  Base template for sending ResponsePrimitive
		 * @param p_statusCode	Status code
		 * @param p_requestId	Request ID of the corresponding request
		 */
		template (value) ResponsePrimitive m_responsePrimitive_content(in ResponseStatusCode p_statusCode, in RequestID p_requestId, in template (value) PrimitiveContent p_content) modifies m_responsePrimitive := {
			primitiveContent := p_content			
		}
		
		template ResponsePrimitive mw_responsePrimitive(ResponseStatusCode p_statusCode) := {
			responseStatusCode := p_statusCode,
			requestIdentifier := ?,
			primitiveContent := *,
			to_ := *,
			from_ := *,
			originatingTimestamp := *,
			resultExpirationTimestamp := *,
			eventCategory := *,
			contentStatus := *,
			contentOffset := *,
			assignedTokenIdentifiers := *,
			tokenRequestInformation := *
    	};
    	
		template ResponsePrimitive mw_responsePrimitiveInverse(ResponseStatusCode p_statusCode) := {
			responseStatusCode := complement(p_statusCode),
			requestIdentifier := ?,
			primitiveContent := *,
			to_ := *,
			from_ := *,
			originatingTimestamp := *,
			resultExpirationTimestamp := *,
			eventCategory := *,
			contentStatus := *,
			contentOffset := *,
			assignedTokenIdentifiers := *,
			tokenRequestInformation := *
		};
    	
    	template ResponsePrimitive mw_responsePrimitiveOK(in template PrimitiveContent p_content := *) := {
			responseStatusCode := (int2000, int2001, int2002, int2004),
			requestIdentifier := ?,
			primitiveContent := p_content,
			to_ := *,
			from_ := *,
			originatingTimestamp := *,
			resultExpirationTimestamp := *,
			eventCategory := *,
			contentStatus := *,
			contentOffset := *,
			assignedTokenIdentifiers := *,
			tokenRequestInformation := *
    	};
        		 
    	template ResponsePrimitive mw_responsePrimitiveKO := {
 			responseStatusCode := complement(int2000, int2001, int2002, int2004),
			requestIdentifier := ?,
			primitiveContent := *,
			to_ := *,
			from_ := *,
			originatingTimestamp := *,
			resultExpirationTimestamp := *,
			eventCategory := *,
			contentStatus := *,
			contentOffset := *,
			assignedTokenIdentifiers := *,
			tokenRequestInformation := *
    	};
    	
		template ResponsePrimitive m_responseNotification(ResponseStatusCode p_statusCode, in template(omit) PrimitiveContent p_notification := omit) := {
			responseStatusCode := p_statusCode,
			requestIdentifier := testcasename() & "-m_responseNotification" & f_rnd(1, 1000000),
			primitiveContent := p_notification,
			to_ := omit,
			from_ := omit,
			originatingTimestamp := omit,
			resultExpirationTimestamp := omit,
			eventCategory := omit,
			contentStatus := omit,
			contentOffset := omit,
			assignedTokenIdentifiers := omit,
			tokenRequestInformation := omit
		};
    	
	}//end group ResponsePrimitives	
	
	
}  // end of module
