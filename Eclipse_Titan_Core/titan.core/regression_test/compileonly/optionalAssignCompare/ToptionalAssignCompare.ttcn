/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Raduly, Csaba
 *   Szabo, Janos Zoltan â€“ initial implementation
 *
 ******************************************************************************/
module ToptionalAssignCompare {

type record R { integer f1 optional }
type record RC { charstring f1 optional }
type record RU { universal charstring f1 optional }

const R cr0 := { omit }
const R cr1 := { 17 }

const RC crc0 := { omit }
const RC crc1 := { "Hello" }

const RU cru0 := { omit }
const RU cru1 := { char(0,0,78,202) & char(0,0,101,229) & char(0,0,48,111) }

control {
  var integer i := 1;
  var charstring c := "A";
  var universal charstring u := char(1,2,3,4);
  var R r1, r2;
  var RC rc;
  var RU ru;

  // basic test of assignment operators
  r1.f1 := omit;
  r2.f1 := r1.f1;
  r1.f1 := 0;
  r2.f1 := r1.f1;
  r1.f1 := i;
  r2.f1 := r1.f1;

  // from constant's field
  r2.f1 := cr0.f1;
  r2.f1 := r2.f1; // self-assign
  r2.f1 := cr1.f1;

  rc.f1 := crc0.f1;
  rc.f1 := rc.f1; // self-assign
  rc.f1 := crc1.f1;

  ru.f1 := cru0.f1
  ru.f1 := ru.f1; // self-assign
  ru.f1 := cru1.f1

  // assignment between charstring and universal charstring
  rc.f1 := c[0];
  ru.f1 := c;
  ru.f1 := rc.f1;
  ru.f1 := c[0];
  ru.f1 := u[0];

  // basic test of comparison operators
  if (r1.f1 == omit) { }
  if (r1.f1 != omit) { }
  if (omit == r1.f1) { }
  if (omit != r1.f1) { }
  if (0 == r1.f1) { }
  if (0 != r1.f1) { }
  if (r1.f1 == 0) { }
  if (r1.f1 != 0) { }
  if (i == r1.f1) { }
  if (i != r1.f1) { }
  if (r1.f1 == i) { }
  if (r1.f1 != i) { }
  if (r1.f1 == r2.f1) { }
  if (r1.f1 != r2.f1) { }

  // comparison between charstring and universal charstring
  if (rc.f1 == c[0]) { }
  if (rc.f1 != c[0]) { }
  if (c[0] == rc.f1) { }
  if (c[0] != rc.f1) { }
  if (rc.f1 == u) { }
  if (rc.f1 != u) { }
  if (u == rc.f1) { }
  if (u != rc.f1) { }
  if (rc.f1 == u[0]) { }
  if (rc.f1 != u[0]) { }
  if (u[0] == rc.f1) { }
  if (u[0] != rc.f1) { }

  if (ru.f1 == c) { }
  if (ru.f1 != c) { }
  if (c == ru.f1) { }
  if (c != ru.f1) { }
  if (ru.f1 == c[0]) { }
  if (ru.f1 != c[0]) { }
  if (c[0] == ru.f1) { }
  if (c[0] != ru.f1) { }
  if (ru.f1 == u[0]) { }
  if (ru.f1 != u[0]) { }
  if (u[0] == ru.f1) { }
  if (u[0] != ru.f1) { }

  if (rc.f1 == ru.f1) { }
  if (rc.f1 != ru.f1) { }
  if (ru.f1 == rc.f1) { }
  if (ru.f1 != rc.f1) { }
}

}
