/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Lovassy, Arpad
 *   Raduly, Csaba
 *
 ******************************************************************************/

module NAS_EPS_Test
{

import from NAS_EPS_v970 all;
import from General_Types all;

type component NAS_EPS_Test_CT { }

const PDU_NAS_EPS c1_PNA := {
  protocolDiscriminator := '0111'B,
  ePS_messages := {
    ePS_MobilityManagement := {
      pDU_NAS_EPS_Uplink_Generic_NAS_Transport := {
        securityHeaderType := '0000'B,
        messageType := '01101001'B,
        generic_MessageContainerType := '11111111'B
      }
    }
  }
};

const EPS_MobilityManagement c2_NAS_EPS_Test := {
  pDU_NAS_EPS_Uplink_Generic_NAS_Transport := {
    securityHeaderType := '1010'B,
    messageType := '10101010'B,
    generic_MessageContainerType := '00000000'B
  }
};

testcase tc_NAS_EPS_Uplink_Generic_NAS_Transport() runs on NAS_EPS_Test_CT
{
  var octetstring v_Encoded_msg;
  v_Encoded_msg := enc_PDU_NAS_EPS( c1_PNA );
  log("ENCODE: ",v_Encoded_msg);

  var PDU_NAS_EPS v_EPSM_msg;
  v_EPSM_msg := dec_PDU_NAS_EPS( v_Encoded_msg );
  log("DECODE: ",v_EPSM_msg);

  if ( c1_PNA == v_EPSM_msg ) {setverdict(pass);}
  else {setverdict(fail);}

}

control
{
  execute( tc_NAS_EPS_Uplink_Generic_NAS_Transport() );
}

}  // end of module
