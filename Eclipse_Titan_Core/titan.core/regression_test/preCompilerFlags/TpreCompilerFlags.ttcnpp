/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Dimitrov, Peter
 *   Szabados, Kristof
 *
 ******************************************************************************/
#include "test_macro.inc"
module TpreCompilerFlags {

  type port TEST_PT message
  {
    inout charstring;
    } with { extension "internal" }

  type component MTC_CT
  {
    port TEST_PT TP;
  };

  function f_test() runs on MTC_CT
  {
#define DEBUG
#include "test_include.inc"
#ifdef DEBUG
    log("DEBUG is ON.");
#else
    log("DEBUG is OFF.");
#endif
#undef DEBUG
#include "test_include.inc"
#ifdef DEBUG
    log("DEBUG is ON.");
#else
    log("DEBUG is OFF.");
#endif
    setverdict(pass);
  }

  function f_pi() runs on MTC_CT
  {
#define _ 1.0
    log("PI=",4.0* -(
                  -_-_-_-_
             -_-_-_-_-_-_-_-_-_
          -_-_-_-_-_-_-_-_-_-_-_-_
        -_-_-_-_-_-_-_-_-_-_-_-_-_-_
       -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
       -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
      -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
      -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
      -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
      -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
       -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
       -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
        -_-_-_-_-_-_-_-_-_-_-_-_-_-_
          -_-_-_-_-_-_-_-_-_-_-_-_
              -_-_-_-_-_-_-_-_
                  -_-_-_-_
   )/ (-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_)
    / (-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_));
    setverdict(pass);
  }
  function f_misc() runs on MTC_CT
  {
 #define MLC aaa bbb \
 ccc ddd /* this is a multi
 line comment */ \
 eee
 #define ADD(a,b) a+b
 #define FIVE 5
 #define TEN 10
     log(ADD(FIVE,TEN));
    setverdict(pass);
  }
  function f_sender() runs on MTC_CT
  {
    SEND
  }
  function f_receiver() runs on MTC_CT
  {
    var charstring vl_string;
    timer Tl_t := 1.0;
    Tl_t.start;
    alt {
      RECEIVE
      TIMEOUT
    }
  }
  testcase tc_test() runs on MTC_CT
  {
    f_test();
    f_pi();
    f_misc();
  }
  testcase tc_messaging() runs on MTC_CT
  {
    connect(mtc:TP, mtc:TP);
    f_sender();
    f_receiver();
  }

  control {
    execute(tc_test());
    execute(tc_messaging());
  }
}
