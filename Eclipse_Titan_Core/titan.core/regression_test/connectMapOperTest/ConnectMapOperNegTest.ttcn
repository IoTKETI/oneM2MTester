/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Szabo, Bence Janos
 *
 ******************************************************************************/
module ConnectMapOperNegTest {
	
    type port loopbackPort message { 
      inout integer
    } with {extension "internal"}

    type component GeneralComp {                
          port loopbackPort p1;
          port loopbackPort p2;
    }   

    type component System {             
          port loopbackPort p1;
          port loopbackPort p2;
         
    }   

    testcase tc_neg_connect_after_map() runs on GeneralComp system System {
        map(self:p1, system:p1);
        @try {
          connect(self:p1, self:p2);
          setverdict(fail, "Connect operation succeeded. Expected error.");
        }
        @catch (msg) {
          if (match(msg, "Dynamic test case error: Connect operation cannot be performed on a mapped port (p1).")) {
            setverdict(pass);
          }
          else {
            setverdict(fail, "Incorrect error message received (receive test): ", msg);
          }
        }
        setverdict(pass);    
    }

    testcase tc_neg_connect_after_map2() runs on GeneralComp system System {
        var GeneralComp v_comp := GeneralComp.create;
        map(self:p1, system:p1);
        @try {
          connect(self:p1, v_comp:p2);
          setverdict(fail, "Connect operation succeeded. Expected error.");
        }
        @catch (msg) {
          if (match(msg, "Dynamic test case error: Connect operation cannot be performed on a mapped port (p1).")) {
            setverdict(pass);
          }
          else {
            setverdict(fail, "Incorrect error message received (receive test): ", msg);
          }
        }
        setverdict(pass);    
    }

    testcase tc_neg_map_after_connect() runs on GeneralComp system System {
        var GeneralComp v_comp := GeneralComp.create;
        connect(self:p1, v_comp:p2);
        @try {
          map(self:p1, system:p1);
          setverdict(fail, "Connect operation succeeded. Expected error.");
        }
        @catch (msg) {
          if (match(msg, "Dynamic test case error: Map operation is not allowed on a connected port (p1).")) {
            setverdict(pass);
          }
          else {
            setverdict(fail, "Incorrect error message received (receive test): ", msg);
          }
        }
        setverdict(pass);    
    }

    control{
        execute(tc_neg_connect_after_map());
        execute(tc_neg_connect_after_map2());

        execute(tc_neg_map_after_connect());
    }
}