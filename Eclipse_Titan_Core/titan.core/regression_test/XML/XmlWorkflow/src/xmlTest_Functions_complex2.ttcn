/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Raduly, Csaba
 *   Szabados, Kristof
 *
 ******************************************************************************/
module xmlTest_Functions_complex2
{

import from www_XmlTest_org_complex2 all;

external function f_enc_InternationalPrice2(in InternationalPrice2 pdu, out octetstring stream)
with { extension "prototype(fast) encode(XER:XER_EXTENDED)" }
//0: OK
//1: NOK

external function f_dec_InternationalPrice2(in octetstring stream, out InternationalPrice2 pdu) return integer
with { extension "prototype(backtrack) decode(XER:XER_EXTENDED)" }

external function f_enc_InternationalPrice3(in InternationalPrice3 pdu, out octetstring stream)
with { extension "prototype(fast) encode(XER:XER_EXTENDED)" }
//0: OK
//1: NOK

external function f_dec_InternationalPrice3(in octetstring stream, out InternationalPrice3 pdu) return integer
with { extension "prototype(backtrack) decode(XER:XER_EXTENDED)" }

external function f_enc_InternationalPrice4(in InternationalPrice4 pdu, out octetstring stream)
with { extension "prototype(fast) encode(XER:XER_EXTENDED)" }
//0: OK
//1: NOK

external function f_dec_InternationalPrice4(in octetstring stream, out InternationalPrice4 pdu) return integer
with { extension "prototype(backtrack) decode(XER:XER_EXTENDED)" }

//Encoding decoding test:
function f_encDecTest_InternationalPrice2() {
  var InternationalPrice2 vl_pdu:= {
    currency:="US",
    value_:=54321.9
  },vl_decodedPdu;
  var octetstring vl_expectedEncodedPdu:=char2oct("<InternationalPrice2 currency='US' value='54321.900000'/>\n\n");

  var octetstring vl_stream:=''O;

  f_enc_InternationalPrice2(vl_pdu,vl_stream);
  if( not match(vl_stream,vl_expectedEncodedPdu)) {
    log("Expected encoded value: ",vl_expectedEncodedPdu);
    log("Actual encoded value:   ", vl_stream);
    setverdict(fail);
  }

  //Check value decoded from the encoded vs original value:
  //log("Decoding comes");
  if(f_dec_InternationalPrice2(vl_stream, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }

  //Check value decoded from the expected value vs original value:
  if( f_dec_InternationalPrice2(vl_expectedEncodedPdu, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded from the expected value");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }
}

function f_encDecTest_InternationalPrice3() {
  var InternationalPrice3 vl_pdu:= {
    currency:="US",
    value_:=54321.9
  },vl_decodedPdu;
  var octetstring vl_expectedEncodedPdu:=char2oct("<ns42:internationalPrice3 xmlns:ns42='www.XmlTest.org/complex2' currency='US' value='54321.900000'/>\n\n");
  var octetstring vl_stream:=''O;

  f_enc_InternationalPrice3(vl_pdu,vl_stream);
  if( not match(vl_stream,vl_expectedEncodedPdu)) {
    log("Expected encoded value: ",vl_expectedEncodedPdu);
    log("Actual encoded value:   ", vl_stream);
    setverdict(fail);
  }

  //Check value decoded from the encoded vs original value:
  //log("Decoding comes");
  
  if(f_dec_InternationalPrice3(vl_stream, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }

  //Check value decoded from the expected value vs original value:
  if( f_dec_InternationalPrice3(vl_expectedEncodedPdu, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded from the expected value");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }
}


function f_encDecTest_InternationalPrice4() {
  var InternationalPrice4 vl_pdu:= {
    currency:="US",
    value_:=54321.9
  },vl_decodedPdu;
  var octetstring vl_expectedEncodedPdu:=char2oct("<ns42:internationalPrice4 xmlns:ns42='www.XmlTest.org/complex2' currency='US' value='54321.900000'/>\n\n");
  var octetstring vl_stream:=''O;

  f_enc_InternationalPrice4(vl_pdu,vl_stream);
  if( not match(vl_stream,vl_expectedEncodedPdu)) {
    log("Expected encoded value: ",vl_expectedEncodedPdu);
    log("Actual encoded value:   ", vl_stream);
    setverdict(fail);
  }

  //Check value decoded from the encoded vs original value:
  //log("Decoding comes");
  
  if(f_dec_InternationalPrice4(vl_stream, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }

  //Check value decoded from the expected value vs original value:
  if( f_dec_InternationalPrice4(vl_expectedEncodedPdu, vl_decodedPdu)==0) {
    //log("The decoded pdu: ", vl_decodedPdu);
    if(match(vl_pdu,vl_decodedPdu)) {
      setverdict(pass);
    } else {
      log("Pdu could not decoded from the expected value");
      log(match(vl_pdu,vl_decodedPdu));
    }
  }
}
}//module
