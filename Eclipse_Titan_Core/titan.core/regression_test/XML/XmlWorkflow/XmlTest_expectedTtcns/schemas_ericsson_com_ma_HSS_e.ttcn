/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Lovassy, Arpad
*   Raduly, Csaba
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          schemas_ericsson_com_ma_HSS.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//
//	Generated from file(s):
//
//	- avg.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "http://schemas.ericsson.com/ma/HSS/" */
//
//	- eps.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "http://schemas.ericsson.com/ma/HSS/" */
//
//	- hssla_types.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://schemas.ericsson.com/ma/HSS/" */
//
////////////////////////////////////////////////////////////////////////////////


module schemas_ericsson_com_ma_HSS {


import from XSD all;


import from schemas_ericsson_com_cai3g1_2_e all;


/* CreateAVGMultiSC
		MOId: imsi or impi
		MOType: AVG@http://schemas.ericsson.com/ma/HSS/ */


type record CreateAVGMultiSC
{
	ImpiType impi optional,
	ImsiType imsi optional,
	union {
		ImsiType imsi,
		ImpiType impi
	} choice,
	AvgEncryptedKType avgEncryptedK,
	AvgA4KeyIndType avgA4KeyInd,
	AvgFSetIndType avgFSetInd,
	AvgAmfType avgAmf optional
}
with {
  variant "element";
  variant (impi) "attribute";
  variant (imsi) "attribute";
  variant (choice) "untagged";
};


/* DeleteAVGMultiSC
		MOId: imsi or impi
		MOType: AVG@http://schemas.ericsson.com/ma/HSS/ */


/* SetAVGMultiSC
		MOId: imsi
		MOType: AVG@http://schemas.ericsson.com/ma/HSS/ */


type record SetAVGMultiSC
{
	ImpiType impi optional,
	ImsiType imsi optional,
	AvgEncryptedKType avgEncryptedK optional,
	AvgA4KeyIndType avgA4KeyInd optional,
	AvgAmfType avgAmf optional
}
with {
  variant "element";
  variant (impi) "attribute";
  variant (imsi) "attribute";
};


/* GetAVGMultiSC
		MOId: imsi or impi
		MOType: AVG@http://schemas.ericsson.com/ma/HSS/ */


/* GetResponseAVGMultiSC */


type record GetResponseAVGMultiSC
{
	union {
		ImsiType imsi,
		ImpiType impi
	} choice,
	AvgEncryptedKType avgEncryptedK,
	AvgA4KeyIndType avgA4KeyInd,
	AvgFSetIndType avgFSetInd,
	AvgAmfType avgAmf
}
with {
  variant "element";
  variant (choice) "untagged";
};


/* CreateEPSMultiSC
		MOId: imsi
		MOType: EPSMultiSC@http://schemas.ericsson.com/ma/HSS/ */


type record CreateEPSMultiSC
{
	ImsiType imsi,
	ImsiType imsi_1,
	MsisdnType msisdn optional,
	AssociationIdType associationId optional,
	EpsProfileIdType epsProfileId,
	EpsOdbType epsOdb optional,
	EpsRoamingAllowedType epsRoamingAllowed optional
}
with {
  variant "element";
  variant (imsi) "attribute";
  variant (imsi_1) "name as 'imsi'";
};


/* DeleteEPSMultiSC
		MOId: imsi
		MOType:  EPSMultiSC@http://schemas.ericsson.com/ma/HSS/ */


/* SetEPSMultiSC
		MOId: imsi
		MOType:  EPSMultiSC@http://schemas.ericsson.com/ma/HSS/ */


type record SetEPSMultiSC
{
	ImsiType imsi,
	MsisdnType msisdn optional,
	EpsProfileIdType epsProfileId optional,
	EpsOdbType epsOdb optional,
	EpsRoamingAllowedType epsRoamingAllowed optional,
	EpsLocationStateType epsLocationState optional
}
with {
  variant "element";
  variant (imsi) "attribute";
};


/* GetEPSMultiSC
		MOId: imsi
		MOType:  EPSMultiSC@http://schemas.ericsson.com/ma/HSS/ */


/* GetResponseEPSMultiSC
		MOId: imsi
		MOType:  EPSMultiSC@http://schemas.ericsson.com/ma/HSS/ */


type record GetResponseEPSMultiSC
{
	ImsiType imsi,
	MsisdnType msisdn optional,
	AssociationIdType associationId optional,
	EpsProfileIdType epsProfileId,
	EpsOdbType epsOdb,
	EpsRoamingAllowedType epsRoamingAllowed,
	MmeAddressType mmeAddress optional,
	EpsLocationStateType epsLocationState
}
with {
  variant "element";
};


/* Common types */


type XSD.String MsisdnType (pattern "[0-9]*") length(5 .. 15)
with {
  variant "name as uncapitalized";
};


type XSD.String ImsiType (pattern "[0-9]*") length(6 .. 15)
with {
  variant "name as uncapitalized";
};


type XSD.String ImpiType length(5 .. 256)
with {
  variant "name as uncapitalized";
};


type XSD.String AssociationIdType
with {
  variant "name as uncapitalized";
};


/* EPS types */


type XSD.String EpsProfileIdType
with {
  variant "name as uncapitalized";
};


type enumerated EpsOdbType
{
	nONE,
	oDB_ALL,
	oDB_HPLMN_APN,
	oDB_VPLMN_APN
}
with {
  variant "text 'nONE' as capitalized";
  variant "text 'oDB_ALL' as 'ODB-ALL'";
  variant "text 'oDB_HPLMN_APN' as 'ODB-HPLMN-APN'";
  variant "text 'oDB_VPLMN_APN' as 'ODB-VPLMN-APN'";
  variant "name as uncapitalized";
};


type XSD.Boolean EpsRoamingAllowedType
with {
  variant "name as uncapitalized";
};


type enumerated EpsLocationStateType
{
	lOCATED,
	pURGED,
	uNKNOWN
}
with {
  variant "text 'lOCATED' as capitalized";
  variant "text 'pURGED' as capitalized";
  variant "text 'uNKNOWN' as capitalized";
  variant "name as uncapitalized";
};


type XSD.String MmeAddressType
with {
  variant "name as uncapitalized";
};


/* AVG types */


type XSD.String AvgEncryptedKType (pattern "[0-9A-F]#32")
with {
  variant "name as uncapitalized";
};


type XSD.Integer AvgA4KeyIndType (1 .. 512)
with {
  variant "name as uncapitalized";
};


type XSD.Integer AvgFSetIndType (0 .. 15)
with {
  variant "name as uncapitalized";
};


type XSD.String AvgAmfType (pattern "[0-9A-F]#4")
with {
  variant "name as uncapitalized";
};


}
with {
  encode "XML";
  variant "namespace as 'http://schemas.ericsson.com/ma/HSS/'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
