/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Baranyi, Botond
*   Lovassy, Arpad
*   Raduly, Csaba
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_XmlTest_org_complex_include.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Thu Sep  5 17:35:06 2013
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- XmlTest_complex_include1.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "www.XmlTest.org/complex_include" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_XmlTest_org_complex_include2 {


import from XSD all;


/* This documentum tests based on
      XML Schema Part 0: Primer Second Edition
      5 Advanced Concepts III. The Quantity Report
      5.4 Importing Types
      XML Schema Part 1: Structures Second Edition
      ...
      ETSI ES 201 873-9 V4.1.2
      This is the included schema with proper namespace */


type record RegionsType
{
	record length(1 .. infinity) of record {
		XSD.PositiveInteger code optional,
		record length(1 .. infinity) of record {
			XSD.String number optional,
			XSD.PositiveInteger quantity optional
		} part_list
	} zip_list
}
with {
  variant (zip_list) "untagged";
  variant (zip_list[-]) "name as 'zip'";
  variant (zip_list[-].code) "attribute";
  variant (zip_list[-].part_list) "untagged";
  variant (zip_list[-].part_list[-]) "name as 'part'";
  variant (zip_list[-].part_list[-].number) "attribute";
  variant (zip_list[-].part_list[-].quantity) "attribute";
};


type record PartsType
{
	record length(1 .. infinity) of record {
		XSD.String number optional,
		XSD.String base
	} part_list
}
with {
  variant (part_list) "untagged";
  variant (part_list[-]) "name as 'part'";
  variant (part_list[-].number) "attribute";
  variant (part_list[-].base) "untagged";
};


}
with {
  encode "XML";
  variant "namespace as 'www.XmlTest.org/complex_include' prefix 'r'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
