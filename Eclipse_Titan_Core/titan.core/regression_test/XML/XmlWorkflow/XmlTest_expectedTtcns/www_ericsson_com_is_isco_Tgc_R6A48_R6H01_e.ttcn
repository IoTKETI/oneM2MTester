/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Lovassy, Arpad
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_ericsson_com_is_isco_Tgc_R6A48_R6H01.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Thu Jan 28 15:35:13 2010
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//
//	Generated from file(s):
//
//	- Tgc.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://www.ericsson.com/is/isco/Tgc/R6A48/R6H01" */
//
////////////////////////////////////////////////////////////////////////////////


module www_ericsson_com_is_isco_Tgc_R6A48_R6H01 {


import from XSD all;


import from tail_f_com_ns_confd_1_0 all;


import from www_ericsson_com_is_isco_IsTypes_R4L06_R4AF11 all;


/* This MIM describes the BladePair class. */


type XSD.UnsignedInt LinkGuardTimerType_140 (0 .. 86400)
with {
  variant "name as 'linkGuardTimerType-140'";
};


type XSD.Token NameType_71 length(1 .. 100)
with {
  variant "name as 'nameType-71'";
};


type XSD.Token GrGlobalRegistrationCapabilityType_82 (pattern "no|handoff|all")
with {
  variant "name as 'grGlobalRegistrationCapabilityType-82'";
};


type XSD.UnsignedShort T2Type_42 (1 .. 10)
with {
  variant "name as 't2Type-42'";
};


/* Integer (0 .. 4294967295) */
type XSD.UnsignedInt MlgCounter32 (0 .. 4294967295);


type XSD.Token NameType_73 length(1 .. 100)
with {
  variant "name as 'nameType-73'";
};


type XSD.Token CapCallFinishedType_134 (pattern "no|yes")
with {
  variant "name as 'capCallFinishedType-134'";
};


type XSD.UnsignedShort IncrementIType_34 (0 .. 5000)
with {
  variant "name as 'incrementIType-34'";
};


type XSD.UnsignedShort RtoMinType_4 (40 .. 5000)
with {
  variant "name as 'rtoMinType-4'";
};


type XSD.UnsignedShort CrlAlarmWindowCountType_95 (1 .. 65535)
with {
  variant "name as 'crlAlarmWindowCountType-95'";
};


type XSD.UnsignedShort Pm3Type_55 (0 .. 100)
with {
  variant "name as 'pm3Type-55'";
};


type XSD.UnsignedShort IdType_66 (1 .. 28)
with {
  variant "name as 'idType-66'";
};


type XSD.UnsignedShort Pm12Type_46 (0 .. 100)
with {
  variant "name as 'pm12Type-46'";
};


type XSD.UnsignedInt PollCountType_76 (0 .. 4294967295)
with {
  variant "name as 'pollCountType-76'";
};


type XSD.UnsignedShort ConnPointRoutingInfoType_117 (0 .. 65535)
with {
  variant "name as 'connPointRoutingInfoType-117'";
};


type XSD.Token NameType_78 length(1 .. 100)
with {
  variant "name as 'nameType-78'";
};


type XSD.UnsignedShort IdType_68 (1 .. 28)
with {
  variant "name as 'idType-68'";
};


type XSD.Token DtmfSendingPhysType_129 (pattern "no|yes|audit")
with {
  variant "name as 'dtmfSendingPhysType-129'";
};


type XSD.Token H248TonePackageType_70 (pattern "eriEcgDt|eriEcgRt|eriEcgBt|eriEcgCt|eriEcgSit|eriEcgWt|eriEcgPt|eriEcgCw|eriEcgCr|eriEcgIt|eriEcgTq|eriEcgPg|eriEcgBo|eriEcgSd|eriEcgTl|eriEcgLl|eriEcgSdt|eriEcgAt|eriEcgRf|eriEcgStt|eriEcgOh|eriEcgSr|eriEcgDd|eriEcgMw|eriEcgRc|eriEcgNu|eriEcgTStt|bcgBdt|bcgBrt|bcgBbt|bcgBct|bcgBsit|bcgBwt|bcgBpt|bcgBcw|bcgBcr|cgDt|cgRt|cgBt|cgCt|cgSit|cgWt|cgPrt|cgCw|cgCr|intInt|intIntque|xcgCmft|intBv|srvtnRdt|conftnTimelim|xcgRoh|xcgSpec|srvtnConf|xcgNack|biztnErwt|srvtnHt|xsrvtnSrdt|biztnDdt|srvtnMwt|xcgVac|briztnErwt|bcgBpy|xsrvtnXferdt|xsrvtnCft|xsrvtnCcst")
with {
  variant "name as 'h248TonePackageType-70'";
};


type XSD.UnsignedShort MaxAdjustmentType_40 (0 .. 100)
with {
  variant "name as 'maxAdjustmentType-40'";
};


type XSD.UnsignedShort T1Type_41 (1 .. 10)
with {
  variant "name as 't1Type-41'";
};


type XSD.Token DtmfSendingEphType_132 (pattern "no|yes")
with {
  variant "name as 'dtmfSendingEphType-132'";
};


type XSD.Token EncodingType_103 (pattern "prettytext|compacttext")
with {
  variant "name as 'encodingType-103'";
};


type XSD.UnsignedShort FactorFType_33 (1 .. 5)
with {
  variant "name as 'factorFType-33'";
};


type XSD.UnsignedShort MgExecTimeType_23 (1 .. 10000)
with {
  variant "name as 'mgExecTimeType-23'";
};


type XSD.UnsignedShort SubnetMaskLengthType_114 (0 .. 32)
with {
  variant "name as 'subnetMaskLengthType-114'";
};


type XSD.UnsignedShort Pm4Type_54 (0 .. 100)
with {
  variant "name as 'pm4Type-54'";
};


type XSD.UnsignedShort MgcExecTimeType_24 (1 .. 10000)
with {
  variant "name as 'mgcExecTimeType-24'";
};


type XSD.Token GrRedundancySchemeType_86 (pattern "none|matedtes|aasgr")
with {
  variant "name as 'grRedundancySchemeType-86'";
};


type XSD.Token EncodingType_107 (pattern "prettytext|compacttext")
with {
  variant "name as 'encodingType-107'";
};


type XSD.UnsignedShort Pm11Type_47 (0 .. 100)
with {
  variant "name as 'pm11Type-47'";
};


type XSD.Token MapType_17 length(0 .. 1000)
with {
  variant "name as 'mapType-17'";
};


type XSD.Token TypeType_88 (pattern "mgic|agw|tgw|mgw|bgw|mgic_ip_ip|any")
with {
  variant "name as 'typeType-88'";
};


type record of ObjectRef Restricted_confd_objectRef_148
with {
  variant "name as 'Restricted-confd_objectRef-148'";
  variant "list";
};


type XSD.Token H248MidFormatType_89 (pattern "deviceName|ip4Address|ip4AddressAndPort|domainName|domainNameAndPort")
with {
  variant "name as 'h248MidFormatType-89'";
};


type XSD.UnsignedShort NrCapacityWeightType_102 (1 .. 65535)
with {
  variant "name as 'nrCapacityWeightType-102'";
};


/* Performance measurement value.
      A fluctuating positive integer (0 .. 4294967295). */
type XSD.UnsignedInt Gauge32_1 (0 .. 4294967295)
with {
  variant "name as 'Gauge32'";
};


type XSD.UnsignedShort Pm5Type_53 (0 .. 100)
with {
  variant "name as 'pm5Type-53'";
};


type XSD.Token DtmfReceivingEphType_133 (pattern "no|yes")
with {
  variant "name as 'dtmfReceivingEphType-133'";
};


type XSD.UnsignedShort GrAXEPeriodicDisturbanceType_84 (1 .. 3600)
with {
  variant "name as 'grAXEPeriodicDisturbanceType-84'";
};


type XSD.Token InterfaceOrientationType_115 (pattern "internal|external")
with {
  variant "name as 'interfaceOrientationType-115'";
};


/* Enum which can be true or false. */
type XSD.Token MlgTruthValue (pattern "true|false");


type XSD.UnsignedShort Pm10Type_48 (0 .. 100)
with {
  variant "name as 'pm10Type-48'";
};


type XSD.UnsignedShort Pm6Type_52 (0 .. 100)
with {
  variant "name as 'pm6Type-52'";
};


type XSD.UnsignedShort ValCookieLifeType_12 (120 .. 60000)
with {
  variant "name as 'valCookieLifeType-12'";
};


type XSD.Token TypeType_64 (pattern "G?711 a-law|G?711 u-law|G?723|G?726|G?729|Clear channel|Silence suppression|DTMF relay")
with {
  variant "name as 'typeType-64'";
};


type XSD.Token PollMessageType_75 (pattern "modify-root|empty-audit-root")
with {
  variant "name as 'pollMessageType-75'";
};


type XSD.Token InterfaceOpStateType_116 (pattern "on|off|tempunavail")
with {
  variant "name as 'interfaceOpStateType-116'";
};


type XSD.Token NameType_69 (pattern "dial|ringing|busy|congestion|special-information|warning|payphone-recognition|call-waiting|caller-waiting|intrusion|trunk-queue|progress|operator-busy|second-dial|time-limit|line-lockout|special-dial|acceptance|refusal|subscriber-trunk-dialing|on-hold|special-recall-dial|distinctive-dial|message-waiting|ring-control|number-unobtainable|bothway-std")
with {
  variant "name as 'nameType-69'";
};


type XSD.UnsignedShort PotsTermWeightType_61 (0 .. 100)
with {
  variant "name as 'potsTermWeightType-61'";
};


type XSD.UnsignedShort Pm7Type_51 (0 .. 100)
with {
  variant "name as 'pm7Type-51'";
};


type XSD.UnsignedShort RtoInitialType_3 (80 .. 49000)
with {
  variant "name as 'rtoInitialType-3'";
};


type XSD.UnsignedShort GrAXERestartNumType_85 (1 .. 5)
with {
  variant "name as 'grAXERestartNumType-85'";
};


type XSD.UnsignedShort AMeasIFixedType_126 (0 .. 100)
with {
  variant "name as 'aMeasIFixedType-126'";
};


type XSD.Token MassCallReleaseRegulationStateType_96 (pattern "on|off")
with {
  variant "name as 'massCallReleaseRegulationStateType-96'";
};


type XSD.Token DtmfReceivingPhysType_130 (pattern "no|yes|audit")
with {
  variant "name as 'dtmfReceivingPhysType-130'";
};


type XSD.UnsignedShort Pm8Type_50 (0 .. 100)
with {
  variant "name as 'pm8Type-50'";
};


type XSD.Token ClearChannelType_122 (pattern "5|10|20|40")
with {
  variant "name as 'clearChannelType-122'";
};


type XSD.UnsignedShort IsdnOrigWeightType_62 (0 .. 100)
with {
  variant "name as 'isdnOrigWeightType-62'";
};


type XSD.UnsignedShort MaxAvgOccupancyType_124 (0 .. 100)
with {
  variant "name as 'maxAvgOccupancyType-124'";
};


/* Long integers (for AXE and ML port references). */
type XSD.UnsignedLong MlgUnsigned64 (0 .. 18446744073709551615);


type XSD.UnsignedShort RoMeasIFixedType_125 (0 .. 100)
with {
  variant "name as 'roMeasIFixedType-125'";
};


type XSD.Token OpStateType_67 (pattern "up|down")
with {
  variant "name as 'opStateType-67'";
};


type XSD.Token FskSendingPhysType_128 (pattern "no|yes|audit")
with {
  variant "name as 'fskSendingPhysType-128'";
};


type XSD.Token LongTimerType_20 (pattern "noChange|1|2|3|5|10|20|30|40|50|75|99")
with {
  variant "name as 'longTimerType-20'";
};


type XSD.Token StatRequestType_141 (pattern "on_demand|always")
with {
  variant "name as 'statRequestType-141'";
};


type XSD.UnsignedShort EphAuditLinesType_101 (1 .. 8)
with {
  variant "name as 'ephAuditLinesType-101'";
};


type XSD.Token TypeType_2 (pattern "normal|fast")
with {
  variant "name as 'typeType-2'";
};


type XSD.UnsignedShort GrAXEDeadIntervalType_83 (1 .. 3600)
with {
  variant "name as 'grAXEDeadIntervalType-83'";
};


/* Operational state. */
type XSD.Token MlgOpState (pattern "enabled|disabled");


type XSD.UnsignedShort LatencyType_77 (10 .. 5000)
with {
  variant "name as 'latencyType-77'";
};


type XSD.UnsignedShort LongRequestTimerType_30 (1 .. 10)
with {
  variant "name as 'longRequestTimerType-30'";
};


type XSD.UnsignedShort LocalPortType_104 (0 .. 65535)
with {
  variant "name as 'localPortType-104'";
};


type XSD.UnsignedShort TypeNumType_65 (0 .. 127)
with {
  variant "name as 'typeNumType-65'";
};


type XSD.UnsignedShort RtoAlphaType_6 (1 .. 4)
with {
  variant "name as 'rtoAlphaType-6'";
};


type XSD.Token GranularityType_147 length(1 .. 2)
with {
  variant "name as 'granularityType-147'";
};


type XSD.Token ToneDirEphType_137 (pattern "egress|egress_ingress|no")
with {
  variant "name as 'toneDirEphType-137'";
};


/* String definition according to MIB dataType
      consisting of 0 up to 255 characters. */
type XSD.Token MlgDisplayString length(0 .. 255);


type XSD.UnsignedShort LocalPortType_108 (0 .. 65535)
with {
  variant "name as 'localPortType-108'";
};


type XSD.UnsignedShort InitialBucketFillType_59 (0 .. 300)
with {
  variant "name as 'initialBucketFillType-59'";
};


type XSD.Token PTimeType_120 (pattern "5|10|20|30|40|50|60")
with {
  variant "name as 'pTimeType-120'";
};


type XSD.Token DscpType_110 length(2 .. 4)
with {
  variant "name as 'dscpType-110'";
};


type XSD.Token CallCountingStateType_90 (pattern "on|off")
with {
  variant "name as 'callCountingStateType-90'";
};


type XSD.UnsignedShort GrIndexType_80 (1 .. 1)
with {
  variant "name as 'grIndexType-80'";
};


type XSD.Token FskSendingEphType_131 (pattern "no|yes")
with {
  variant "name as 'fskSendingEphType-131'";
};


type XSD.Token CallRateLimiterStateType_91 (pattern "on|off")
with {
  variant "name as 'callRateLimiterStateType-91'";
};


type XSD.Token IdType_112 length(1 .. 51)
with {
  variant "name as 'idType-112'";
};


type XSD.UnsignedShort CcAlarmThresholdType_92 (1 .. 65535)
with {
  variant "name as 'ccAlarmThresholdType-92'";
};


type XSD.Token BaseTypeType_72 (pattern "etsi-tgw|etsi-agw|eric-mgw|eric-mgw2|etsi-bgf")
with {
  variant "name as 'baseTypeType-72'";
};


type XSD.UnsignedShort RtoMaxType_5 (80 .. 50000)
with {
  variant "name as 'rtoMaxType-5'";
};


/* Used to define unsigned 16 bits values. */
type XSD.UnsignedShort MlgUnsigned16 (0 .. 65535);


type XSD.UnsignedShort AssociationMaxRetransType_8 (1 .. 20)
with {
  variant "name as 'associationMaxRetransType-8'";
};


type XSD.UnsignedShort RequestRetriesType_29 (0 .. 5)
with {
  variant "name as 'requestRetriesType-29'";
};


type XSD.Token TypeType_121 length(1 .. 100)
with {
  variant "name as 'typeType-121'";
};


type XSD.UnsignedShort IdType_123 (1 .. 28)
with {
  variant "name as 'idType-123'";
};


type XSD.Token InterfaceSetType_113 length(0 .. 7)
with {
  variant "name as 'interfaceSetType-113'";
};


type enumerated DummyEmptyType_1
{
	x
}
with {
  variant "text 'x' as ''";
  variant "name as 'DummyEmptyType'";
};


type XSD.Token NameType_127 length(1 .. 100)
with {
  variant "name as 'nameType-127'";
};


type XSD.UnsignedShort OrderType_119 (1 .. 255)
with {
  variant "name as 'orderType-119'";
};


type XSD.UnsignedShort Pm9Type_49 (0 .. 100)
with {
  variant "name as 'pm9Type-49'";
};


type XSD.Token GrResidencyStatusType_100 (pattern "locally-registered|registered-to-peer|pending|unknown")
with {
  variant "name as 'grResidencyStatusType-100'";
};


type XSD.UnsignedShort PotsOrigWeightType_60 (0 .. 100)
with {
  variant "name as 'potsOrigWeightType-60'";
};


type XSD.UnsignedShort GrMatePortType_81 (0 .. 65535)
with {
  variant "name as 'grMatePortType-81'";
};


/* Integer definition according to MIB dataType. */
type XSD.UnsignedInt MlgUnsigned32 (0 .. 4294967295);


type XSD.Token StartTimerType_18 (pattern "noChange|0|1|2|3|5|10|20|30|40|50|75|99")
with {
  variant "name as 'startTimerType-18'";
};


type XSD.Token ShortTimerType_19 (pattern "noChange|1|2|3|5|10|20|30|40|50|75|99")
with {
  variant "name as 'shortTimerType-19'";
};


type XSD.UnsignedShort InterfaceGuardTimerType_111 (1 .. 60)
with {
  variant "name as 'interfaceGuardTimerType-111'";
};


type XSD.Token KeyType_142 (pattern "nodeH24811Params")
with {
  variant "name as 'keyType-142'";
};


type XSD.Token NameType_143 length(1 .. 100)
with {
  variant "name as 'nameType-143'";
};


type XSD.UnsignedShort IsdnTermWeightType_63 (0 .. 100)
with {
  variant "name as 'isdnTermWeightType-63'";
};


type XSD.Token SubnetSegmentType_145 (pattern "h248_subnet_segment_1|h248_subnet_segment_2")
with {
  variant "name as 'subnetSegmentType-145'";
};


type XSD.UnsignedShort KeyType_146 (1 .. 1)
with {
  variant "name as 'keyType-146'";
};


type XSD.Token ToneDirPhysType_136 (pattern "egress|egress_ingress|no")
with {
  variant "name as 'toneDirPhysType-136'";
};


type XSD.UnsignedShort MgcProvRespTimeType_26 (1 .. 10000)
with {
  variant "name as 'mgcProvRespTimeType-26'";
};


type XSD.Token GrAASStatusType_87 (pattern "idle|open|closed")
with {
  variant "name as 'grAASStatusType-87'";
};


type XSD.Token CodecIdType_118 (pattern "G?711|G?723?1-H|G?723?1-L|G?723?1a-H|G?723?1a-L|G?726-32|G?729AB|G?729A")
with {
  variant "name as 'codecIdType-118'";
};


type XSD.Token GateManagementType_139 (pattern "no|yes|audit")
with {
  variant "name as 'gateManagementType-139'";
};


type XSD.UnsignedShort WindowSizeType_79 (1 .. 1000)
with {
  variant "name as 'windowSizeType-79'";
};


type Restricted_confd_objectRef_148 BladesType_1 length(2)
with {
  variant "name as 'bladesType-1'";
};


type XSD.UnsignedShort CcAlarmWindowCountType_93 (1 .. 65535)
with {
  variant "name as 'ccAlarmWindowCountType-93'";
};


type XSD.Token CapLineInfoType_135 (pattern "no|yes")
with {
  variant "name as 'capLineInfoType-135'";
};


type XSD.Token NameType_35 length(1 .. 100)
with {
  variant "name as 'nameType-35'";
};


type XSD.Token NameType_36 length(1 .. 100)
with {
  variant "name as 'nameType-36'";
};


type XSD.UnsignedInt HangtermTimerType_97 (0 .. 2147483647)
with {
  variant "name as 'hangtermTimerType-97'";
};


type XSD.Token NameType_37 length(1 .. 100)
with {
  variant "name as 'nameType-37'";
};


type XSD.Token GrAllocationType_98 (pattern "primary|redundant")
with {
  variant "name as 'grAllocationType-98'";
};


type XSD.Token NameType_39 length(1 .. 100)
with {
  variant "name as 'nameType-39'";
};


type XSD.UnsignedShort LongRequestRetriesType_31 (0 .. 5)
with {
  variant "name as 'longRequestRetriesType-31'";
};


type XSD.Token DurationTimerType_21 (pattern "noChange|1|2|3|5|10|20|30|40|50|75|99")
with {
  variant "name as 'durationTimerType-21'";
};


type XSD.UnsignedShort Pm15Type_43 (0 .. 100)
with {
  variant "name as 'pm15Type-43'";
};


type XSD.UnsignedShort MaskLengthType_144 (1 .. 32)
with {
  variant "name as 'maskLengthType-144'";
};


type XSD.UnsignedShort SctpHeartBeatIntervalType_105 (0 .. 20)
with {
  variant "name as 'sctpHeartBeatIntervalType-105'";
};


/* Administrative state. */
type XSD.Token MlgAdmState (pattern "unlocked|shutting down|locked");


type XSD.UnsignedShort RtoBetaType_7 (1 .. 4)
with {
  variant "name as 'rtoBetaType-7'";
};


type XSD.UnsignedShort Pm0Type_58 (0 .. 100)
with {
  variant "name as 'pm0Type-58'";
};


type XSD.UnsignedShort T95TimerType_38 (10 .. 1000)
with {
  variant "name as 't95TimerType-38'";
};


type XSD.UnsignedShort MtuType_11 (256 .. 9180)
with {
  variant "name as 'mtuType-11'";
};


type XSD.UnsignedShort H248LongTimerType_32 (15000 .. 45000)
with {
  variant "name as 'h248LongTimerType-32'";
};


type XSD.UnsignedShort PollTimerType_74 (10000 .. 60000)
with {
  variant "name as 'pollTimerType-74'";
};


type XSD.UnsignedShort Pm14Type_44 (0 .. 100)
with {
  variant "name as 'pm14Type-44'";
};


type XSD.UnsignedShort GlobalNodeUdpPortType_14 (0 .. 65535)
with {
  variant "name as 'globalNodeUdpPortType-14'";
};


type XSD.UnsignedShort CodeType_15 (0 .. 65535)
with {
  variant "name as 'codeType-15'";
};


type XSD.Token NameType_16 length(1 .. 100)
with {
  variant "name as 'nameType-16'";
};


type XSD.UnsignedShort Pm1Type_57 (0 .. 100)
with {
  variant "name as 'pm1Type-57'";
};


type XSD.UnsignedShort MgOrigPendLimitType_27 (1 .. 10)
with {
  variant "name as 'mgOrigPendLimitType-27'";
};


type XSD.Token DiffServType_138 (pattern "no|yes|audit")
with {
  variant "name as 'diffServType-138'";
};


type XSD.UnsignedShort MgcOrigPendLimitType_28 (1 .. 10)
with {
  variant "name as 'mgcOrigPendLimitType-28'";
};


type XSD.UnsignedShort MaxShutdownRetransType_10 (1 .. 16)
with {
  variant "name as 'maxShutdownRetransType-10'";
};


type XSD.Token NameType_22 length(1 .. 100)
with {
  variant "name as 'nameType-22'";
};


type XSD.UnsignedShort GlobalTrafficThroughputType_13 (0 .. 100)
with {
  variant "name as 'globalTrafficThroughputType-13'";
};


type XSD.UnsignedShort CrlAlarmThresholdType_94 (1 .. 65535)
with {
  variant "name as 'crlAlarmThresholdType-94'";
};


type XSD.UnsignedShort Pm13Type_45 (0 .. 100)
with {
  variant "name as 'pm13Type-45'";
};


type XSD.UnsignedShort MgProvRespTimeType_25 (1 .. 10000)
with {
  variant "name as 'mgProvRespTimeType-25'";
};


type XSD.Token SubnetSegmentType_106 (pattern "iser1|iser2")
with {
  variant "name as 'subnetSegmentType-106'";
};


type XSD.UnsignedShort Pm2Type_56 (0 .. 100)
with {
  variant "name as 'pm2Type-56'";
};


type XSD.Token NameType_109 length(1 .. 100)
with {
  variant "name as 'nameType-109'";
};


type XSD.Token GrRegistrationCapabilityType_99 (pattern "no|all")
with {
  variant "name as 'grRegistrationCapabilityType-99'";
};


type XSD.UnsignedShort MaxInitRetransType_9 (1 .. 16)
with {
  variant "name as 'maxInitRetransType-9'";
};


/* The Management Information Model for the TGC blade system. */
/* A blade in blade system, created from IS hardware management.
      The blades must work in pairs for redundancy, i.e., the number
      of blades in a blade system can be 2, 4, 6, etc. */
/* The subrack and slot position of the blade, e.g., "0-3". */
/* The Control Processor with the control software. */
/* This counter shows the load on the CPU in percent (0-100).
        Family = CP statistics */
/* This counter shows how much memory is used in the control
        processor in megabytes.
        Family = CP statistics */
/* This counter shows how much memory is utilized in the control
        processor in percent (0-100).
        Family = CP statistics */
/* System common parameters and blade pairs. */
/* A pair of blades for 1+1 redundancy. */
/* Identity of the blade pair. E.g. "0-8,0-9" */
/* Sequence of references to Blade object instances. */
/* SCTP global parameters */
/* The initial value that Retransmission Time-out will take.
        Measured in milliseconds. */
/* The minimum value that Retransmission Time-out will take.
        Measured in milliseconds. */
/* The maximum value that Retransmission Time-out will take.
        Measured in milliseconds. */
/* Alpha shift factor. Used to compute the Smoothed Round Trip
        Time (SRTT) for a particular destination address. */
/* Beta shift factor. Used to compute the Round Trip
         Time Variation(RTTV) for a particular destination address. */
/* The maximum number of consecutive retransmissions to a remote peer. */
/* The maximum number of retransmissions allowed for both INIT and
        COOKIE-ECHO chunks. */
/* The maximum number of retransmissions during the shutdown
        of an association. */
/* The maximum number of bytes a user is allowed to pass as
        non-fragmented user data in an SCTP_SEND_req messages. */
/* Valid cookie life in the 4-way start-up handshake procedure.
        Shall be higher than the RTT in the network, but as small as
        possible due to security reasons. This parameter sets up the
        life span of the state cookie sent in the INIT_ACK chunk.
        Measured in milliseconds. */
/* Represents the IP Network that TGC is interfacing.
      Defined in mim file mlg_mim.xml. */
/* Static route for the H.248 signaling traffic towards a gateway.
      Defined in mim file mlg_mim.xml. */
/* A unique name for the H.248 route. */
/* The subnet address of the remote network. */
/* The mask length of the subnet. */
/* Which of the bladesystems subnet segment to use
	as next hop. */
/* Top class for Telephony Softswich Solution Gateway
      Control application under the Tgc model. */
/* The Global Traffic Throughput (GTT) is used to scale up or down
	the traffic limit TRAL of each gateway.
	GTT applies to all gateways controlled by a Call Server for which
	Call Counting is enabled. It is a percentage value with default 100%
	the maximum. For example, changing the GTT value from 100 to 50 would
	have the effect of halving the effective traffic limit for every
	gateway on the call server. Thus, changing the GTT value is a means
	of quickly throttling the traffic throughput of all gateways with
	Call Counting enabled. */
/* Gateway controller identity. Identifier used in
        the H.248 signaling towards the gateway.

        The value of this attribute must start with letter (either case) and
        must contain only alphanumeric characters. */
/* Global node address. The gateways should connect to this address */
/* The port number used for H.248 signalling. */
/* Indicates that the previously queued param set changes
    shall be applied to the existing control links
    Note: The read value is always false. */
/* Indicates that the previously queued param set changes
    shall be applied to the existing control links automatically */
/* AnnouncementSet class.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* A unique name of the announcement set.

        The name must start with letter (either case) and must contain only
        ASCII characters inside of the 33-126 range (inclusive). */
/* Class for storing announcements associated to
      announcement sets.

      If an announcement is removed from the last announcement set, the
      announcement will be removed from the announcement mapping ISM page too
      (e.g. the user adds an announcement mapping via ISM, adds this
      announcement map via netconf to an announcement set, then removes this
      announcement from the set, the announcement mapping will be removed from
      the ISM page too). Because the annoucement code is */
/* globally unique, this
      object can't be modified with the merge operation, it can be only created
      or deleted.

      Defined in mim file mlg_mim.xml. */
/* Announcement code mapped to an announcement name.
        This attribute of the Announcement object is unique in the whole TGC,
        not only in an AnnouncementSet (e.g. you can't have an annoucement with
        code 12 and name "ann1" in an announcement set and an other announcement
        with code 12 and name "ann2" in an other announcement set - when the
        second announcement is created, its name will be "ann1"). */
/* Name of the announcement.

        The name must start with letter (either case) and must contain only
        ASCII characters inside of the 33-126 range (inclusive). */
/* Border Gateway Interface parameter set.
      Defined in mim file mlg_mim.xml. */
/* Textual name of the parameter set. */
/* Remote source address filtering (value for gm/saf H.248 property) */
/* Remote source port filtering (value for gm/spf H.248 property) */
/* RTP specific behaviour (value for gm/rsb H.248 property) */
/* Policing (value for tman/pol H.248 property) */
/* Sustainable data rate in bytes/sec (value for tman/sdr H.248 property) */
/* Differentiated services code point (value for ds/dscp H.248 property).
        Eight bit value, in the form of 0xYW or YW. */
/* Bandwith used by one call (kbits/sec). */
/* Link layer overhead (in bytes). */
/* Interface guard timer (in seconds). */
/* A default point association for the AXE communication,
      one for each TGC bladesystem.
      Defined in mim file mlg_mim.xml. */
/* IP address 1 is allocated on the DPA on the first IP logical
	network which uses one physical link over the first EXB to
	communicate with the AXE. */
/* IP address 2 is allocated on the DPA on the second IP logical
	network which uses one physical link over the first EXB to
	communicate with the AXE. */
/* The operational state of the connection between AXE and TGC. */
/* Reference to BladePair object instance
        used by the DefaultPointAssociation instance. */
/* DigitMap class. Bitmap  used for detecting and reporting
      digit events on a termination.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* The identifier of the digit map */
/* Defines patterns against which sequences of a specified set
	of events are to be matched so that they can be reported as a
	group rather than singly.

	Digits 0..9 and letters A through a maximum value depending
	on the signalling system concerned, but never exceeding K.
	The letter x is used as a wildcard, designating any event
	corresponding to symbols in the range 0..9. */
/* The time (in seconds) the gate way waits for the first digit
	if the timer expires an event is sent to the TGC.
	The start timer (T) is used prior to any digits have been dialed.
	If the existing timer value configured in Media Gateway */
/* will
 	be used, set this value to "noChange". */
/* The time (in seconds) that the gateway must wait for more
	digits before reporting a digit match, because additional
	digits might cause a match with a different pattern
	The short timer (S) in seconds.
	If the existing timer value configured in Media Gateway will
	be used, set this value to "noChange". */
/* If the gateway can determine that one or more digits are
	needed for a digit string to match one of the allowed patterns
	in the digit map, then the inter-digit timer value (in seconds)
	should be set to a long (L) duration. If the existing timer value
	configured in Media Gateway will be used, set this value to
	"noChange". */
/* The time (in units of 100 ms) before a long duration
	event is sent. If the existing timer value configured
	in Media Gateway will be used, set this value to "noChange". */
/* The memory usage of the digit map. */
/* "Digit Map counter"
        Family = "Digit Map statistics". */
/* A set of parameters for the transaction handling
      between TGC and gateway.
      Defined in mim file mlg_mim.xml. */
/* A unique name for the H.248 Parameters set. */
/* Parameter for normal MG execution time (ms).
	This is a timer (in milliseconds) in the GW. When it expires,
	but the request is still under processing, a Transaction
	Pending message is sent back to the TGC and the timer is
	restarted. */
/* Parameter for normal MGC execution time (ms).
	This is a timer (in milliseconds) in the TGC. When it expires,
	but the request is still under processing a Transaction Pending
	message is sent back to the GW and the timer is restarted. */
/* Parameter for MG provisional response time (ms).
	Within this period, a Transaction Reply or a Transaction
	Pending message shall be received by the TGC, otherwise the
	transaction will be retransmitted or considered to be failed
	(depends on how many retransmissions has been passed). */
/* Parameter for MGC provisional response time (ms).
	Within this period, a Transaction Reply or a Transaction
	Pending message shall be received by the GW , otherwise the
	transaction will be retransmitted or considered to be failed
	(depends on how many retransmissions has been passed). */
/* Parameter for MG originating pending limit.
	The number of pending messages can be sent (for a given
	received transaction request). When the limit is exceeded,
	the transaction is aborted, and an error message is sent
	to the sender of the transaction request. */
/* Parameter for MGC originating pending limit.
	The number of pending messages can be sent (for a given
	received transaction request). When the limit is exceeded,
	the transaction is aborted, and an error message is sent
	to the sender of the transaction request. */
/* Number of request retries. The number of retries when a no
	transaction response is received. */
/* Long request timer (s). */
/* Long request retries. The number of retries when a no
	transaction a pending response is received. */
/* H.248 Long timer (ms). This is a megaco timer determining how long are
    subsequent H.248 retransmissions replied by Megaco without re-evaluation. */
/* Multiplicative factor F.
	This is a multiplicative factor that is multiplied to old
	retry timer value to calculate a new timer value.
	NewRetryTime = OldRetryTime*F + I */
/* Increment I (ms).
	This isan additional increment that is added to calculate
	a new timer value.
	NewRetryTime = OldRetryTime*F + I. */
/* Indicates whether or not threeway handshake is supported. */
/* A set of parameters for controlling the
      number of calls in the GW.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* Name of Call Counting Parameters set. */
/* Emergency Call Reservation Parameter (RES) is defined such that the
	limit TRAL minus RES is the value of Number of Calls in progress
	(NCIP) at which no new normal calls are permitted (when GTT = 100%)
	i.e. a normal call is permitted only if NCIP is less than TRAL
	minus RES (when GTT=100%). */
/* The Total Traffic Limit (TRAL) is the value of Number of Calls in
	progress (NCIP) at which no new normal or emergency calls are
	permitted (when GTT = 100%). It is an integer, any value 0 to
	Maximum, increment is 1. */
/* A representation of the TGC overload function, which can be
      of either the "Ericsson window" or "Leaky bucket" type, so there
      can't exist a standalone OverloadControlParameters object:
      - can't create standalone OverloadControlParameters object, only a
        LeakyBucket or an EricssonWindow object.
      - deleting a LeakyBucket or an EricssonWindow object deletes its
        parent OverloadControlParameters object too.
      - deleting an OverloadControlParameters objects deletes its child
        object too.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* A unique name for the Overload Control Parameters set.
	The class have two possible childclasses, EricssonWindow or
	LeakyBucket. Only one of them can be used per
	OverloadControlParameters instance. */
/* A set of parameters for the "Ericsson window" type
      overload control function.
      Defined in mim file mlg_mim.xml. */
/* A unique name for the Ericsson Window Parameters set. */
/* T95 timer (ms).
	The period within which 95% of all transactions completes
	and a response is expected by TGC. */
/* A set of parameters for the "Leaky Bucket" type
      overload control function.
      Defined in mim file mlg_mim.xml. */
/* A unique name for the Leaky Bucket Parameters set. */
/* Target overload rate (calls/s), the desired number of
	overload notifications per interval where the gateway
	is considered to be working at its maximum capacity. */
/* Max leak amount in calls per sec.
	The maximum number of calls that can be removed ("leaked")
	per second from the bucket, which defines the maximum call rate. */
/* Min leak amount in calls per sec.
	The minimum number of calls that can be removed ("leaked")
	per second from the bucket at the highest overload notification rate,
	which defines the minimum call rate. */
/* Upward adjustment constant. */
/* Downward adjustment constant. */
/* Maximum adjustment of leak amount (%). */
/* Time to wait for adjustment to take effect (s). */
/* Splash. Hardcoded 1. */
/* Time to measure overload and rejects (s). */
/* The initial leak rate in calls per sec. */
/* Priority watermark for priority 15. */
/* Priority watermark for priority 14. */
/* Priority watermark for priority 13. */
/* Priority watermark for priority 12. */
/* Priority watermark for priority 11. */
/* Priority watermark for priority 10. */
/* Priority watermark for priority 9. */
/* Priority watermark for priority 8. */
/* Priority watermark for priority 7. */
/* Priority watermark for priority 6. */
/* Priority watermark for priority 5. */
/* Priority watermark for priority 4. */
/* Priority watermark for priority 3. */
/* Priority watermark for priority 2. */
/* Priority watermark for priority 1. */
/* Priority watermark for priority 0. */
/* Max pending cycles. */
/* Initial bucket fill (calls). */
/* Switch on/off SFA */
/* Control POTS Orig stream */
/* Control ISDN Orig stream */
/* Weight of POTS Orig stream */
/* Weight of POTS Term stream */
/* Weight of ISDN Orig stream */
/* Weight of ISDN Term stream */
/* Payload mapping contains a list of payload type number and encoding
      name per supported codec, to be used in the codec negotiation with
      gateways.
      Defined in mim file mlg_mim.xml. */
/* RFC 2327 payload type identifying
	a specific codec. */
/* Encoding name of a payload type. */
/* Payload type number of a payload type. */
/* A point association for the AXE communication, one for each
      TGC bladepair call handler CP.
      Defined in mim file mlg_mim.xml. */
/* Point association identity. */
/* The IP address 1 is allocated on the PA on the first IP Logical
	Network which use one physical link over the first EXB to
	communicate with the AXE. */
/* The IP address 2 is allocated on the PA on the second IP Logical
	Network which use one physical link over the second EXB to
	communicate with the AXE. */
/* The state of the connection between AXE and TGC. */
/* Reference to BladePair object instance
        used by the H248UdpLink instance. */
/* A Call Handler, associated with a point association,
      is processing call setup requests from AXE.
      Defined in mim file mlg_mim.xml. */
/* Call handler identity. (For example, the same
	identity as it's parent PointAssociation identity). */
/* Number of performed Intra-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt is successful.
	Family = "Call statistics". */
/* Number of failed Intra-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt fails for a
	reason other than congestion.
	Family = "Call statistics". */
/* Number of congested Intra-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt fails because
	of congestion.
	Family = "Call statistics". */
/* Number of performed Inter-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt is successful.
	Family = "Call statistics". */
/* Number of failed Inter-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt fails for a
	reason other than congestion.
	Family = "Call statistics". */
/* Number of congested Inter-Domain call Attempts on the call handler.
	This counter is increased every time a call attempt fails because
	of congestion.
	Family = "Call statistics". */
/* Number of mismatches between TeS configured
	Interworking Network Profile ptime and received
	Explicit Payload Size signaled from
        SIP/SIP-T/H.323 network.
        Family = "Call statistics". */
/* Number of mismatches between TeS configured Encoding
	Scheme and received G.711 law type signaled from
	SIP/SIP-T/H.323 network.
        Family = "Call statistics". */
/* Number of performed Inter-Network call Attempts on the call handler.
	This counter is increased every time a call attempt is successful.
	Family = "Call statistics". */
/* Number of failed Inter-Network call Attempts on the call handler.
	This counter is increased every time a call attempt fails for a
	reason other than congestion.
	Family = "Call statistics". */
/* Number of congested Inter-Network call Attempts on the call handler.
	This counter is increased every time a call attempt fails because
	of congestion.
	Family = "Call statistics". */
/* Number of intra gateway path establishment attempts.
	Family = "Call statistics". */
/* Number of failed intra gateway path establishment attempts.
	Family = "Call statistics". */
/* Number of inter gateway path establishment attempts.
	Family = "Call statistics". */
/* Number of failed inter gateway path establishment attempts.
	Family = "Call statistics". */
/* Number of path establishment attempts.
	Family = "Call statistics". */
/* Number of failed path establishment attempts.
	Family = "Call statistics". */
/* Result Code Counter (RC=1).
        Protocol Error Unspecified.
        Family = "Result code counters". */
/* Result Code Counter (RC=2).
        Internal Error.
        Family = "Result code counters". */
/* Result Code Counter (RC=3).
        Bandwidth in MG not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=4).
        Session does not match.
        Family = "Result code counters". */
/* Result Code Counter (RC=5).
        Switch device not configured.
        Family = "Result code counters". */
/* Result Code Counter (RC=6).
        Switch device channel not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=7).
        Incompatible cell-fill values.
        Family = "Result code counters". */
/* Result Code Counter (RC=8).
        Temporary busy.
        Family = "Result code counters". */
/* Result Code Counter (RC=9).
        Illegal string format.
        Family = "Result code counters". */
/* Result Code Counter (RC=10).
        Port already seized.
        Family = "Result code counters". */
/* Result Code Counter (RC=11).
        Port does not exist.
        Family = "Result code counters". */
/* Result Code Counter (RC=12).
        Device has semi-permanent connection.
        Family = "Result code counters". */
/* Result Code Counter (RC=13).
        Port reconfiguration in progress.
        Family = "Result code counters". */
/* Result Code Counter (RC=14).
        Message rejected overload in ML.
        Family = "Result code counters". */
/* Result Code Counter (RC=15).
        Modification in Path no allowed.
        Family = "Result code counters". */
/* Result Code Counter (RC=16).
        Tone not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=17).
        Path type resource not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=18).
        Leased line path not allowed.
        Family = "Result code counters". */
/* Result Code Counter (RC=19).
        Message rejected overload in MG.
        Family = "Result code counters". */
/* Result Code Counter (RC=20).
        MG not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=21).
        Network not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=22).
        Temporary hardware failure.
        Family = "Result code counters". */
/* Result Code Counter (RC=23).
        Override.
        Family = "Result code counters". */
/* Result Code Counter (RC=24).
        Device does not match.
        Family = "Result code counters". */
/* Result Code Counter (RC=25).
        Law conversion not possible.
        Family = "Result code counters". */
/* Result Code Counter (RC=26).
        Echo Cancellation not possible.
        Family = "Result code counters". */
/* Result Code Counter (RC=28).
        DTMF Digit Reception not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=29).
        DTMF Digit Sending not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=128).
        Invalid or Insufficient bearer information.
        Family = "Result code counters". */
/* Result Code Counter (RC=129).
        Invalid Connection address.
        Family = "Result code counters". */
/* Result Code Counter (RC=130).
        Transport protocol not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=131).
        Media Type not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=132).
        Payload Type Parameter 'Clock Rate' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=133).
        Payload Type Parameter 'T38FaxVersion' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=134).
        Payload Type Parameter 'T38FaxMaxBitRate' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=135).
        Payload Type Parameter 'T38FaxDataRateMgmt' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=136).
        Payload Type Parameter 'T38FaxMaxBufferSize' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=137).
        Payload Type Parameter 'T38FaxMaxDatagram' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=138).
        Payload Type Parameter 'T38UdpEC' not supported.
        Family = "Result code counters". */
/* Result Code Counter (RC=139).
        Resource not available in bearer network.
        Family = "Result code counters". */
/* Result Code Counter (RC=140).
        Overload in AXE.
        Family = "Result code counters". */
/* Result Code Counter (RC=142).
        ML Port Reference not defined.
        Family = "Result code counters". */
/* Result Code Counter (RC=143).
        ML Port Reference and AXE Port Reference don't match.
        Family = "Result code counters". */
/* Result Code Counter (RC=144).
        AXE Port Reference not defined.
        Family = "Result code counters". */
/* Result Code Counter (RC=145).
        Call collision in AG.
        Family = "Result code counters". */
/* Result Code Counter (RC=146).
        Port not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=147).
        MG not defined.
        Family = "Result code counters". */
/* Result Code Counter (RC=148).
        Bearer negotiation ongoing.
        Family = "Result code counters". */
/* Result Code Counter (RC=149).
        Payload Type not supported by bearer network.
        Family = "Result code counters". */
/* Result Code Counter (RC=150).
        Media resource request failed.
        Family = "Result code counters". */
/* Result Code Counter (RC=151).
        Transmission Failure.
        Family = "Result code counters". */
/* Result Code Counter (RC=152).
        Port not available or disabled.
        Family = "Result code counters". */
/* Result Code Counter (RC=155).
        No statistics available.
        Family = "Result code counters". */
/* Result Code Counter (RC=156).
        Rejected by Call Rate Limiter.
        Family = "Result code counters". */
/* Result Code Counter (RC=157).
        Rejected by Call Counting.
        Family = "Result code counters". */
/* Result Code Counter (RC=159).
        Unexpected on-hook.
        Family = "Result code counters". */
/* Result Code Counter (RC=154).
        Unexpected line state.
        Family = "Result code counters". */
/* Result Code Counter (RC=161).
        GW interface not defined.
        Family = "Result code counters". */
/* Result Code Counter (RC=162).
        GW interface not available.
        Family = "Result code counters". */
/* Result Code Counter (RC=164).
        No interface matching for address.
        Family = "Result code counters". */
/* Result Code Counter (RC=165).
        No interface matching for CPRI.
        Family = "Result code counters". */
/* Result Code Counter (RC=166).
        Rejected by H.248.11.
        Family = "Result code counters". */
/* Result Code Counter (RC=167).
        Rejected due to hanging context.
        Family = "Result code counters". */
/* Toneset class.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* A unique name of the toneset.

        The name must start with letter (either case) and must contain only
        ASCII characters inside of the 33-126 range (inclusive). */
/* Objects for translating H.248 tone names to physical tones.
      Defined in mim file mlg_mim.xml. */
/* The name of the physical tone. This attribute can be specified
        several times, once for for each different toneId. */
/* H.248 Tone package. */
/* A UDP inactivity parameter set is used for supervision of
      UDP control links.
      Defined in mim file mlg_mim.xml. */
/* A unique name for the UDP Inactivity Parameters set. */
/* Timer as defined in H.248.14 and it is stepped
	in terms of 10ms. */
/* Type of poll message used at
	UDP inactivity check. */
/* Number of times poll is done before bringing
	the link down. */
/* Latency. */
/* The H248Profile class stores H.248 profile names and the
      corresponding base types.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* Name of H.248 Profile.
       The profile name must match the the name used by the GW.

       Maximum length of the profile is 100 characters. The name can contain
       only alphanumeric characters, underscore and one slash. The slash can be
       followed by only numbers. The name is converted to lowercase after
       creation and if doesn't contain version information, "/1" will be
       appended (so if a profile called "ABC" is created, the node will have a
       profile called "abc/1") */
/* Base type for profile. */
/* The H248CapabilitySet class stores H.248 capabilities of the
      different type of Gateways.
      The capabilities configured in this table are verified
      during the audit process.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* Name of H.248 Capability set.

       Maximum length of the profile is 100 characters. */
/* Reference to ToneSet object instance
        used by the H248CapabilitySet instance.
	A tone set is a collection of tones.
	GWs are expected to be provisioned with appropriate
        tones for the country in which the GW is located.

        These tones are used only if tones are supported in egress or
        egress_ingress direction. */
/* Reference to AnnouncementSet object instance
        used by the H248CapabilitySet instance.
	The H.248 capability set can be associated with a announcement set,
	the parameter is optional and the H.248 profile could be
	configured to not support any announcements.
	If an announcement set is selected it must match the
	announcement set configured in the GW.

        These announcements are used only if announcements are supported in egress or
        egress_ingress direction. */
/* Capability for FSK Sending.
	no: FSK sending not supported
	yes: FSK sending supported
	audit: Sends an audit to the GW to determine if FSK
	       sending is supported. */
/* Capability for DTMF Sending.
	no: DTMF sending not supported
	yes: DTMF sending supported */
/* Capability for DTMF Receiving.
	no: DTMF reception not supported
	yes: DTMF reception supported
	audit: Sends an audit to the GW to determine if DTMF
	       reception is supported. */
/* Capability for FSK Sending.
	no: FSK sending not supported
	yes: FSK sending supported
	audit: Sends an audit to the GW to determine if FSK
	       sending is supported. */
/* Capability for DTMF Sending.
	no: DTMF sending not supported
	yes: DTMF sending supported */
/* Capability for DTMF Receiving.
	no: DTMF reception not supported
	yes: DTMF reception supported
	audit: Sends an audit to the GW to determine if DTMF
	       reception is supported. */
/* Capability for Call Finished Indicator.
	no: Indicator not supported
	yes: Indicator supported */
/* Capability for reporting line status changes.
	no: Indicator not supported
	yes: Indicator supported */
/* The tones on the physical terminations are supported in this
        direction.
	egress: tones are supported in the egress direction
        egress_ingress: tones are supported in the egress and igress directions
        no: no tone support */
/* The tones on the ephemeral terminations are supported in this
        direction.
	egress: tones are supported in the egress direction
        egress_ingress: tones are supported in the egress and igress directions
        no: no tone support */
/* Capatibility for utilizing the DiffServ (ds) package
	no: DiffServ package not supported
	yes: DiffServ package supported
	audit: Sends an audit to the GW to determine if DiffServ
	       package is supported. */
/* Capatibility for utilizing the Gate Management (gm) package
	no: Gate Management package not supported
	yes: Gate Management package supported
	audit: Sends an audit to the GW to determine if Gate Management
	       package is supported. */
/* Link guard timer (in seconds). 0 means 'not set'. */
/* A configurable option for statistics request
    on_demand: request statistics only in those cases where a request has been
               received from the AXE (TSS 4.0 standard configuration)
    always:    always request statistics in
               the Subtract message sent to the gateway nodes (BT configuration) */
/* A set of parameters for controlling the
      mass call release regulation in the GW.

      The object can be deleted only if it's not referenced from any other
      object. The changes in this object will only affect the control link
      using this object when an attribute of the control link (Gateway,
      H248UdpLink or H248SctpLink) is changed.

      Defined in mim file mlg_mim.xml. */
/* Name of Mass Call Release Regulation Parameters set. */
/* The window size of the mass call release regulation. */
/* Parameters used for Geographical Redundancy,
      one for each TGC bladesystem.
      Defined in mim file mlg_mim.xml. */
/* Dummy index to access global Geographical Redundancy parameters. */
/* H.248 IP address of peer TGC. */
/* H.248 port of peer TGC (UDP or SCTP, does not
        matter for TGC, it is supposed that the same
        transport is used in both domains). */
/* Order switchover of all home (primary) or registered
	gateways.
        Note: The read value is always false. */
/* Order switchback of all registered visitor
        (redundant) gateways.
        Note: The read value is always false. */
/* Registration capability of visitor (redundant)
        gateways. */
/* Maintain Bearer Path after switchover */
/* Switchover when detecting AXE failure */
/* AXE Dead Interval in seconds */
/* AXE Periodic Disturbance Timer in seconds.
        Subsequent AXE large restarts within this period are
        considered to be periodic. */
/* Number of allowed AXE large restarts in the disturbance
        period before declaring AXE dead. */
/* Number of primary Access Gateways connected
        to this TeS. */
/* Number of redundant Access Gateways connected
        to this TeS. */
/* Mated TeS or Automated Active Standby
         Redundancy Scheme. */
/* Status in the  Automated Active Standby
         Redundancy Scheme */
/* Per Route Preferred Capability Set

      Defined in mim file mlg_mim.xml. */
/* The call scenario, and the number of the profile in that scenario.
        The scenarios are: intraDomain
                           interDomain
                           interNetwork
        In intra/inter doman, there can be only one profile, no. 0
        Example: interNetwork_2 */
/* Controls whether or not the generic silence suppression
         function will be activated. This attribute does not apply
         to codec G.729AB and G.723.1A (which includes a codec-specific silence
         suppression mechanism).
	 true = on, false = off. */
/* This attribute controls whether or not the Dual Tone Multi Frequency
	(DTMF) relay service is activated. Activation of DTMF relay ensures
	that DTMF tones are transported without degradation.
	true = on, false = off. */
/* This parameter is only valid for intraDomain and interNetwork codec
	capability sets.
	When T.38 is activated, the TSS Gateway Controller will support
	the setup of T.38 fax call and order the monitoring of V.21 fax
	preamble signalling in the gateway during call setup.
	true = T.38 activated, false = T.38 deactivated. */
/* When autoswitch is activated, TGC will support the autoswitch feature. */
/* Clear channel packetisation time
        Valid values are: 5, 10, 20 and 40 ms. */
/* The  codeclist of a PerRoutePCS profile. */
/* The ID of the codec. */
/* The position of the codec in the codeclist. */
/* Packetisation time (ms).
        Valid values are the following for the given codecs:
          G.711:      5, 10, 20, 30, 40 ms
          G.723.1-H:  30, 60 ms
          G.723.1-L:  30, 60 ms
          G.723.1a-H: 30, 60 ms
          G.723.1a-L: 30, 60 ms
          G.726-32:   5, 10, 20, 40 ms
          G.729AB:    10, 20, 30, 40 ms
          G.729A:     10, 20, 30, 40 ms */
/* DigitMapSet class.

      The object can be deleted only if it's not referenced from any other
      object.

      Defined in mim file mlg_mim.xml. */
/* A unique name of the DigitMapSet.

        The name must start with letter (either case) and must contain only
        ASCII characters inside of the 33-126 range (inclusive). */
/* The memory usage of digit maps. */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* "Digit Map Numbering counter"
        Family = "Digit Map Numbering statistics". */
/* Objects for adding and deleting digit maps to/from a digit map set.
      Defined in mim file mlg_mim.xml. */
/* The name of the digit map. */
/* DigitMapMapping class.

      The object responsible for setting digit map number
      and digit map associations.

      Defined in mim file mlg_mim.xml. */
/* Digit Map number. */
/* Digit map name. */
/* Load distribution parameters for each point association
      Can not be deleted.
      Defined in mim file mlg_mim.xml. */
/* Point association identity. */
/* Reference to BladePair object instance
        used by the H248UdpLink instance. */
/* Maximum desired average occupancy of the blade-pair. */
/* Load distribution parameter: artificial fixed value for average
        measured load of the blade during the last control interval
        (for testing purposes). */
/* Load distribution parameter: artifficial fixed value for total number
        of calls accepted by the blade during the last control interval
        (for testing purposes). */
/* NodeLevelH24811Params class.

      The object is responsible for setting
      Node level H248.11 settings

      Defined in mim file mlg_mim.xml. */
/* Key */
/* Switch on/off H248.11 on node level */
/* Switch on/off sending of H248.11 statistics */
/* Configuration data for the Gateway representation.

      The gateway can have one H248SctpLink or H248UdpLink child (but not
      both!). If the admState object of that child is "locked", only the
      following attributes of the Gateway can be modified:
      - bladePair
      - callRateLimiterState
      - callCountingState
      - callRateLimit
      - callCountingParametersRef

      If the admState is "unlocked", the Gateway and the link can't be deleted.
      Deleting the link object automatically deletes the parent gateway too.

      If the type attribute of a Gateway is agw, then the digitMapRef can
      refer to a digit map. If the type is not agw, no digitMapRef must be
      specified in create or merge edit-config operations.

      If a Gateway had been created and after no Control Link defined for it,
      the Gateway has not been shown on the ISM page.

      Defined in mim file mlg_mim.xml. */
/* The user-defined name of this gateway controller.
	This name, which must be unique within the network,
	depending on the chosen H.248 message identifier format
	might be used in the H.248 signalling between the gateway
	controller and the gateways. This value should normally only
	be set once at installation. Changing this value is only
        possible if all H.248 control links are blocked.

        The value of this attribute must start with letter (either case) and
        must contain only alphanumeric characters. It is case-insensitive, so
        one can't have two gateways with names "gw" and "GW". */
/* Gateway identity. Identifier used in the H.248 signaling
	towards the gateway. This corresponds to the BCUID parameter
	in AXE and should be the same as H.248 Link identity. */
/* Reference to H248Profile object instance
        used by the Gateway instance. Selects which H.248 profile to
	use for the gateway. The profile name must match the profile
	specified in the H.248 message from the gateway. The base type
	of the profile must match the type of gateway. */
/* Reference to DigitMap object instance used by the Gateway
	instance. This field is only valid if Gateway type is AGW. */
/* Digit Map Set name. This field is only valid if Gateway type is AGW. */
/* The memory usage of digit maps. */
/* Reference to CallCountingParameters object instance
        used by the Gateway instance. Selects which set of call counting
	parameters to use for the gateway. */
/* The Media Gateway type. If no check on Media Gateway type
	shall/can be made, the type is set to 'any' (unknown). */
/* The service change state tells if the gateway
	have service changed toward the controller. */
/* The H.248 control link to be handled by a specific blade pair.
	This is done to distribute the load between blade pairs in the
	system. */
/* Decides the format of the Message ID in the
	H.248 header for the Controller (TGC). */
/* If H.248 message identifier format is IP address or IP
	address and port, this field is mandatory. This is the address
	of the gateway to which the H.248 messages are sent. */
/* If H.248 message identifier format is domain name and port
	or IP address and port, this field is mandatory. This is the
	port of the gateway to which the H.248 messages are sent. */
/* Indicates whether or not the function Call Counting (according
	to the referenced set of call counting parameters) is used by
	the gateway. */
/* Indicates whether or not the call rate limit parameter
	is used by the gateway. This is only valid for leaky bucket. */
/* The Leaky bucket call rate delimiter in calls per sec.
	Only valid for leaky bucket, and if the call rate limiter
	state is set to "on". */
/* Threshold for Call Counting alarm generation. */
/* Number of errorless windows (timeframes) for Call Counting
        alarm ceasing. */
/* Threshold for Call Rate Limiter alarm generation. */
/* Number of errorless windows (timeframes) for Call Rate Limiter
        alarm ceasing. */
/* Indicates whether or not the function Mass Call Release Regulation (according
	to the referenced set of Mass Call Release Regulation parameters) is used by
	the gateway. */
/* Reference to MassCallReleaseRegulationParameters object instance
        used by the Gateway instance. Selects which set of mass call release regulation
	parameters to use for the gateway. */
/* Hangterm package timerx value in seconds. 0 means hangterm is not used. */
/* Number of attempts to establish a dynamic intra-MG connection.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic intra-MG connection.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic intra-MG
	connection due to congestion in the media gateway.
	Family = "Call statistics". */
/* Number of attempts to establish a dynamic inter-MG
	connection on an originating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-MG connection on an originating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-MG connection on an originating endpoint due
	to congestion in the media gateway.
	Family = "Call statistics". */
/* Number of attempts to establish a dynamic inter-MG
	connection on a terminating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-MG connection on an terminating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-MG connection on an terminating endpoint due
	to congestion in the media gateway.
	Family = "Call statistics". */
/* Number of attempts to establish a dynamic inter-domain
	connection on an originating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-domain connection on an originating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-domain connection on an originating endpoint due
	to congestion in the media gateway.
	Family = "Call statistics". */
/* Number of attempts to establish a dynamic inter-domain
	connection on a terminating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-domain connection on a terminating endpoint.
	Family = "Call statistics". */
/* Number of failed attempts to establish a dynamic
	inter-domain connection on a terminating endpoint due
	to congestion in the media gateway.
	Family = "Call statistics". */
/* Number of performed Inter-Network call Attempts on the Gateway.
	Family = "Call statistics". */
/* Number of failed Inter-Network call Attempts on the gateway.
	Family = "Call statistics". */
/* Number of congested Inter-Network call Attempts on the gateway.
	Family = "Call statistics". */
/* The number of normal calls rejected due to call rate limiter or H.248.11
	in the gateway.
	Family = "Call statistics". */
/* The number of priority calls rejected due to call rate limiter or H.248.11
	in the gateway.
	Family = "Call statistics". */
/* Total number of received call attempts in the gateway.
	Family = "Call counting statistics". */
/* NCIP is the current value of the number of calls in progress.
	This counter includes all calls originating or terminating on the TGW.
	NCIP is incremented before the seizure of an ephemeral termination
	for a call, and decremented when the ephemeral termination is
	released owing to call release.
	Family = "Call counting statistics". */
/* The number of emergency/priority calls rejected due to
	Call Counting in the gateway.
	Family = "Call counting statistics". */
/* The number of non-emergency/priority calls rejected due to
	call counting in the gateway.
	Family = "Call counting statistics". */
/* The number of the occurence when a termination is
	found in a context unknown to TGC.
	Family = "Call statistics". */
/* The average number of ephemeral terminations in contexts during
        measurement period (15mins).
        Family = "GW Erlang statistics". */
/* The maximum number of ephemeral terminations in contexts during
        measurement period (15mins).
        Family = "GW Erlang statistics". */
/* Average length of queue used by MCR Control for a given gateway.
        Family = "GW Erlang statistics". */
/* Maximum length of queue used by MCR Control for a given gateway.
        Family = "GW Erlang statistics". */
/* Number of POTS originating seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS originating seizure attempts.
        Family = "Call statistics". */
/* Number of POTS terminating seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS terminating seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN seizure attempts.
        Family = "Call statistics". */
/* Number of BICC seizure attempts.
        Family = "Call statistics". */
/* Number of failed BICC seizure attempts.
        Family = "Call statistics". */
/* Number of VoIP (H.323, SIP) seizure attempts.
        Family = "Call statistics". */
/* Number of failed VoIP (H.323, SIP) seizure attempts.
        Family = "Call statistics". */
/* Order switchover or switchback.
         Note: The read value is always false. */
/* Allocation: home/primary or visitor/redundant. */
/* Registration capability (only applicable when redundant). */
/* Order forced registration to peer.
         Note: The read value is always false. */
/* Residency status */
/* Manually initiated Root Properties Audit/Modify
         Note: The read value is always false. */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco error code counter"
        Family = "Megaco low-level counters". */
/* "Megaco sent message counter"
        Family = "Megaco low-level counters". */
/* "Megaco sent message counter"
        Family = "Megaco low-level counters". */
/* "Megaco sent message counter"
        Family = "Megaco low-level counters". */
/* "Megaco sent message counter"
        Family = "Megaco low-level counters". */
/* "Megaco sent message counter"
        Family = "Megaco low-level counters". */
/* "Megaco local signaling-level error counter"
        Family = "Megaco low-level counters". */
/* "Megaco local timer recovery counter"
        Family = "Megaco low-level counters". */
/* The number of threads paralelly used during ephemeral termination audits. */
/* Reference to H248CapabilitySet object instance
        used by the Gateway instance. Selects which H.248 capability set
        to  use for the gateway. The profile name must match the profile
	specified in the H.248 message from the gateway. */
/* Access gateway notification rate capacity weight used for
      etsi_nr/notrat calculation */
/* Number of ISDN originating seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN originating seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN terminating seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN terminating seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN originating priority seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN originating normal seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN originating priority seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN originating normal seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN terminating priority seizure attempts.
        Family = "Call statistics". */
/* Number of ISDN terminating normal seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN terminating priority seizure attempts.
        Family = "Call statistics". */
/* Number of failed ISDN terminating normal seizure attempts.
        Family = "Call statistics". */
/* Number of POTS originating priority seizure attempts.
        Family = "Call statistics". */
/* Number of POTS originating normal seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS originating priority seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS originating normal seizure attempts.
        Family = "Call statistics". */
/* Number of POTS terminating priority seizure attempts.
        Family = "Call statistics". */
/* Number of POTS terminating normal seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS terminating priority seizure attempts.
        Family = "Call statistics". */
/* Number of failed POTS terminating normal seizure attempts.
        Family = "Call statistics". */
/* The number of emergency/priority calls accepted due to
	Call Counting in the gateway.
	Family = "Call counting statistics". */
/* The number of non-emergency/priority calls accepted due to
	call counting in the gateway.
	Family = "Call counting statistics". */
/* The number of normal calls accepted due to call rate limiter or H.248.11
	in the gateway.
	Family = "Call statistics". */
/* The number of priority calls accepted due to call rate limiter or H.248.11
	in the gateway.
	Family = "Call statistics". */
/* H.248 SCTP Link used for controlling the Media Gateway.
      H.248 SCTP and H.248 UDP links are mutually exclusive.

      If the admState attribute is "locked", no other attribute can be
      modified.

      Deleting the link object automatically deletes the parent gateway too.

      Defined in mim file mlg_mim.xml. */
/* H.248 Link identity. */
/* Which H.248 parameter settings to use for the H.248 control link.
	Reference to H248Parameters object
	instance used by the H248Link instance. */
/* Which overload control set to use for the H.248 control link.
	Reference to OverloadControlParameters object
	instance used by the H248Link instance. */
/* Reference to BladePair object instance
        used by the H248SctpLink instance. */
/* The time when the last service changed occurred
	This is the decoded timeStamp descriptor received from the
        gateway as part of the serviceChange Parameters.

        Date and time specification according to the XML schema, see
        http://www.w3.org/TR/xmlschema-2/#dateTime
        Practically it's like this: 2007-09-03T13:19:08+00:00 */
/* Administrative state of the control link. */
/* Operative state of the control link. */
/* H.248 link encoding. */
/* The local port of the H.248 control link. */
/* The local IP address #1 of the H.248 control link. */
/* The local IP address #2 of the H.248 control link. */
/* The remote port of the H.248 control link. */
/* The remote IP address #1 of the H.248 control link. */
/* The remote IP address #2 of the H.248 control link. */
/* The GCP heartbeat interval (s). */
/* Number of complete data chunks (user messages) sent to the peers
	(retransmission included).

	Family=SCTP statistics */
/* Number of complete data chunks (user messages) received from
	the peers (retransmission included).

	Family=SCTP statistics */
/* Number of unordered chunks sent to the peers.

	Family=SCTP statistics */
/* Number of unordered chunks received from the peers.

	Family=SCTP statistics */
/* Number of SCTP packets received with an invalid checksum.

	Family=SCTP statistics */
/* Number of data chunks retransmitted to the peers.

	Family=SCTP statistics */
/* Number of datagrams sent with chunk type id >0.

	Family=SCTP statistics */
/* Number of datagrams received with chunk type id >0.

	Family=SCTP statistics */
/* Number of fragmented user messages, incremented when the
	first data chunk of a fragmented message is sent.

	Family=SCTP statistics */
/* Number of reassembled user messages, incremented when the
	first data chunk of a fragmented message is received.

	Family=SCTP statistics */
/* Number of sent SCTP packets.

	Family=SCTP statistics */
/* Number of received SCTP packets.

	Family=SCTP statistics */
/* Number of times a communication stop indication has been
	sent to the user.

	Family=SCTP statistics */
/* Number of times a communication resume indication has been
	sent to the user.

	Family=SCTP statistics */
/* Number of sent chunks that have been dropped due to buffer
	overflow in the sending buffer.

	Family=SCTP statistics */
/* Number of received chunks that have been dropped due to buffer
	overflow in the receiving buffer.

	Family=SCTP statistics */
/* H.248 UDP Link used for controlling the Media Gateway.
      H.248 SCTP and H.248 UDP links are mutually exclusive.

      If the admState attribute is "locked", no other attribute can be
      modified.

      Deleting the link object automatically deletes the parent gateway too.

      Defined in mim file mlg_mim.xml. */
/* H.248 Link identity. */
/* Which H.248 parameter settings to use for the H.248 control link.
	Reference to H248Parameters object
	instance used by the H248Link instance. */
/* Which UDP inactivity set top use for the H.248 control link.
	This is only valid for H.248 control links of UDP type
	Reference to UdpInactivityParameters object
	instance used by the H248Link instance. */
/* Which overload control set to use for the H.248 control link.
	Reference to OverloadControlParameters object
	instance used by the H248Link instance. */
/* Reference to BladePair object instance
        used by the H248UdpLink instance. */
/* Which of the bladesystems subnet segment to use
	as next hop. */
/* The time when the last service changed occurred.
	This is the decoded timeStamp descriptor received from the
	gateway as part of the serviceChange Parameters.

        Date and time specification according to the XML schema, see
        http://www.w3.org/TR/xmlschema-2/#dateTime
        Practically it's like this: 2007-09-03T13:19:08+00:00 */
/* Administrative state of the control link. */
/* Operative state of the control link. */
/* H.248 link encoding. */
/* The local port of the H.248 control link. */
/* The local IP address of the H.248 control link. */
/* The remote port of the H.248 control link. */
/* The remote IP address of the H.248 control link. */
/* Represents a Border Gateway Interface.
      Defined in mim file mlg_mim.xml. */
/* The id of the interface in AXE. */
/* The id of this interface in the BGW. */
/* The gateway interface set (telephony route) containing this interface. */
/* The subnet address connected to this interface. */
/* Mask length of the subnet address. */
/* The parameter set belonging to this interface. */
/* Bandwith threshold for normal calls (kbit/s). */
/* Bandwith threshold for emergency/priority calls (kbit/s). */
/* Allocated bandwith on this interface (kbit/s). */
/* Indicates whether this interface is internal or external. */
/* Operational state of this interface. */
/* The average number of calls in BgwInterface during
        measurement period (15mins).
        Family = "BGWIF Erlang statistics". */
/* The maximum number of calls in BgwInterface during
        measurement period (15mins).
        Family = "BGWIF Erlang statistics". */
/* Interface Connection Point Routing Information. */
/* The object for configuring the TISP reporting.
      Defined in mim file mlg_mim.xml. */
/* The key of TISP reporting. Always 1. */
/* The administrativ state od TISP reporting. */
/* The period when reports should be sent.
    Valid values are 1, 12, 24, 48. Others will be rejected. */
/* The designation where the reports should be sent. */
/* The username which should be used for (S)FTP transfer. */
/* The password which should be used for (S)FTP transfer. */
/* The remote directory where the reports should be stroed. */
/* The action to trigger the onDemandTransfer. No parameters required.
    Returns true if transfer is possible, otherwise false (e.g. missing
    config). */
type record Tgc
{
	record of record {
		XSD.Token id optional,
		record {
			Gauge32_1 cpuLoad optional,
			Gauge32_1 memoryUsage optional,
			Gauge32_1 memoryUtilization optional
		} cp optional
	} blade_list,
	record {
		record of record {
			XSD.Token id optional,
			BladesType_1 blades optional
		} bladePair_list,
		record {
			RtoInitialType_3 rtoInitial optional,
			RtoMinType_4 rtoMin optional,
			RtoMaxType_5 rtoMax optional,
			RtoAlphaType_6 rtoAlpha optional,
			RtoBetaType_7 rtoBeta optional,
			AssociationMaxRetransType_8 associationMaxRetrans optional,
			MaxInitRetransType_9 maxInitRetrans optional,
			MaxShutdownRetransType_10 maxShutdownRetrans optional,
			MtuType_11 mtu optional,
			ValCookieLifeType_12 valCookieLife optional
		} sctpParameters optional
	} system_ optional,
	record {
		record of record {
			NameType_143 name optional,
			InetAddressIPv4 subnetAddress optional,
			MaskLengthType_144 maskLength optional,
			SubnetSegmentType_145 subnetSegment optional
		} h248Route_list
	} network optional,
	record {
		GlobalTrafficThroughputType_13 globalTrafficThroughput optional,
		MlgDisplayString gcId optional,
		InetAddressIPv4 globalNodeAddress optional,
		GlobalNodeUdpPortType_14 globalNodeUdpPort optional,
		XSD.Boolean applyParamSetChanges optional,
		XSD.Boolean autoApplyParamSetChanges optional,
		record of record {
			MlgDisplayString name optional,
			record of record {
				CodeType_15 code optional,
				MlgDisplayString name optional
			} announcement_list
		} announcementSet_list,
		record of record {
			NameType_109 name optional,
			XSD.Boolean sourceAddressFiltering optional,
			XSD.Boolean sourcePortFiltering optional,
			XSD.Boolean rtpSpecificBehaviour optional,
			XSD.Boolean policing optional,
			MlgUnsigned32 sustDataRate optional,
			DscpType_110 dscp optional,
			MlgUnsigned32 perCallBwRes optional,
			MlgUnsigned32 linkLayerOverhead optional,
			InterfaceGuardTimerType_111 interfaceGuardTimer optional
		} bgwInterfaceParameterSet_list,
		record {
			InetAddressIPv4 localAddress1 optional,
			InetAddressIPv4 localAddress2 optional,
			MlgOpState opState optional,
			ObjectRef bladePair optional
		} defaultPointAssociation optional,
		record of record {
			NameType_16 name optional,
			MapType_17 map_ optional,
			StartTimerType_18 startTimer optional,
			ShortTimerType_19 shortTimer optional,
			LongTimerType_20 longTimer optional,
			DurationTimerType_21 durationTimer optional,
			MlgUnsigned32 memoryUsage optional,
			MlgCounter32 dmMgDoesNotHaveADigitMap520 optional
		} digitMap_list,
		record of record {
			NameType_22 name optional,
			MgExecTimeType_23 mgExecTime optional,
			MgcExecTimeType_24 mgcExecTime optional,
			MgProvRespTimeType_25 mgProvRespTime optional,
			MgcProvRespTimeType_26 mgcProvRespTime optional,
			MgOrigPendLimitType_27 mgOrigPendLimit optional,
			MgcOrigPendLimitType_28 mgcOrigPendLimit optional,
			RequestRetriesType_29 requestRetries optional,
			LongRequestTimerType_30 longRequestTimer optional,
			LongRequestRetriesType_31 longRequestRetries optional,
			H248LongTimerType_32 h248LongTimer optional,
			FactorFType_33 factorF optional,
			IncrementIType_34 incrementI optional,
			XSD.Boolean threewayHandshake optional
		} h248Parameters_list,
		record of record {
			NameType_35 name optional,
			MlgUnsigned32 emergencyCallReservation optional,
			MlgUnsigned32 totalTrafficLimit optional
		} callCountingParameters_list,
		record of record {
			NameType_36 name optional,
			record {
				NameType_37 name optional,
				T95TimerType_38 t95Timer optional
			} ericssonWindow optional,
			record {
				NameType_39 name optional,
				XSD.Float targetOverloadRate optional,
				XSD.Float maxLeakAmount optional,
				XSD.Float minLeakAmount optional,
				XSD.Float adjConstant optional,
				XSD.Float coefficient optional,
				MaxAdjustmentType_40 maxAdjustment optional,
				T1Type_41 t1 optional,
				MlgUnsigned16 splash optional,
				T2Type_42 t2 optional,
				XSD.Float initialLeakAmount optional,
				Pm15Type_43 pm15 optional,
				Pm14Type_44 pm14 optional,
				Pm13Type_45 pm13 optional,
				Pm12Type_46 pm12 optional,
				Pm11Type_47 pm11 optional,
				Pm10Type_48 pm10 optional,
				Pm9Type_49 pm9 optional,
				Pm8Type_50 pm8 optional,
				Pm7Type_51 pm7 optional,
				Pm6Type_52 pm6 optional,
				Pm5Type_53 pm5 optional,
				Pm4Type_54 pm4 optional,
				Pm3Type_55 pm3 optional,
				Pm2Type_56 pm2 optional,
				Pm1Type_57 pm1 optional,
				Pm0Type_58 pm0 optional,
				MlgUnsigned16 maxPendingCycles optional,
				InitialBucketFillType_59 initialBucketFill optional,
				XSD.Boolean activateStreamFairness optional,
				XSD.Boolean controlPOTSOrig optional,
				XSD.Boolean controlISDNOrig optional,
				PotsOrigWeightType_60 potsOrigWeight optional,
				PotsTermWeightType_61 potsTermWeight optional,
				IsdnOrigWeightType_62 isdnOrigWeight optional,
				IsdnTermWeightType_63 isdnTermWeight optional
			} leakyBucket optional
		} overloadControlParameters_list,
		record of record {
			TypeType_64 type_ optional,
			MlgDisplayString name optional,
			TypeNumType_65 typeNum optional
		} payloadMapping_list,
		record of record {
			IdType_66 id optional,
			InetAddressIPv4 localAddress1 optional,
			InetAddressIPv4 localAddress2 optional,
			OpStateType_67 opState optional,
			ObjectRef bladePair optional,
			record {
				IdType_68 id optional,
				MlgCounter32 intraDomCallAttempts optional,
				MlgCounter32 failedIntraDomainCallAttempts optional,
				MlgCounter32 congIntraDomainCallAttempts optional,
				MlgCounter32 interDomainCallAttempts optional,
				MlgCounter32 failedInterDomainCallAttempts optional,
				MlgCounter32 congInterDomainCallAttempts optional,
				MlgCounter32 payloadSizeMismatch optional,
				MlgCounter32 lawConversionMismatch optional,
				MlgCounter32 interNetworkCallAttempts optional,
				XSD.Integer failedInterNetworkCallAttempts optional,
				MlgCounter32 congInterNetworkCallAttempts optional,
				MlgCounter32 intraMgEstablishPathAttempt optional,
				MlgCounter32 failedIntraMgEstablishPathAttempt optional,
				MlgCounter32 interMgEstablishPathAttempt optional,
				MlgCounter32 failedInterMgEstablishPathAttempt optional,
				MlgCounter32 establishPathAttempt optional,
				MlgCounter32 failedEstablishPathAttempt optional,
				MlgCounter32 protocolErrorUnspecified optional,
				MlgCounter32 internalError optional,
				MlgCounter32 bandwidthInMGNotAvailable optional,
				MlgCounter32 sessionDoesNotMatch optional,
				MlgCounter32 switchDeviceNotConfigured optional,
				MlgCounter32 switchDeviceChannelNotAvailable optional,
				MlgCounter32 incompatibleCellFillValues optional,
				MlgCounter32 temporaryBusy optional,
				MlgCounter32 illegalStringFormat optional,
				MlgCounter32 portAlreadySeized optional,
				MlgCounter32 portDoesNotExist optional,
				MlgCounter32 deviceHasSemiPermanentConnection optional,
				MlgCounter32 portReconfigurationInProgress optional,
				MlgCounter32 messageRejectedOverloadInML optional,
				MlgCounter32 modificationInPathNotAllowed optional,
				MlgCounter32 toneNotAvailable optional,
				MlgCounter32 pathTypeResourceNotAvailable optional,
				MlgCounter32 leasedLinePathNotAllowed optional,
				MlgCounter32 messageRejectedOverloadInMG optional,
				MlgCounter32 mgNotAvailable optional,
				MlgCounter32 networkNotAvailable optional,
				MlgCounter32 temporaryHardwareFailure optional,
				MlgCounter32 override_ optional,
				MlgCounter32 deviceDoesNotMatch optional,
				MlgCounter32 lawConversionNotPossible optional,
				MlgCounter32 echoCancellationNotPossible optional,
				MlgCounter32 dtmfDigitReceptionNotAvailable optional,
				MlgCounter32 dtmfDigitSendingNotAvailable optional,
				MlgCounter32 invalidOrInsufficientBearerInformation optional,
				MlgCounter32 invalidConnectionAddress optional,
				MlgCounter32 transportProtocolNotSupported optional,
				MlgCounter32 mediaTypeNotSupported optional,
				MlgCounter32 payloadTypeParamClockRateNotSupported optional,
				MlgCounter32 payloadTypeParamT38FaxVersionNotSupported optional,
				MlgCounter32 payloadTypeParamT38FaxMaxBitRateNotSupported optional,
				MlgCounter32 payloadTypeParamT38FaxDataRateMgmtNotSupported optional,
				MlgCounter32 payloadTypeParamT38FaxMaxBufferSizeNotSupported optional,
				MlgCounter32 payloadTypeParamT38FaxMaxDatagramNotSupported optional,
				MlgCounter32 payloadTypeParamT38UdpECNotSupported optional,
				MlgCounter32 resourceNotAvailable optional,
				MlgCounter32 overloadInAXE optional,
				MlgCounter32 mlPortReferenceNotDefined optional,
				MlgCounter32 portReferenceDoesNotMatch optional,
				MlgCounter32 axePortReferenceNotDefined optional,
				MlgCounter32 callCollisionInAG optional,
				MlgCounter32 portNotAvailable optional,
				MlgCounter32 mgNotDefined optional,
				MlgCounter32 bearerNegotiationOngoing optional,
				MlgCounter32 payloadTypeNotSupported optional,
				MlgCounter32 mediaResourceRequestFailed optional,
				MlgCounter32 transmissionFailed optional,
				MlgCounter32 portNotAvailableOrDisabled optional,
				MlgCounter32 noStatisticsAvailable optional,
				MlgCounter32 rejectedByCallRateLimiter optional,
				MlgCounter32 rejectedByCallCounting optional,
				MlgCounter32 unexpectedOnHook optional,
				MlgCounter32 unexpectedLineState optional,
				MlgCounter32 gwIfNotDefined optional,
				MlgCounter32 gwIfNotAvailable optional,
				MlgCounter32 noIfMatchingAddr optional,
				MlgCounter32 noIfMatchingCpri optional,
				MlgCounter32 rejectedByH24811 optional,
				MlgCounter32 rejectedDueToHangingCtxt optional
			} callHandler optional
		} pointAssociation_list,
		record of record {
			MlgDisplayString name optional,
			record of record {
				NameType_69 name optional,
				H248TonePackageType_70 h248TonePackage optional
			} tone_list
		} toneSet_list,
		record of record {
			NameType_73 name optional,
			PollTimerType_74 pollTimer optional,
			PollMessageType_75 pollMessage optional,
			PollCountType_76 pollCount optional,
			LatencyType_77 latency optional
		} udpInactivityParameters_list,
		record of record {
			NameType_71 name optional,
			BaseTypeType_72 baseType optional
		} h248Profile_list,
		record of record {
			NameType_127 name optional,
			ObjectRef toneSetRef optional,
			ObjectRef announcementSetRef optional,
			FskSendingPhysType_128 fskSendingPhys optional,
			DtmfSendingPhysType_129 dtmfSendingPhys optional,
			DtmfReceivingPhysType_130 dtmfReceivingPhys optional,
			FskSendingEphType_131 fskSendingEph optional,
			DtmfSendingEphType_132 dtmfSendingEph optional,
			DtmfReceivingEphType_133 dtmfReceivingEph optional,
			CapCallFinishedType_134 capCallFinished optional,
			CapLineInfoType_135 capLineInfo optional,
			ToneDirPhysType_136 toneDirPhys optional,
			ToneDirEphType_137 toneDirEph optional,
			DiffServType_138 diffServ optional,
			GateManagementType_139 gateManagement optional,
			LinkGuardTimerType_140 linkGuardTimer optional,
			StatRequestType_141 statRequest optional
		} h248CapabilitySet_list,
		record of record {
			NameType_78 name optional,
			WindowSizeType_79 windowSize optional
		} massCallReleaseRegulationParameters_list,
		record {
			GrIndexType_80 grIndex optional,
			InetAddressIPv4 grMateIPAddress optional,
			GrMatePortType_81 grMatePort optional,
			XSD.Boolean grGlobalSwitchover optional,
			XSD.Boolean grGlobalSwitchback optional,
			GrGlobalRegistrationCapabilityType_82 grGlobalRegistrationCapability optional,
			XSD.Boolean grMBP optional,
			XSD.Boolean grSwitchoverAXEFailure optional,
			GrAXEDeadIntervalType_83 grAXEDeadInterval optional,
			GrAXEPeriodicDisturbanceType_84 grAXEPeriodicDisturbance optional,
			GrAXERestartNumType_85 grAXERestartNum optional,
			MlgCounter32 grRegPrimaryAGWNum optional,
			MlgCounter32 grRegRedundantAGWNum optional,
			GrRedundancySchemeType_86 grRedundancyScheme optional,
			GrAASStatusType_87 grAASStatus optional
		} geographicalRedundancyParameters optional,
		record of record {
			TypeType_121 type_ optional,
			XSD.Boolean silSupp optional,
			XSD.Boolean dtmfRelay optional,
			XSD.Boolean t38 optional,
			XSD.Boolean autoSwitch optional,
			ClearChannelType_122 clearChannel optional,
			record of record {
				CodecIdType_118 codecId optional,
				OrderType_119 order optional,
				PTimeType_120 pTime optional
			} codec_list
		} perRoutePCS_list,
		record of record {
			MlgDisplayString name optional,
			MlgUnsigned32 memoryUsage optional,
			MlgCounter32 dmNumCounter1 optional,
			MlgCounter32 dmNumCounter2 optional,
			MlgCounter32 dmNumCounter3 optional,
			MlgCounter32 dmNumCounter4 optional,
			MlgCounter32 dmNumCounter5 optional,
			MlgCounter32 dmNumCounter6 optional,
			MlgCounter32 dmNumCounter7 optional,
			MlgCounter32 dmNumCounter8 optional,
			MlgCounter32 dmNumCounter9 optional,
			MlgCounter32 dmNumCounter10 optional,
			MlgCounter32 dmNumCounter11 optional,
			MlgCounter32 dmNumCounter12 optional,
			MlgCounter32 dmNumCounter13 optional,
			MlgCounter32 dmNumCounter14 optional,
			MlgCounter32 dmNumCounter15 optional,
			MlgCounter32 dmNumCounter16 optional,
			MlgCounter32 dmNumCounter17 optional,
			MlgCounter32 dmNumCounter18 optional,
			MlgCounter32 dmNumCounter19 optional,
			MlgCounter32 dmNumCounter20 optional,
			MlgCounter32 dmNumCounter21 optional,
			MlgCounter32 dmNumCounter22 optional,
			MlgCounter32 dmNumCounter23 optional,
			MlgCounter32 dmNumCounter24 optional,
			MlgCounter32 dmNumCounter25 optional,
			MlgCounter32 dmNumCounter26 optional,
			MlgCounter32 dmNumCounter27 optional,
			MlgCounter32 dmNumCounter28 optional,
			MlgCounter32 dmNumCounter29 optional,
			MlgCounter32 dmNumCounter30 optional,
			MlgCounter32 dmNumCounter31 optional,
			MlgCounter32 dmNumCounter32 optional,
			MlgCounter32 dmNumCounter33 optional,
			MlgCounter32 dmNumCounter34 optional,
			MlgCounter32 dmNumCounter35 optional,
			MlgCounter32 dmNumCounter36 optional,
			MlgCounter32 dmNumCounter37 optional,
			MlgCounter32 dmNumCounter38 optional,
			MlgCounter32 dmNumCounter39 optional,
			MlgCounter32 dmNumCounter40 optional,
			MlgCounter32 dmNumCounter41 optional,
			MlgCounter32 dmNumCounter42 optional,
			MlgCounter32 dmNumCounter43 optional,
			MlgCounter32 dmNumCounter44 optional,
			MlgCounter32 dmNumCounter45 optional,
			MlgCounter32 dmNumCounter46 optional,
			MlgCounter32 dmNumCounter47 optional,
			MlgCounter32 dmNumCounter48 optional,
			MlgCounter32 dmNumCounter49 optional,
			MlgCounter32 dmNumCounter50 optional,
			MlgCounter32 dmNumCounter51 optional,
			MlgCounter32 dmNumCounter52 optional,
			MlgCounter32 dmNumCounter53 optional,
			MlgCounter32 dmNumCounter54 optional,
			MlgCounter32 dmNumCounter55 optional,
			MlgCounter32 dmNumCounter56 optional,
			MlgCounter32 dmNumCounter57 optional,
			MlgCounter32 dmNumCounter58 optional,
			MlgCounter32 dmNumCounter59 optional,
			MlgCounter32 dmNumCounter60 optional,
			MlgCounter32 dmNumCounter61 optional,
			MlgCounter32 dmNumCounter62 optional,
			MlgCounter32 dmNumCounter63 optional,
			record of record {
				MlgDisplayString name optional
			} dMSDigitMap_list
		} digitMapSet_list,
		record of record {
			MlgUnsigned32 number optional,
			MlgDisplayString digitMap optional
		} digitMapMapping_list,
		record of record {
			IdType_123 id optional,
			MlgDisplayString bladePair optional,
			MaxAvgOccupancyType_124 maxAvgOccupancy optional,
			RoMeasIFixedType_125 roMeasIFixed optional,
			AMeasIFixedType_126 aMeasIFixed optional
		} loadDistribution_list,
		record of record {
			KeyType_142 key optional,
			XSD.Boolean activateH24811 optional,
			XSD.Boolean sendH24811Statistics optional
		} nodeLevelH24811Params_list,
		record of record {
			MlgDisplayString name optional,
			MlgUnsigned32 gwId optional,
			ObjectRef h248ProfileRef optional,
			ObjectRef digitMapRef optional,
			MlgDisplayString digitMapSet optional,
			MlgUnsigned32 digitMapsMemoryUsage optional,
			ObjectRef callCountingParametersRef optional,
			TypeType_88 type_ optional,
			MlgOpState serviceChangeState optional,
			ObjectRef bladePair optional,
			H248MidFormatType_89 h248MidFormat optional,
			InetAddressIPv4 addr optional,
			MlgUnsigned16 port_ optional,
			CallCountingStateType_90 callCountingState optional,
			CallRateLimiterStateType_91 callRateLimiterState optional,
			MlgUnsigned16 callRateLimit optional,
			CcAlarmThresholdType_92 ccAlarmThreshold optional,
			CcAlarmWindowCountType_93 ccAlarmWindowCount optional,
			CrlAlarmThresholdType_94 crlAlarmThreshold optional,
			CrlAlarmWindowCountType_95 crlAlarmWindowCount optional,
			MassCallReleaseRegulationStateType_96 massCallReleaseRegulationState optional,
			ObjectRef massCallReleaseRegulationParametersRef optional,
			HangtermTimerType_97 hangtermTimer optional,
			MlgCounter32 intraMgCallAttempts optional,
			MlgCounter32 failedIntraMgCallAttempts optional,
			MlgCounter32 congIntraMgCallAttempts optional,
			MlgCounter32 origInterMgCallAttempts optional,
			MlgCounter32 failedOrigInterMgCallAttempts optional,
			MlgCounter32 congOrigInterMgCallAttempts optional,
			MlgCounter32 termInterMgCallAttempts optional,
			MlgCounter32 failedTermInterMgCallAttempts optional,
			MlgCounter32 congTermInterMgCallAttempts optional,
			MlgCounter32 origInterDomCallAttempts optional,
			MlgCounter32 failedOrigInterDomCallAttempts optional,
			MlgCounter32 congOrigInterDomCallAttempts optional,
			MlgCounter32 termInterDomCallAttempts optional,
			MlgCounter32 failedTermInterDomCallAttempts optional,
			MlgCounter32 congTermInterDomCallAttempts optional,
			MlgCounter32 interNetwCallAttempts optional,
			MlgCounter32 failedInterNetwCallAttempts optional,
			MlgCounter32 congInterNetwCallAttempts optional,
			MlgCounter32 callRejOverloadProtectionNormal optional,
			MlgCounter32 callRejOverloadProtectionPriority optional,
			MlgCounter32 callAttempts optional,
			Gauge32_1 callsInProgress optional,
			MlgCounter32 priorityCallRejCallCounting optional,
			MlgCounter32 nonPriorityCallRejCallCounting optional,
			MlgCounter32 unknownContext optional,
			Gauge32_1 gwAvgNcip optional,
			Gauge32_1 gwMaxNcip optional,
			Gauge32_1 mcrAvgQ optional,
			Gauge32_1 mcrMaxQ optional,
			MlgCounter32 seizePotsOrigAttempts optional,
			MlgCounter32 failedSeizePotsOrigAttempts optional,
			MlgCounter32 seizePotsTermAttempts optional,
			MlgCounter32 failedSeizePotsTermAttempts optional,
			MlgCounter32 seizeISDNPortAttempts optional,
			MlgCounter32 failedSeizeISDNPortAttempts optional,
			MlgCounter32 seizeDeviceAttempts optional,
			MlgCounter32 failedSeizeDeviceAttempts optional,
			MlgCounter32 seizeBearerDeviceAttempts optional,
			MlgCounter32 failedSeizeBearerDeviceAttempts optional,
			XSD.Boolean grSwitchover optional,
			GrAllocationType_98 grAllocation optional,
			GrRegistrationCapabilityType_99 grRegistrationCapability optional,
			XSD.Boolean grForceToPeer optional,
			GrResidencyStatusType_100 grResidencyStatus optional,
			XSD.Boolean orderRootAudit optional,
			MlgCounter32 megacoBadRequest400 optional,
			MlgCounter32 megacoProtocolError401 optional,
			MlgCounter32 megacoUnauthorized402 optional,
			MlgCounter32 megacoSyntaxErrorInTransaction403 optional,
			MlgCounter32 megacoVersionNotSupported406 optional,
			MlgCounter32 megacoIncorrectIdentifier410 optional,
			MlgCounter32 megacoUnknownContextId411 optional,
			MlgCounter32 megacoNoContextIdAvailable412 optional,
			MlgCounter32 megacoNumOfTransExceedsMax413 optional,
			MlgCounter32 megacoUnknownActionOrIllegalCombinationOfActions421 optional,
			MlgCounter32 megacoSyntaxErrorInAction422 optional,
			MlgCounter32 megacoUnknownTerminationId430 optional,
			MlgCounter32 megacoNoTerminationIdMatchedAWildcard431 optional,
			MlgCounter32 megacoOutOfTerminationIdsOrNoTerminationIdAvailable432 optional,
			MlgCounter32 megacoTerminationIdAlreadyInContext433 optional,
			MlgCounter32 megacoMaxNumberOfTerminationsInContextExceeded434 optional,
			MlgCounter32 megacoTerminationsIdNotInSpecifiedContext435 optional,
			MlgCounter32 megacoUnsupportedOrUnknownPackage440 optional,
			MlgCounter32 megacoMissingRemoteOrLocalDescriptor441 optional,
			MlgCounter32 megacoSyntaxErrorInCommand442 optional,
			MlgCounter32 megacoUnsupportedOrUnknownCommand443 optional,
			MlgCounter32 megacoUnsupportedOrUnknownDescriptor444 optional,
			MlgCounter32 megacoUnsupportedOrUnknownProperty445 optional,
			MlgCounter32 megacoUnsupportedOrUnknownParameter446 optional,
			MlgCounter32 megacoDescriptorNotLegalInThisCommand447 optional,
			MlgCounter32 megacoDescriptorAppearsTwiceInThisCommand448 optional,
			MlgCounter32 megacoUnsupOrUnknownParamOrPropValue449 optional,
			MlgCounter32 megacoNoSuchPropertyInThisPackage450 optional,
			MlgCounter32 megacoNoSuchEventInThisPackage451 optional,
			MlgCounter32 megacoNoSuchSignalInThisPackage452 optional,
			MlgCounter32 megacoNoSuchStatisticInThisPackage453 optional,
			MlgCounter32 megacoNoSuchParameterInThisPackage454 optional,
			MlgCounter32 megacoPropertyIllegalInThisDescriptor455 optional,
			MlgCounter32 megacoPropertyAppearsTwiceInThisDescriptor456 optional,
			MlgCounter32 megacoMissingParameterInSignalOrEvent457 optional,
			MlgCounter32 megacoUnexpectedEventOrRequestId458 optional,
			MlgCounter32 megacoUnableToSetStatisticOnStream460 optional,
			MlgCounter32 megacoImpliedAddForMultiplexFailure471 optional,
			MlgCounter32 megacoInternalGatewayError500 optional,
			MlgCounter32 megacoNotImplemented501 optional,
			MlgCounter32 megacoNotReady502 optional,
			MlgCounter32 megacoServiceUnavailable503 optional,
			MlgCounter32 megacoCommandReceivedFromUnauthorizedEntity504 optional,
			MlgCounter32 megacoTransactionReqReceivedBeforeServicechangeReply505 optional,
			MlgCounter32 megacoNumberOfTransactionpendingExceeded506 optional,
			MlgCounter32 megacoInsufficientResources510 optional,
			MlgCounter32 megacoMgUnequippedToDetectRequestedEvent512 optional,
			MlgCounter32 megacoMgUnequippedToGenerateRequestedSignals513 optional,
			MlgCounter32 megacoMgCannotSendTheSpecifiedAnnouncement514 optional,
			MlgCounter32 megacoUnsupportedMediaType515 optional,
			MlgCounter32 megacoUnsupportedOrInvalidMode517 optional,
			MlgCounter32 megacoEventBufferFull518 optional,
			MlgCounter32 megacoOutOfSpaceToStoreDigitMap519 optional,
			MlgCounter32 megacoMgDoesNotHaveADigitMap520 optional,
			MlgCounter32 megacoTerminationIsServiceChanging521 optional,
			MlgCounter32 megacoUnsupportedFuncReqInTopologyTriple522 optional,
			MlgCounter32 megacoInsufficientBandwidth526 optional,
			MlgCounter32 megacoInternalHardwareFailure529 optional,
			MlgCounter32 megacoTemporaryNetworkFailure530 optional,
			MlgCounter32 megacoPermanentNetworkFailure531 optional,
			MlgCounter32 megacoAuditPropStatEventOrSigDoesNotExist532 optional,
			MlgCounter32 megacoResponseExceedsMaximumTransportPduSize533 optional,
			MlgCounter32 megacoIllegalWriteOfReadOnlyProperty534 optional,
			MlgCounter32 megacoUnexpectedInitialHookState540 optional,
			MlgCounter32 megacoCommandNotAllowedOnThisTermination542 optional,
			MlgCounter32 megacoDoesNotExist581 optional,
			MlgCounter32 megacoSentAddMsg optional,
			MlgCounter32 megacoSentModifyMsg optional,
			MlgCounter32 megacoSentSubtractMsg optional,
			MlgCounter32 megacoSentMoveMsg optional,
			MlgCounter32 megacoSentAuditValueMsg optional,
			MlgCounter32 megacoMedGwyGatewayNumErrors optional,
			MlgCounter32 megacoMedGwyGatewayNumTimerRecovery optional,
			EphAuditLinesType_101 ephAuditLines optional,
			ObjectRef h248CapabilitySetRef optional,
			NrCapacityWeightType_102 nrCapacityWeight optional,
			MlgCounter32 seizeISDNPortOrigAttempts optional,
			MlgCounter32 failedSeizeISDNPortOrigAttempts optional,
			MlgCounter32 seizeISDNPortTermAttempts optional,
			MlgCounter32 failedSeizeISDNPortTermAttempts optional,
			MlgCounter32 seizeISDNPortOrigPriorityAttempts optional,
			MlgCounter32 seizeISDNPortOrigNormalAttempts optional,
			MlgCounter32 failedSeizeISDNPortOrigPriorityAttempts optional,
			MlgCounter32 failedSeizeISDNPortOrigNormalAttempts optional,
			MlgCounter32 seizeISDNPortTermPriorityAttempts optional,
			MlgCounter32 seizeISDNPortTermNormalAttempts optional,
			MlgCounter32 failedSeizeISDNPortTermPriorityAttempts optional,
			MlgCounter32 failedSeizeISDNPortTermNormalAttempts optional,
			MlgCounter32 seizePotsOrigPriorityAttempts optional,
			MlgCounter32 seizePotsOrigNormalAttempts optional,
			MlgCounter32 failedSeizePotsOrigPriorityAttempts optional,
			MlgCounter32 failedSeizePotsOrigNormalAttempts optional,
			MlgCounter32 seizePotsTermPriorityAttempts optional,
			MlgCounter32 seizePotsTermNormalAttempts optional,
			MlgCounter32 failedSeizePotsTermPriorityAttempts optional,
			MlgCounter32 failedSeizePotsTermNormalAttempts optional,
			MlgCounter32 priorityCallAcceptedCallCounting optional,
			MlgCounter32 nonPriorityCallAcceptedCallCounting optional,
			MlgCounter32 callAcceptedOverloadProtectionNormal optional,
			MlgCounter32 callAcceptedOverloadProtectionPriority optional,
			record {
				MlgUnsigned32 id optional,
				ObjectRef h248ParametersRef optional,
				ObjectRef overloadControlParametersRef optional,
				ObjectRef bladePair optional,
				XSD.DateTime timeStamp optional,
				MlgAdmState admState optional,
				MlgOpState opState optional,
				EncodingType_103 encoding optional,
				LocalPortType_104 localPort optional,
				InetAddressIPv4 localAddress1 optional,
				InetAddressIPv4 localAddress2 optional,
				MlgUnsigned16 remotePort optional,
				InetAddressIPv4 remoteAddress1 optional,
				InetAddressIPv4 remoteAddress2 optional,
				SctpHeartBeatIntervalType_105 sctpHeartBeatInterval optional,
				MlgCounter32 sentChunks optional,
				MlgCounter32 rcvdChunks optional,
				MlgCounter32 sentUnordered optional,
				MlgCounter32 rcvdUnordered optional,
				MlgCounter32 rcvdChecksumErrors optional,
				MlgCounter32 retransmittedChunks optional,
				MlgCounter32 sentCtrlChunks optional,
				MlgCounter32 rcvdCtrlChunks optional,
				MlgCounter32 sentFragmented optional,
				MlgCounter32 rcvdReassembled optional,
				MlgCounter32 sentPackets optional,
				MlgCounter32 rcvdPackets optional,
				MlgCounter32 congestionStop optional,
				MlgCounter32 congestionResume optional,
				MlgCounter32 congestionSentDropped optional,
				MlgCounter32 congestionRcvdDropped optional
			} h248SctpLink optional,
			record {
				MlgUnsigned32 id optional,
				ObjectRef h248ParametersRef optional,
				ObjectRef udpInactivityParametersRef optional,
				ObjectRef overloadControlParametersRef optional,
				ObjectRef bladePair optional,
				SubnetSegmentType_106 subnetSegment optional,
				XSD.DateTime timeStamp optional,
				MlgAdmState admState optional,
				MlgOpState opState optional,
				EncodingType_107 encoding optional,
				LocalPortType_108 localPort optional,
				InetAddressIPv4 localAddress optional,
				MlgUnsigned16 remotePort optional,
				InetAddressIPv4 remoteAddress optional
			} h248UdpLink optional,
			record of record {
				MlgUnsigned32 axeSideId optional,
				IdType_112 id optional,
				InterfaceSetType_113 interfaceSet optional,
				InetAddressIPv4 subnetAddress optional,
				SubnetMaskLengthType_114 subnetMaskLength optional,
				ObjectRef interfaceParamSet optional,
				MlgUnsigned32 bwThresholdNormal optional,
				MlgUnsigned32 bwThresholdEmPrio optional,
				MlgUnsigned32 allocatedBandwith optional,
				InterfaceOrientationType_115 interfaceOrientation optional,
				InterfaceOpStateType_116 interfaceOpState optional,
				Gauge32_1 bgwIfAvgCalls optional,
				Gauge32_1 bgwIfMaxCalls optional,
				ConnPointRoutingInfoType_117 connPointRoutingInfo optional
			} bgwInterface_list
		} gateway_list
	} tgcApp optional,
	record {
		KeyType_146 key optional,
		XSD.Boolean adminState optional,
		GranularityType_147 granularity optional,
		MlgDisplayString host optional,
		MlgDisplayString user optional,
		MlgDisplayString password optional,
		MlgDisplayString remoteDir optional,
		XSD.Boolean onDemand optional
	} tispReport optional
}
with {
  variant "element";
  variant (blade_list) "untagged";
  variant (blade_list[-]) "name as 'Blade'";
  variant (blade_list[-].cp) "name as capitalized";
  variant (system_) "name as 'System'";
  variant (system_.bladePair_list) "untagged";
  variant (system_.bladePair_list[-]) "name as 'BladePair'";
  variant (system_.sctpParameters) "name as capitalized";
  variant (system_.sctpParameters.rtoInitial) "defaultForEmpty as '1000'";
  variant (system_.sctpParameters.rtoMin) "defaultForEmpty as '500'";
  variant (system_.sctpParameters.rtoMax) "defaultForEmpty as '10000'";
  variant (system_.sctpParameters.rtoAlpha) "defaultForEmpty as '3'";
  variant (system_.sctpParameters.rtoBeta) "defaultForEmpty as '2'";
  variant (system_.sctpParameters.associationMaxRetrans) "defaultForEmpty as '10'";
  variant (system_.sctpParameters.maxInitRetrans) "defaultForEmpty as '8'";
  variant (system_.sctpParameters.maxShutdownRetrans) "defaultForEmpty as '5'";
  variant (system_.sctpParameters.mtu) "defaultForEmpty as '1428'";
  variant (system_.sctpParameters.valCookieLife) "defaultForEmpty as '400'";
  variant (network) "name as capitalized";
  variant (network.h248Route_list) "untagged";
  variant (network.h248Route_list[-]) "name as 'H248Route'";
  variant (network.h248Route_list[-].maskLength) "defaultForEmpty as '32'";
  variant (tgcApp) "name as capitalized";
  variant (tgcApp.globalTrafficThroughput) "defaultForEmpty as '100'";
  variant (tgcApp.applyParamSetChanges) "defaultForEmpty as 'false'";
  variant (tgcApp.autoApplyParamSetChanges) "defaultForEmpty as 'false'";
  variant (tgcApp.announcementSet_list) "untagged";
  variant (tgcApp.announcementSet_list[-]) "name as 'AnnouncementSet'";
  variant (tgcApp.announcementSet_list[-].announcement_list) "untagged";
  variant (tgcApp.announcementSet_list[-].announcement_list[-]) "name as 'Announcement'";
  variant (tgcApp.bgwInterfaceParameterSet_list) "untagged";
  variant (tgcApp.bgwInterfaceParameterSet_list[-]) "name as 'BgwInterfaceParameterSet'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].sourceAddressFiltering) "defaultForEmpty as 'true'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].sourcePortFiltering) "defaultForEmpty as 'true'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].rtpSpecificBehaviour) "defaultForEmpty as 'true'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].policing) "defaultForEmpty as 'false'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].sustDataRate) "defaultForEmpty as '0'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].dscp) "defaultForEmpty as '00'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].linkLayerOverhead) "defaultForEmpty as '42'";
  variant (tgcApp.bgwInterfaceParameterSet_list[-].interfaceGuardTimer) "defaultForEmpty as '30'";
  variant (tgcApp.defaultPointAssociation) "name as capitalized";
  variant (tgcApp.digitMap_list) "untagged";
  variant (tgcApp.digitMap_list[-]) "name as 'DigitMap'";
  variant (tgcApp.digitMap_list[-].map_) "name as 'map'";
  variant (tgcApp.h248Parameters_list) "untagged";
  variant (tgcApp.h248Parameters_list[-]) "name as 'H248Parameters'";
  variant (tgcApp.h248Parameters_list[-].mgExecTime) "defaultForEmpty as '2000'";
  variant (tgcApp.h248Parameters_list[-].mgcExecTime) "defaultForEmpty as '2000'";
  variant (tgcApp.h248Parameters_list[-].mgProvRespTime) "defaultForEmpty as '3000'";
  variant (tgcApp.h248Parameters_list[-].mgcProvRespTime) "defaultForEmpty as '3000'";
  variant (tgcApp.h248Parameters_list[-].mgOrigPendLimit) "defaultForEmpty as '5'";
  variant (tgcApp.h248Parameters_list[-].mgcOrigPendLimit) "defaultForEmpty as '5'";
  variant (tgcApp.h248Parameters_list[-].requestRetries) "defaultForEmpty as '2'";
  variant (tgcApp.h248Parameters_list[-].longRequestTimer) "defaultForEmpty as '5'";
  variant (tgcApp.h248Parameters_list[-].longRequestRetries) "defaultForEmpty as '1'";
  variant (tgcApp.h248Parameters_list[-].h248LongTimer) "defaultForEmpty as '15000'";
  variant (tgcApp.h248Parameters_list[-].factorF) "defaultForEmpty as '1'";
  variant (tgcApp.h248Parameters_list[-].incrementI) "defaultForEmpty as '0'";
  variant (tgcApp.callCountingParameters_list) "untagged";
  variant (tgcApp.callCountingParameters_list[-]) "name as 'CallCountingParameters'";
  variant (tgcApp.callCountingParameters_list[-].emergencyCallReservation) "defaultForEmpty as '65536'";
  variant (tgcApp.callCountingParameters_list[-].totalTrafficLimit) "defaultForEmpty as '65536'";
  variant (tgcApp.overloadControlParameters_list) "untagged";
  variant (tgcApp.overloadControlParameters_list[-]) "name as 'OverloadControlParameters'";
  variant (tgcApp.overloadControlParameters_list[-].ericssonWindow) "name as capitalized";
  variant (tgcApp.overloadControlParameters_list[-].ericssonWindow.t95Timer) "defaultForEmpty as '500'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket) "name as capitalized";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.targetOverloadRate) "defaultForEmpty as '1.0'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.maxLeakAmount) "defaultForEmpty as '200.0'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.minLeakAmount) "defaultForEmpty as '10.0'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.adjConstant) "defaultForEmpty as '0.20'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.coefficient) "defaultForEmpty as '1.00'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.maxAdjustment) "defaultForEmpty as '5'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.t1) "defaultForEmpty as '2'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.t2) "defaultForEmpty as '2'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.initialLeakAmount) "defaultForEmpty as '100.0'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm15) "defaultForEmpty as '95'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm14) "defaultForEmpty as '90'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm13) "defaultForEmpty as '85'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm12) "defaultForEmpty as '80'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm11) "defaultForEmpty as '75'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm10) "defaultForEmpty as '70'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm9) "defaultForEmpty as '65'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm8) "defaultForEmpty as '60'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm7) "defaultForEmpty as '55'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm6) "defaultForEmpty as '50'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm5) "defaultForEmpty as '45'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm4) "defaultForEmpty as '40'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm3) "defaultForEmpty as '35'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm2) "defaultForEmpty as '30'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm1) "defaultForEmpty as '25'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.pm0) "defaultForEmpty as '20'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.maxPendingCycles) "defaultForEmpty as '40'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.initialBucketFill) "defaultForEmpty as '0'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.activateStreamFairness) "defaultForEmpty as 'false'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.controlPOTSOrig) "defaultForEmpty as 'false'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.controlISDNOrig) "defaultForEmpty as 'true'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.potsOrigWeight) "defaultForEmpty as '100'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.potsTermWeight) "defaultForEmpty as '100'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.isdnOrigWeight) "defaultForEmpty as '100'";
  variant (tgcApp.overloadControlParameters_list[-].leakyBucket.isdnTermWeight) "defaultForEmpty as '100'";
  variant (tgcApp.payloadMapping_list) "untagged";
  variant (tgcApp.payloadMapping_list[-]) "name as 'PayloadMapping'";
  variant (tgcApp.payloadMapping_list[-].type_) "name as 'type'";
  variant (tgcApp.pointAssociation_list) "untagged";
  variant (tgcApp.pointAssociation_list[-]) "name as 'PointAssociation'";
  variant (tgcApp.pointAssociation_list[-].callHandler) "name as capitalized";
  variant (tgcApp.pointAssociation_list[-].callHandler.override_) "name as 'override'";
  variant (tgcApp.toneSet_list) "untagged";
  variant (tgcApp.toneSet_list[-]) "name as 'ToneSet'";
  variant (tgcApp.toneSet_list[-].tone_list) "untagged";
  variant (tgcApp.toneSet_list[-].tone_list[-]) "name as 'Tone'";
  variant (tgcApp.udpInactivityParameters_list) "untagged";
  variant (tgcApp.udpInactivityParameters_list[-]) "name as 'UdpInactivityParameters'";
  variant (tgcApp.udpInactivityParameters_list[-].pollTimer) "defaultForEmpty as '20000'";
  variant (tgcApp.udpInactivityParameters_list[-].pollCount) "defaultForEmpty as '2'";
  variant (tgcApp.h248Profile_list) "untagged";
  variant (tgcApp.h248Profile_list[-]) "name as 'H248Profile'";
  variant (tgcApp.h248CapabilitySet_list) "untagged";
  variant (tgcApp.h248CapabilitySet_list[-]) "name as 'H248CapabilitySet'";
  variant (tgcApp.h248CapabilitySet_list[-].toneDirPhys) "defaultForEmpty as 'no'";
  variant (tgcApp.h248CapabilitySet_list[-].toneDirEph) "defaultForEmpty as 'no'";
  variant (tgcApp.h248CapabilitySet_list[-].linkGuardTimer) "defaultForEmpty as '0'";
  variant (tgcApp.massCallReleaseRegulationParameters_list) "untagged";
  variant (tgcApp.massCallReleaseRegulationParameters_list[-]) "name as 'MassCallReleaseRegulationParameters'";
  variant (tgcApp.massCallReleaseRegulationParameters_list[-].windowSize) "defaultForEmpty as '100'";
  variant (tgcApp.geographicalRedundancyParameters) "name as capitalized";
  variant (tgcApp.geographicalRedundancyParameters.grGlobalSwitchover) "defaultForEmpty as 'false'";
  variant (tgcApp.geographicalRedundancyParameters.grGlobalSwitchback) "defaultForEmpty as 'false'";
  variant (tgcApp.geographicalRedundancyParameters.grGlobalRegistrationCapability) "defaultForEmpty as 'no'";
  variant (tgcApp.geographicalRedundancyParameters.grMBP) "defaultForEmpty as 'false'";
  variant (tgcApp.geographicalRedundancyParameters.grSwitchoverAXEFailure) "defaultForEmpty as 'false'";
  variant (tgcApp.geographicalRedundancyParameters.grAXEDeadInterval) "defaultForEmpty as '180'";
  variant (tgcApp.geographicalRedundancyParameters.grAXEPeriodicDisturbance) "defaultForEmpty as '240'";
  variant (tgcApp.geographicalRedundancyParameters.grAXERestartNum) "defaultForEmpty as '1'";
  variant (tgcApp.geographicalRedundancyParameters.grRedundancyScheme) "defaultForEmpty as 'none'";
  variant (tgcApp.perRoutePCS_list) "untagged";
  variant (tgcApp.perRoutePCS_list[-]) "name as 'PerRoutePCS'";
  variant (tgcApp.perRoutePCS_list[-].type_) "name as 'type'";
  variant (tgcApp.perRoutePCS_list[-].codec_list) "untagged";
  variant (tgcApp.perRoutePCS_list[-].codec_list[-]) "name as 'Codec'";
  variant (tgcApp.digitMapSet_list) "untagged";
  variant (tgcApp.digitMapSet_list[-]) "name as 'DigitMapSet'";
  variant (tgcApp.digitMapSet_list[-].dMSDigitMap_list) "untagged";
  variant (tgcApp.digitMapSet_list[-].dMSDigitMap_list[-]) "name as 'DMSDigitMap'";
  variant (tgcApp.digitMapMapping_list) "untagged";
  variant (tgcApp.digitMapMapping_list[-]) "name as 'DigitMapMapping'";
  variant (tgcApp.loadDistribution_list) "untagged";
  variant (tgcApp.loadDistribution_list[-]) "name as 'LoadDistribution'";
  variant (tgcApp.nodeLevelH24811Params_list) "untagged";
  variant (tgcApp.nodeLevelH24811Params_list[-]) "name as 'NodeLevelH24811Params'";
  variant (tgcApp.nodeLevelH24811Params_list[-].activateH24811) "defaultForEmpty as 'false'";
  variant (tgcApp.nodeLevelH24811Params_list[-].sendH24811Statistics) "defaultForEmpty as 'false'";
  variant (tgcApp.gateway_list) "untagged";
  variant (tgcApp.gateway_list[-]) "name as 'Gateway'";
  variant (tgcApp.gateway_list[-].type_) "name as 'type'";
  variant (tgcApp.gateway_list[-].port_) "name as 'port'";
  variant (tgcApp.gateway_list[-].hangtermTimer) "defaultForEmpty as '240'";
  variant (tgcApp.gateway_list[-].grSwitchover) "defaultForEmpty as 'false'";
  variant (tgcApp.gateway_list[-].grAllocation) "defaultForEmpty as 'primary'";
  variant (tgcApp.gateway_list[-].grRegistrationCapability) "defaultForEmpty as 'all'";
  variant (tgcApp.gateway_list[-].grForceToPeer) "defaultForEmpty as 'false'";
  variant (tgcApp.gateway_list[-].orderRootAudit) "defaultForEmpty as 'false'";
  variant (tgcApp.gateway_list[-].h248SctpLink) "name as capitalized";
  variant (tgcApp.gateway_list[-].h248SctpLink.sctpHeartBeatInterval) "defaultForEmpty as '5'";
  variant (tgcApp.gateway_list[-].h248UdpLink) "name as capitalized";
  variant (tgcApp.gateway_list[-].bgwInterface_list) "untagged";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-]) "name as 'BgwInterface'";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-].subnetMaskLength) "defaultForEmpty as '0'";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-].bwThresholdNormal) "defaultForEmpty as '4096'";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-].bwThresholdEmPrio) "defaultForEmpty as '5120'";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-].interfaceOrientation) "defaultForEmpty as 'external'";
  variant (tgcApp.gateway_list[-].bgwInterface_list[-].connPointRoutingInfo) "defaultForEmpty as '0'";
  variant (tispReport) "name as capitalized";
};


}
with {
  encode "XML";
  variant "namespace as 'http://www.ericsson.com/is/isco/Tgc/R6A48/R6H01' prefix 'tgc'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
