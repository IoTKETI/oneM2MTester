/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Lovassy, Arpad
*   Raduly, Csaba
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          NoTargetNamespace_PAP.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//
//	Generated from file(s):
//
//	- PAP.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "NoTargetNamespace" */
//
////////////////////////////////////////////////////////////////////////////////


module NoTargetNamespace_PAP {


import from XSD all;


type record Address
{
	XSD.AnySimpleType address_value
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (address_value) "name as 'address-value'";
  variant (address_value) "attribute";
};


type record Badmessage_response
{
	XSD.AnySimpleType bad_message_fragment optional,
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional
}
with {
  variant "name as 'badmessage-response'";
  variant "element";
  variant (bad_message_fragment) "name as 'bad-message-fragment'";
  variant (bad_message_fragment) "attribute";
  variant (code) "attribute";
  variant (desc) "attribute";
};


type record Cancel_message
{
	XSD.AnySimpleType push_id,
	record of Address address_list
}
with {
  variant "name as 'cancel-message'";
  variant "element";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (address_list) "untagged";
};


type record Cancel_response
{
	XSD.AnySimpleType push_id,
	record length(1 .. infinity) of Cancel_result cancel_result_list
}
with {
  variant "name as 'cancel-response'";
  variant "element";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (cancel_result_list) "untagged";
};


type record Cancel_result
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional,
	record of Address address_list
}
with {
  variant "name as 'cancel-result'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
  variant (address_list) "untagged";
};


type record Ccq_message
{
	XSD.AnySimpleType app_id optional,
	XSD.AnySimpleType query_id optional,
	Address address_
}
with {
  variant "name as 'ccq-message'";
  variant "element";
  variant (app_id) "name as 'app-id'";
  variant (app_id) "attribute";
  variant (query_id) "name as 'query-id'";
  variant (query_id) "attribute";
  variant (address_) "name as 'address'";
};


type record Ccq_response
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional,
	XSD.AnySimpleType query_id optional,
	Address address_
}
with {
  variant "name as 'ccq-response'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
  variant (query_id) "name as 'query-id'";
  variant (query_id) "attribute";
  variant (address_) "name as 'address'";
};


type record Pap
{
	XSD.AnySimpleType product_name optional,
	union {
		Push_message push_message,
		Push_response push_response,
		Cancel_message cancel_message,
		Cancel_response cancel_response,
		Resultnotification_message resultnotification_message,
		Resultnotification_response resultnotification_response,
		Statusquery_message statusquery_message,
		Statusquery_response statusquery_response,
		Ccq_message ccq_message,
		Ccq_response ccq_response,
		Badmessage_response badmessage_response
	} choice
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (product_name) "name as 'product-name'";
  variant (product_name) "attribute";
  variant (choice) "untagged";
  variant (choice.push_message) "name as 'push-message'";
  variant (choice.push_response) "name as 'push-response'";
  variant (choice.cancel_message) "name as 'cancel-message'";
  variant (choice.cancel_response) "name as 'cancel-response'";
  variant (choice.resultnotification_message) "name as 'resultnotification-message'";
  variant (choice.resultnotification_response) "name as 'resultnotification-response'";
  variant (choice.statusquery_message) "name as 'statusquery-message'";
  variant (choice.statusquery_response) "name as 'statusquery-response'";
  variant (choice.ccq_message) "name as 'ccq-message'";
  variant (choice.ccq_response) "name as 'ccq-response'";
  variant (choice.badmessage_response) "name as 'badmessage-response'";
};


type record Progress_note
{
	XSD.AnySimpleType note optional,
	XSD.AnySimpleType stage,
	XSD.AnySimpleType time optional
}
with {
  variant "name as 'progress-note'";
  variant "element";
  variant (note) "attribute";
  variant (stage) "attribute";
  variant (time) "attribute";
};


type record Push_message
{
	XSD.AnySimpleType deliver_after_timestamp optional,
	XSD.AnySimpleType deliver_before_timestamp optional,
	XSD.AnySimpleType ppg_notify_requested_to optional,
	enumerated {
		true_,
		false_
	} progress_notes_requested optional,
	XSD.AnySimpleType push_id,
	enumerated {
		pending_only,
		all_
	} replace_method optional,
	XSD.AnySimpleType replace_push_id optional,
	XSD.AnySimpleType source_reference optional,
	record length(1 .. infinity) of Address address_list,
	Quality_of_service quality_of_service optional
}
with {
  variant "name as 'push-message'";
  variant "element";
  variant (deliver_after_timestamp) "name as 'deliver-after-timestamp'";
  variant (deliver_after_timestamp) "attribute";
  variant (deliver_before_timestamp) "name as 'deliver-before-timestamp'";
  variant (deliver_before_timestamp) "attribute";
  variant (ppg_notify_requested_to) "name as 'ppg-notify-requested-to'";
  variant (ppg_notify_requested_to) "attribute";
  variant (progress_notes_requested) "text 'false_' as 'false'";
  variant (progress_notes_requested) "text 'true_' as 'true'";
  variant (progress_notes_requested) "name as 'progress-notes-requested'";
  variant (progress_notes_requested) "defaultForEmpty as 'false'";
  variant (progress_notes_requested) "attribute";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (replace_method) "text 'all_' as 'all'";
  variant (replace_method) "text 'pending_only' as 'pending-only'";
  variant (replace_method) "name as 'replace-method'";
  variant (replace_method) "defaultForEmpty as 'all'";
  variant (replace_method) "attribute";
  variant (replace_push_id) "name as 'replace-push-id'";
  variant (replace_push_id) "attribute";
  variant (source_reference) "name as 'source-reference'";
  variant (source_reference) "attribute";
  variant (address_list) "untagged";
  variant (quality_of_service) "name as 'quality-of-service'";
};


type record Push_response
{
	XSD.AnySimpleType push_id,
	XSD.AnySimpleType reply_time optional,
	XSD.AnySimpleType sender_address optional,
	XSD.AnySimpleType sender_name optional,
	record of Progress_note progress_note_list,
	Response_result response_result
}
with {
  variant "name as 'push-response'";
  variant "element";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (reply_time) "name as 'reply-time'";
  variant (reply_time) "attribute";
  variant (sender_address) "name as 'sender-address'";
  variant (sender_address) "attribute";
  variant (sender_name) "name as 'sender-name'";
  variant (sender_name) "attribute";
  variant (progress_note_list) "untagged";
  variant (response_result) "name as 'response-result'";
};


type record Quality_of_service
{
	XSD.AnySimpleType bearer optional,
	enumerated {
		true_,
		false_
	} bearer_required optional,
	enumerated {
		confirmed,
		preferconfirmed,
		unconfirmed,
		notspecified
	} delivery_method optional,
	XSD.AnySimpleType network optional,
	enumerated {
		true_,
		false_
	} network_required optional,
	enumerated {
		high,
		medium,
		low
	} priority optional
}
with {
  variant "name as 'quality-of-service'";
  variant "element";
  variant (bearer) "attribute";
  variant (bearer_required) "text 'false_' as 'false'";
  variant (bearer_required) "text 'true_' as 'true'";
  variant (bearer_required) "name as 'bearer-required'";
  variant (bearer_required) "defaultForEmpty as 'false'";
  variant (bearer_required) "attribute";
  variant (delivery_method) "name as 'delivery-method'";
  variant (delivery_method) "defaultForEmpty as 'notspecified'";
  variant (delivery_method) "attribute";
  variant (network) "attribute";
  variant (network_required) "text 'false_' as 'false'";
  variant (network_required) "text 'true_' as 'true'";
  variant (network_required) "name as 'network-required'";
  variant (network_required) "defaultForEmpty as 'false'";
  variant (network_required) "attribute";
  variant (priority) "defaultForEmpty as 'medium'";
  variant (priority) "attribute";
};


type record Response_result
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional
}
with {
  variant "name as 'response-result'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
};


type record Resultnotification_message
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional,
	XSD.AnySimpleType event_time optional,
	enumerated {
		rejected,
		pending,
		delivered,
		undeliverable,
		expired,
		aborted,
		timeout_,
		cancelled,
		unknown
	} message_state,
	XSD.AnySimpleType push_id,
	XSD.AnySimpleType received_time optional,
	XSD.AnySimpleType sender_address optional,
	XSD.AnySimpleType sender_name optional,
	Address address_,
	Quality_of_service quality_of_service optional
}
with {
  variant "name as 'resultnotification-message'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
  variant (event_time) "name as 'event-time'";
  variant (event_time) "attribute";
  variant (message_state) "text 'timeout_' as 'timeout'";
  variant (message_state) "name as 'message-state'";
  variant (message_state) "attribute";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (received_time) "name as 'received-time'";
  variant (received_time) "attribute";
  variant (sender_address) "name as 'sender-address'";
  variant (sender_address) "attribute";
  variant (sender_name) "name as 'sender-name'";
  variant (sender_name) "attribute";
  variant (address_) "name as 'address'";
  variant (quality_of_service) "name as 'quality-of-service'";
};


type record Resultnotification_response
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional,
	XSD.AnySimpleType push_id,
	Address address_
}
with {
  variant "name as 'resultnotification-response'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (address_) "name as 'address'";
};


type record Statusquery_message
{
	XSD.AnySimpleType push_id,
	record of Address address_list
}
with {
  variant "name as 'statusquery-message'";
  variant "element";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (address_list) "untagged";
};


type record Statusquery_response
{
	XSD.AnySimpleType push_id,
	record length(1 .. infinity) of Statusquery_result statusquery_result_list
}
with {
  variant "name as 'statusquery-response'";
  variant "element";
  variant (push_id) "name as 'push-id'";
  variant (push_id) "attribute";
  variant (statusquery_result_list) "untagged";
};


type record Statusquery_result
{
	XSD.AnySimpleType code,
	XSD.AnySimpleType desc optional,
	XSD.AnySimpleType event_time optional,
	enumerated {
		rejected,
		pending,
		delivered,
		undeliverable,
		expired,
		aborted,
		timeout_,
		cancelled,
		unknown
	} message_state,
	record of Address address_list,
	Quality_of_service quality_of_service optional
}
with {
  variant "name as 'statusquery-result'";
  variant "element";
  variant (code) "attribute";
  variant (desc) "attribute";
  variant (event_time) "name as 'event-time'";
  variant (event_time) "attribute";
  variant (message_state) "text 'timeout_' as 'timeout'";
  variant (message_state) "name as 'message-state'";
  variant (message_state) "attribute";
  variant (address_list) "untagged";
  variant (quality_of_service) "name as 'quality-of-service'";
};


}
with {
  encode "XML";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
