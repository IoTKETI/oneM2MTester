/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_example_org_all.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Mon Oct 12 12:27:05 2014
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- all.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "www.example.org/all" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_example_org_all {


import from XSD all;


type XSD.Token AttrGlobal
with {
  variant "name as uncapitalized";
  variant "attribute";
};


/* All, mandatory */


type record E29a
{
	record of enumerated {
		foo,
		bar,
		ding
	} order,
	XSD.Integer foo,
	XSD.Float bar,
	XSD.String ding
}
with {
  variant "name as uncapitalized";
  variant "useOrder";
};


type record E29aAndAttributes
{
	record of enumerated {
		foo,
		bar,
		ding
	} order,
	AttrGlobal attrGlobal optional,
	XSD.Token attrInGroup1 optional,
	XSD.Token attrInGroup2 optional,
	XSD.Integer attrLocal optional,
	XSD.Integer foo,
	XSD.Float bar,
	XSD.String ding
}
with {
  variant "name as uncapitalized";
  variant "useOrder";
  variant (attrGlobal) "attribute";
  variant (attrInGroup1) "attribute";
  variant (attrInGroup2) "attribute";
  variant (attrLocal) "attribute";
};


/* All, optional */


type record E29bAndAttributes
{
	record of enumerated {
		foo,
		bar,
		ding
	} order,
	AttrGlobal attrGlobal optional,
	XSD.Token attrInGroup1 optional,
	XSD.Token attrInGroup2 optional,
	XSD.Integer attrLocal optional,
	XSD.Integer foo optional,
	XSD.Float bar optional,
	XSD.String ding optional
}
with {
  variant "name as uncapitalized";
  variant "useOrder";
  variant (attrGlobal) "attribute";
  variant (attrInGroup1) "attribute";
  variant (attrInGroup2) "attribute";
  variant (attrLocal) "attribute";
};


/* All, some elements are optional */


type record E29cAndAttributes
{
	record of enumerated {
		foo,
		bar,
		ding
	} order,
	AttrGlobal attrGlobal optional,
	XSD.Token attrInGroup1 optional,
	XSD.Token attrInGroup2 optional,
	XSD.Integer attrLocal optional,
	XSD.Integer foo,
	XSD.Float bar optional,
	XSD.String ding
}
with {
  variant "name as uncapitalized";
  variant "useOrder";
  variant (attrGlobal) "attribute";
  variant (attrInGroup1) "attribute";
  variant (attrInGroup2) "attribute";
  variant (attrLocal) "attribute";
};


type record E29cAndAttributesReferenceOptional
{
	record of enumerated {
		foo,
		bar,
		ding
	} order,
	XSD.String attr optional,
	XSD.Integer foo optional,
	XSD.Float bar optional,
	XSD.String ding optional
}
with {
  variant "name as uncapitalized";
  variant "useOrder";
  variant "element";
  variant (attr) "attribute";
};


}
with {
  encode "XML";
  variant "namespace as 'www.example.org/all' prefix 'this'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
