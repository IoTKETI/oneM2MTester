/*******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator                      
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Szabo, Bence Janos
*
*******************************************************************************/
//
//  File:          www_example_org_defaultforempty_mod1.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Thu Jan 19 13:28:24 2017
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- defaultforempty_mod1.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "www.example.org/defaultforempty/mod1" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_example_org_defaultforempty_mod1 {


import from XSD all;


const XSD.String c_defaultForEmpty_1 := "fix";


const XSD.Integer c_defaultForEmpty_2 := 3;


const XSD.String c_defaultForEmpty_3 := "fixext";


const XSD.Integer c_defaultForEmpty_4 := 4;


type record Complex
{
	XSD.Integer attrfixedInteger (c_defaultForEmpty_2) optional,
	XSD.String myStringFixed (c_defaultForEmpty_1)
}
with {
  variant (attrfixedInteger) "defaultForEmpty as c_defaultForEmpty_2";
  variant (attrfixedInteger) "name as capitalized";
  variant (attrfixedInteger) "attribute";
  variant (myStringFixed) "defaultForEmpty as c_defaultForEmpty_1";
  variant (myStringFixed) "name as capitalized";
};


type record ComplexExt
{
	XSD.Integer attrfixedInteger (c_defaultForEmpty_2) optional,
	XSD.Integer attrfixedIntegerExt (c_defaultForEmpty_4) optional,
	XSD.String myStringFixed (c_defaultForEmpty_1),
	XSD.String myStringFixedExt (c_defaultForEmpty_3)
}
with {
  variant (attrfixedInteger) "defaultForEmpty as c_defaultForEmpty_2";
  variant (attrfixedInteger) "name as capitalized";
  variant (attrfixedInteger) "attribute";
  variant (attrfixedIntegerExt) "defaultForEmpty as c_defaultForEmpty_4";
  variant (attrfixedIntegerExt) "name as capitalized";
  variant (attrfixedIntegerExt) "attribute";
  variant (myStringFixed) "defaultForEmpty as c_defaultForEmpty_1";
  variant (myStringFixed) "name as capitalized";
  variant (myStringFixedExt) "defaultForEmpty as c_defaultForEmpty_3";
  variant (myStringFixedExt) "name as capitalized";
};


}
with {
  encode "XML";
  variant "namespace as 'www.example.org/defaultforempty/mod1' prefix 'dfe1'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
