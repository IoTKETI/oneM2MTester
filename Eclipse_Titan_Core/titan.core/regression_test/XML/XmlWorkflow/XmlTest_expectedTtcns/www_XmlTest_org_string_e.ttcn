/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Lovassy, Arpad
*   Raduly, Csaba
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_XmlTest_org_string.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Thu Sep  5 17:34:59 2013
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- XmlTest_string.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "http://www.XmlTest.org/string" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_XmlTest_org_string {


import from XSD all;


/* This documentum tests based on
    XML Schema Part 0: Primer Second Edition,
    2.3 Simple Types and
    Appendix B
    XML Schema Part 2: Datatypes Second Edition
    3 Built-in Datatypes */


type XSD.Name NameA
with {
  variant "element";
};


type XSD.String Name;


type Name_1 NameB
with {
  variant "name as uncapitalized";
  variant "element";
};


type XSD.String Name_1
with {
  variant "name as 'name'";
};


type XSD.String NameLength4 length(4);


type Non_empty_string_1 Non_empty_string
with {
  variant "name as 'Non-empty-string'";
  variant "element";
};


type XSD.String Non_empty_string_1 length(3)
with {
  variant "name as 'Non-empty-string'";
};


type Non_empty_string Non_empty_stringChild length(0 .. infinity)
with {
  variant "name as 'Non-empty-stringChild'";
};


type XSD.String Longer_string length(5)
with {
  variant "name as 'Longer-string'";
};


type XSD.String Longer_stringChild length(5)
with {
  variant "name as 'Longer-stringChild'";
};


type XSD.String StringMin length(5 .. infinity);


type XSD.String StringMax length(0 .. 7);


type XSD.String StringMinMax length(5 .. 7);


type XSD.String Better_us_zipcode (pattern "[0-9]#(5)(-[0-9]#(4))#(0,1)")
with {
  variant "name as 'better-us-zipcode'";
};


/* [$\c]+ means: (dollar or NameChar) 1 or more times.
  \c inside a character class gets "folded into" it.
  It should become:      (pattern "dollar-or-namechar`s=[$\w\d.\-_:]+") */


type XSD.String HO47449a (pattern "dollar-or-namechar`s=[$\w\d.\-_:]+");


/* [\]$\c\[]+ means: (] or $ or NameChar or [) 1 or more times.
  \c is still inside a character class.
  It should become:      (pattern "still-inside=[\]$\w\d.\-_:\[]+") */


type XSD.String HO47449b (pattern "still-inside=[\]$\w\d.\-_:\[]+");


/* [ ]$\c[ ]+ means: space,
   followed by dollar, a NameChar,
   and another space 1 or more times.
   This time, \c is outside the character class.
   It should become:     (pattern "outside=[ ]$[\w\d.\-_:][ ]+") */


type XSD.String HO47449c (pattern "outside=[ ]$[\w\d.\-_:][ ]+");


type XSD.String Artf673083 (pattern "(""[\w\d:][\w\d.\-_:]*"")")
with {
  variant "name as uncapitalized";
};


type XSD.String Mystring_1 length(4 .. infinity)
with {
  variant "name as 'mystring'";
};


/* Case Sensitivity Test follows: Mystring and mystring should be different */


type XSD.String Mystring length(4 .. infinity);


type Type_1 Type
with {
  variant "name as uncapitalized";
  variant "element";
};


type XSD.String Type_1
with {
  variant "name as 'type'";
};


}
with {
  encode "XML";
  variant "namespace as 'http://www.XmlTest.org/string' prefix 'strng'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
