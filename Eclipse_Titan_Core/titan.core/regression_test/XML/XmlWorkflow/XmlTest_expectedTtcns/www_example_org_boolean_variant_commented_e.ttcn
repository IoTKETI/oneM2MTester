/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_example_org_boolean_variant_commented.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Tue Jul  7 11:01:43 2014
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- boolean_variant_commented.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "www.example.org/boolean/variant/commented" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_example_org_boolean_variant_commented {


import from XSD all;


type XSD.Boolean CelsiusBodyTemp
with {
  variant "name as uncapitalized";
  //variant "text 'true' as '1'";
  //variant "text 'false' as '0'";
};


type XSD.Boolean BooleanElement
with {
  variant "name as uncapitalized";
  variant "element";
  //variant "text 'true' as '1'";
  //variant "text 'false' as '0'";
};


type XSD.Boolean BooleanSimple;
//with {
  //variant "text 'true' as '1'";
  //variant "text 'false' as '0'";
//};


type union Union_with_boolean
{
	XSD.String alt_,
	XSD.Boolean alt_1,
	XSD.Integer alt_2
}
with {
  variant "name as uncapitalized";
  variant "useUnion";
  variant "element";
  variant (alt_) "name as ''";
  variant (alt_1) "name as ''";
  //variant (alt_1) "text 'true' as '1'";
  //variant (alt_1) "text 'false' as '0'";
  variant (alt_2) "name as ''";
};


type record Seq_with_boolean
{
	XSD.Boolean stupid optional,
	XSD.String titleElemBase,
	XSD.String forenameElemBase,
	XSD.Boolean smart
}
with {
  variant "name as uncapitalized";
  variant (stupid) "attribute";
  //variant (stupid) "text 'true' as '1'";
  //variant (stupid) "text 'false' as '0'";
  //variant (smart) "text 'true' as '1'";
  //variant (smart) "text 'false' as '0'";
};


type record E15b
{
	record of XSD.Boolean foo_list,
	XSD.Float bar
}
with {
  variant "name as uncapitalized";
  variant (foo_list) "untagged";
  variant (foo_list[-]) "name as 'foo'";
  //variant (foo_list[-]) "text 'true' as '1'";
  //variant (foo_list[-]) "text 'false' as '0'";
};


type record E15b_2
{
	XSD.Boolean foo,
	XSD.Float bar
};
//with {
  //variant (foo) "text 'true' as '1'";
  //variant (foo) "text 'false' as '0'";
//};


}
with {
  encode "XML";
  variant "namespace as 'www.example.org/boolean/variant/commented'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
