/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_example_org_type_substitution_rename.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Wed Nov 25 14:43:08 2014
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- type_substitution_rename.xsd
//			/* xml version = "1.0" */
//			/* targetnamespace = "www.example.org/type/substitution/rename" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_example_org_type_substitution_rename {


import from XSD all;


type record Complex
{
	ParentType parentType,
	ParentType_derivations sd
}
with {
  variant "element";
};


type ParentType_derivations ParentType
with {
  variant "name as uncapitalized";
  variant "element";
};


type record ParentType_1
{
	record of XSD.String foo_list
}
with {
  variant "name as 'ParentType'";
  variant (foo_list) "untagged";
  variant (foo_list[-]) "name as 'foo'";
};


type RestrictedType_1 RestrictedType
with {
  variant "element";
};


type record RestrictedType_1
{
	record length(1 .. infinity) of XSD.String foo_list
}
with {
  variant "name as 'restrictedType'";
  variant (foo_list) "untagged";
  variant (foo_list[-]) "name as 'foo'";
};


type union ParentType_derivations
{
	ParentType_1 parentType,
	RestrictedType_1 restrictedType
}
with {
  variant "useType";
  variant (parentType) "name as capitalized";
};


}
with {
  encode "XML";
  variant "namespace as 'www.example.org/type/substitution/rename' prefix 'this'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
