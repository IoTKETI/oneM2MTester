/******************************************************************************
* Copyright (c) 2000-2017 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          www_example_org_attr_ext_rest.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Fri Aug 26 09:42:11 2011
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- attrib_restriction_extension.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "www.example.org/attr/ext/rest" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_example_org_attr_ext_rest {


import from XSD all;


type record E25seq
{
	XSD.Integer genderAttrBase optional,
	XSD.String titleElemBase,
	XSD.String forenameElemBase,
	XSD.String surnameElemBase
}
with {
  variant "name as uncapitalized";
  variant (genderAttrBase) "attribute";
};


type record E25seqa
{
	XSD.Integer gender optional,
	XSD.Integer genderAttrBase optional,
	XSD.String titleElemBase,
	XSD.String forenameElemBase,
	XSD.String surnameElemBase
}
with {
  variant "name as uncapitalized";
  variant (gender) "attribute";
  variant (genderAttrBase) "attribute";
};


type record E25seqb
{
	XSD.Integer gender optional,
	XSD.Integer genderAttrBase optional,
	XSD.String titleElemBase,
	XSD.String forenameElemBase,
	XSD.String surnameElemBase,
	XSD.Integer ageElemExt
}
with {
  variant "name as uncapitalized";
  variant (gender) "attribute";
  variant (genderAttrBase) "attribute";
};


type record E25seqc
{
	XSD.Integer gender optional,
	XSD.Integer ageElemExt
}
with {
  variant "name as uncapitalized";
  variant (gender) "attribute";
};


type record E25seqd
{
	XSD.Integer gender optional,
	XSD.Integer genderAttrBase,
	XSD.Integer ageElemExt
}
with {
  variant "name as uncapitalized";
  variant (gender) "attribute";
  variant (genderAttrBase) "attribute";
};


type XSD.String Comment
with {
  variant "name as uncapitalized";
  variant "element";
};


type record PurchaseOrderType
{
	XSD.Date orderDate optional,
	XSD.Date shipDate optional,
	XSD.String shipTo,
	XSD.String billTo,
	Comment comment optional
}
with {
  variant (orderDate) "attribute";
  variant (shipDate) "attribute";
};


/* The restricting type is: */


type record RestrictedPurchaseOrderType
{
	XSD.Date shipDate,
	XSD.String shipTo,
	Comment comment
}
with {
  variant (shipDate) "attribute";
};


type record E23
{
	XSD.Integer bar optional,
	XSD.Integer base optional,
	XSD.Float foo optional,
	XSD.String base_1
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (bar) "attribute";
  variant (base) "attribute";
  variant (foo) "attribute";
  variant (base_1) "name as 'base'";
  variant (base_1) "untagged";
};


type record E24
{
	XSD.Integer bar optional,
	XSD.Integer base optional,
	XSD.Float foo optional,
	XSD.Integer goo optional,
	XSD.String base_1
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (bar) "attribute";
  variant (base) "attribute";
  variant (foo) "attribute";
  variant (goo) "attribute";
  variant (base_1) "name as 'base'";
  variant (base_1) "untagged";
};


type record E25
{
	XSD.Integer bar optional,
	XSD.Integer goo,
	XSD.String base length(4)
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (bar) "attribute";
  variant (goo) "attribute";
  variant (base) "untagged";
};


type record E26
{
	XSD.Integer bar optional,
	XSD.Float foo,
	XSD.Integer goo,
	XSD.String base length(4)
}
with {
  variant "name as uncapitalized";
  variant "element";
  variant (bar) "attribute";
  variant (foo) "attribute";
  variant (goo) "attribute";
  variant (base) "untagged";
};


}
with {
  encode "XML";
  variant "namespace as 'www.example.org/attr/ext/rest' prefix 'nss'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
