/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Raduly, Csaba
 *
 ******************************************************************************/
/* Annex C (formerly B) Example 3

XML Schema:

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:nsA"
  targetNamespace="nsA">
  <xs:complexType name="C1">
    <xs:simpleContent>
      <xs:extension base="xs:integer">
        <xs:attribute name="A1" type="xs:integer"/>
        <xs:attribute name="A2" type="xs:integer"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="C2">
    <xs:simpleContent>
      <xs:restriction base="C1">
        <xs:minInclusive value="23"/>
        <xs:maxInclusive value="26"/>
        <xs:attribute name="A1" type="xs:byte" use="required"/>
        <xs:attribute name="A2" type="xs:negativeInteger"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="C3">
    <xs:simpleContent>
      <xs:restriction base="C2">
        <xs:minInclusive value="25"/>
        <xs:maxInclusive value="26"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>

TTCN-3 Module:
*/
module AnnexB3 {

  //import from XSD language "XML" all;

  type record C1 {
    integer a1 optional,
    integer a2 optional, // attributes first
    universal charstring base // originally integer 
  } with {
    variant (a1, a2) "attribute";
    // name as capitalized factored out
    variant (base) "untagged ";
  }

  type record C2 {
    integer a1,
    integer a2 optional,
    integer base (23 .. 26)
  } with {
    variant (a1, a2) "attribute";
    // name as capitalized factored out
    variant (base) "untagged " ;
  }

  type record C3 {
    integer a1,
    integer a2 optional,
    integer base (25 .. 26)
  } with {
    variant (a1, a2) "attribute";
    // name as capitalized factored out
    variant (base) "untagged "
  }

} with {
  encode "XML";
  variant /* (all, all.all)*/ "name as capitalized";
  variant /*(all)*/ "namespace as 'urn:nsA' prefix 'A' "
}

