/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Lovassy, Arpad
 *   Raduly, Csaba
 *   Szabo, Janos Zoltan â€“ initial implementation
 *   Tatarka, Gabor
 *
 ******************************************************************************/
// This Test Port skeleton source file was generated by the
// TTCN-3 Compiler of the TTCN-3 Test Executor version 1.4.pl3
// for Gabor Tatarka (tmpgta@duna127) on Wed Jul  9 16:13:51 2003


// You may modify this file. Complete the body of empty functions and
// add your member functions here.

#include "ExtProcPort.hh"

#ifndef OLD_NAMES
namespace ProcPort {
#endif

ExtProcPort::ExtProcPort(const char *par_port_name)
	: ExtProcPort_BASE(par_port_name)
{

}

ExtProcPort::~ExtProcPort()
{

}

void ExtProcPort::set_parameter(const char *parameter_name,
	const char *parameter_value)
{

}

void ExtProcPort::Event_Handler(const fd_set *read_fds,
	const fd_set *write_fds, const fd_set *error_fds,
	double time_since_last_call)
{

}

void ExtProcPort::user_map(const char *system_port)
{

}

void ExtProcPort::user_unmap(const char *system_port)
{

}

void ExtProcPort::user_start()
{

}

void ExtProcPort::user_stop()
{

}

void ExtProcPort::outgoing_call(const MyProc5_call& call_par)
{
	double d;
	int a,b;
	a=call_par.A();b=call_par.B();
	if(b==0) {
		incoming_exception(MyProc5_exception(CHARSTRING("Divide by 0.")));
	} else {
		d=(double)a/(double)b;
		MyProc5_reply tmp;
		tmp.return_value()=d;
		incoming_reply(tmp);
	}
}

void ExtProcPort::outgoing_reply(const MyProc5_reply& reply_par)
{

}

void ExtProcPort::outgoing_raise(const MyProc5_exception& raise_exception)
{

}

#ifndef OLD_NAMES
} /* end of namespace */
#endif
