/******************************************************************************
 * Copyright (c) 2000-2017 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Feher, Csaba
 *   Lovassy, Arpad
 *   Raduly, Csaba
 *   Szabo, Janos Zoltan â€“ initial implementation
 *   Tatarka, Gabor
 *
 ******************************************************************************/
// This Test Port skeleton header file was generated by the
// TTCN-3 Compiler of the TTCN-3 Test Executor version 1.4.pl3
// for Gabor Tatarka (tmpgta@pythagoras) on Tue Jul 29 10:50:23 2003


// You may modify this file. Add your attributes and prototypes of your
// member functions here.

#ifndef PortAddress_HH
#define PortAddress_HH

#include "ProcPort.hh"

#ifndef OLD_NAMES
namespace ProcPort {
#endif

class PortAddress : public PortAddress_BASE {
public:
	PortAddress(const char *par_port_name);
	~PortAddress();

	void set_parameter(const char *parameter_name,
		const char *parameter_value);

	void Handle_Fd_Event(int fd, boolean is_readable,
		boolean is_writable, boolean is_error);

protected:
	void user_map(const char *system_port);
	void user_unmap(const char *system_port);

	void user_start();
	void user_stop();

	void outgoing_call(const MyProc_call& call_par,
		const ADDRESS *destination_address);
	void outgoing_call(const s__StopPTC_call& call_par,
		const ADDRESS *destination_address);
	void outgoing_reply(const MyProc_reply& reply_par,
		const ADDRESS *destination_address);
	void outgoing_reply(const s__StopPTC_reply& reply_par,
		const ADDRESS *destination_address);
	void outgoing_reply(const MyProc2_reply& reply_par,
		const ADDRESS *destination_address);
	void outgoing_raise(const MyProc_exception& raise_exception,
		const ADDRESS *destionation_address);
};

#ifndef OLD_NAMES
} /* end of namespace */
#endif

#endif
