/******************************************************************************
 * Copyright (C) 2017 ETSI  All Rights Reserved.
 *
 * Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.6, incompatible from and sender clause in catch operation
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// If the catch operation contains both from and sender clause, the variable or parameter 
// referenced in the sender clause shall be type compatible with the template in the from 
// clause.

module NegSem_220306_catch_operation_013 {

	signature S() exception (charstring);
	
	type port P procedure {
		inout S;
	} with {extension "internal"}
	
    type component GeneralComp {
        var integer vc_int;
		port P p;
	}
    
    type component AltComp {
		var charstring vc_str;
        port P px;
	}
	
	function f() runs on GeneralComp {
        p.getcall(S:{});
        p.raise(S, "exc");
	}
	
    testcase TC_NegSem_220306_catch_operation_013() runs on GeneralComp system GeneralComp {
        var GeneralComp v_compRef := null;
        var GeneralComp v_ptc := GeneralComp.create;
		connect(self:p, v_ptc:p);

		p.call(S:{}) {
	        [] p.catch(S, charstring:?) from AltComp:? -> sender v_compRef { } // error expected
            [] p.catch { }
        }
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220306_catch_operation_013(), 5.0);
    }
}
