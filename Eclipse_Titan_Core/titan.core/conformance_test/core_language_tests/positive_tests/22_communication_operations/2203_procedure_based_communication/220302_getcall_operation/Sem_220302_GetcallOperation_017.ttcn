/******************************************************************************
 * Copyright (C) 2017 ETSI  All Rights Reserved.
 *
 * Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.2, @decoded redirect assignment of a charstring field
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// When assigning individual fields of a call, encoded parameters can be decoded 
// prior to assignment using the @decoded modifier. In this case, the referenced 
// parameter on the right hand sided of the assignment shall be one of the 
// bitstring, hexstring, octetstring, charstring or universal charstring types. It 
// shall be decoded into a value of the same type as the variable on the left hand 
// side of the assignment.

module Sem_220302_GetcallOperation_017 {
	signature S(charstring p_par);
    
	type port P procedure {
		inout S;
	} with {extension "internal"}

	type integer I with { variant "32 bit"}
	
    type component GeneralComp {
		port P p;
	}
    
    function f_server() runs on GeneralComp {
        var I v_res;        
        alt {
            [] p.getcall(S: {p_par := ?}) -> param (v_res := @decoded p_par) { 
                if (v_res == 1953719668) { setverdict (pass); }
                else { setverdict(fail); }
            }
            [] p.getcall { setverdict(fail); }
        }        
    }
	
    testcase TC_Sem_220302_GetcallOperation_017() runs on GeneralComp system GeneralComp {
        var I v_src := 1953719668;
        var charstring v_str := oct2char(bit2oct(encvalue(v_src)));

        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());

        p.call(S:{ p_par := v_str }, nowait);
        v_ptc.done;

        setverdict(pass);
    }

    control {
        execute(TC_Sem_220302_GetcallOperation_017(), 5.0);
    }
} with { encode "RAW"}
