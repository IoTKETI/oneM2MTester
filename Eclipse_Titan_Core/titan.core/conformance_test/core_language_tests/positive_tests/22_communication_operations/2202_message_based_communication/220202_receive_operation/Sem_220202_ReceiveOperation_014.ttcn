/******************************************************************************
 * Copyright (C) 2017 ETSI  All Rights Reserved.
 *
 * Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.2, @decoded redirect assignment of a charstring field
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// When assigning individual fields of a message, encoded payload fields can be 
// decoded prior to assignment using the @decoded modifier. In this case, the 
// referenced field on the right hand sided of the assignment shall be one of the 
// bitstring, hexstring, octetstring, charstring or universal charstring types. It 
// shall be decoded into a value of the same type as the variable on the left hand 
// side of the assignment.

module Sem_220202_ReceiveOperation_014 {
	type record R {
        integer id,
        charstring payload
    }

	type integer I with { variant "32 bit"}
    
	type port P message {
		inout R;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p;
	}
	
    testcase TC_Sem_220202_ReceiveOperation_014() runs on GeneralComp {
        var I v_src := 1953719668;
		var I v_res;

        var charstring v_str := oct2char(bit2oct(encvalue(v_src)));

		connect(self:p, self:p);
        p.send(R:{ id := 1, payload := v_str });

        alt {
            [] p.receive(R:?) -> value (v_res := @decoded payload) { 
                if (v_res == v_src) { setverdict (pass); } 
                else { setverdict(fail, "reason: ", v_res); }
            }
            [] p.receive { setverdict(fail); }
        }
    }

    control {
        execute(TC_Sem_220202_ReceiveOperation_014(), 5.0);
    }
} with { encode "RAW"}
