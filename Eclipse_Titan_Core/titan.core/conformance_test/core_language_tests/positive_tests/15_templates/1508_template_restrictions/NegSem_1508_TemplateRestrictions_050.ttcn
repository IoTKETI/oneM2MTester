/******************************************************************************
 * Copyright (C) 2017 ETSI  All Rights Reserved.
 *
 * Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15.8, Ensure that decoded content match is not allowed for omit template restriction
 ** @verdict  pass reject, noexecution
 ***************************************************/

module NegSem_1508_TemplateRestrictions_050 { 

	type record MessageType {
	  	hexstring payload
	}
	
	type record Mymessage {
	  	integer field1,
	  	bitstring field2 optional
    } with { variant " "};
	

    type port loopbackPort message
	{inout MessageType} with {extension "internal"};
	

    type component GeneralComp {	    	    
	  	port loopbackPort messagePort
    }	

	testcase TC_NegSem_1508_TemplateRestrictions_050() runs on GeneralComp {
		var bitstring v_enc;
		var Mymessage v_testMessage;
		var MessageType Message;
		
		v_testMessage:=  {  
		    field1 := 10,
		    field2 := '1001'B
		} 

		connect(self:messagePort,self:messagePort);

      	Message.payload := bit2hex(encvalue(v_testMessage));		//encode message to payload

	 	template (omit) MessageType mw_matchingTemplate:=
	  	{  			
	  		payload :=  decmatch Mymessage: {field1:= 10, field2 := omit}        
			//error: omit restriction not allowed
	  	} 

	  	messagePort.send(Message);	//send message

		alt {
		 	[] messagePort.receive(mw_matchingTemplate) {
		   	 	setverdict(pass);
		 	}
		 	[] messagePort.receive {
		    	setverdict(fail,mw_matchingTemplate);
		 	}
		}
		
	}

	control{
		execute(TC_NegSem_1508_TemplateRestrictions_050());
	}

} with { encode "RAW"}
 
