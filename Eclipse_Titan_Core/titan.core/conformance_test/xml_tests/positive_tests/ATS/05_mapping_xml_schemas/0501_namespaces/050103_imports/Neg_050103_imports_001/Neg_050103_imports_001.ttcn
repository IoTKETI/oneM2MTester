/******************************************************************************
 * Copyright (C) 2017 ETSI  All Rights Reserved.
 *
 * Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  9:5.1.3, Verify that it is not allowed to import imports from XSD schemas
 ** @verdict  pass reject
***************************************************/
// The following requirements are tested:
// It is not allowed to import XSD import statements to TTCN-3 (i.e. there is no transitive import
// of XSD import statements as defined for TTCN-3, see clause 8.2.3.7 of ES 201 873-1 [1]). 

module Neg_050103_imports_001 {

    import from schema_Neg_050103_imports_001 language "XSD" { import all };

    template MyType m_msg := 1;

	external function enc_MyType(in MyType pdu) return octetstring
  	 with { extension "prototype (convert) encode(XER:XER_EXTENDED)" }
  
  	external function dec_MyType(in octetstring stream) return MyType
  	 with { extension "prototype (convert) decode(XER:XER_EXTENDED)" }

    /**
     * @desc The timeout given in seconds after which the test case will be stopped.
     */
    modulepar float PX_TC_EXECUTION_TIMEOUT := 5.0;

    type universal charstring Raw;

    type port P message {
        inout MyType, Raw;
    } with {extension "internal"}

    type component C {
        port P p;
		port P p1;
    }

    testcase TC_Neg_050103_imports_001() runs on C system C {
        connect(self:p, self:p1);

        // encode the message
        p.send(oct2unichar(enc_MyType(valueof(m_msg))));
        log("template should either be rejected by compiler or by runtime latest while encoding");

        setverdict(fail, "Invalid template should not be encoded");

        unmap(self:p, system:p);
    }

    control {
        execute(TC_Neg_050103_imports_001(), PX_TC_EXECUTION_TIMEOUT);
    }


}
