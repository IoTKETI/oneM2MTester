// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for jaeyounghwang (jaeyounghwang@ubuntu) on Mon Sep 18 04:04:30 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "OneM2M_Functions.hh"

namespace OneM2M__Functions {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments);

/* Literal string constants */

static const CHARSTRING cs_3(0, NULL),
cs_11(20, " created successfuly"),
cs_7(8, " deleted"),
cs_31(16, " not implemented"),
cs_27(9, " resource"),
cs_25(29, " resource updated successfuly"),
cs_22('/'),
cs_1('0'),
cs_43(':'),
cs_20(37, ": No answer while retrieving resource"),
cs_23(22, ": Resource not present"),
cs_18(20, ": Resource present: "),
cs_19(44, ": Wrong response status code in the response"),
cs_21(80, ":INFO: Hierarchical method is required to check the non presence of the resource"),
cs_0(13, "AE-ID_changed"),
cs_37(4, "COAP"),
cs_42(13, "CseBaseTester"),
cs_5(4, "HTTP"),
cs_39(4, "MQTT"),
cs_4(5, "MyAe2"),
cs_14(14, "MyContainerAux"),
cs_2(4, "None"),
cs_33(14, "NotInitialized"),
cs_32(2, "ae"),
cs_38(7, "coap://"),
cs_29(99, "f_checkAttributesToBeSaved:INFO: resourceName not returned. Using the one provided in the request: "),
cs_30(50, "f_checkAttributesToBeSaved:WARNING: Resource Type "),
cs_12(62, "f_cse_createResource:INFO: Error while creating resource type "),
cs_13(66, "f_cse_createResource:INFO: No answer while creating resource type "),
cs_10(41, "f_cse_createResource:INFO: Resource type "),
cs_16(56, "f_cse_deleteResourceINFO: Error while deleting resource "),
cs_17(60, "f_cse_deleteResourceINFO: No answer while deleting resource "),
cs_15(35, "f_cse_deleteResourceINFO: Resource "),
cs_8(68, "f_cse_postamble_deleteResources INFO: Error while deleting resource "),
cs_9(72, "f_cse_postamble_deleteResources INFO: No answer while deleting resource "),
cs_6(47, "f_cse_postamble_deleteResources INFO: Resource "),
cs_24(33, "f_cse_updateAcpAuxResource:INFO: "),
cs_26(54, "f_cse_updateAcpAuxResource:INFO: Error while updating "),
cs_28(58, "f_cse_updateAcpAuxResource:INFO: No answer while updating "),
cs_36(7, "http://"),
cs_40(7, "mqtt://"),
cs_34(18, "resourceIDNotFound"),
cs_35(20, "resourceNameNotFound"),
cs_41(5, "ws://");
static const unsigned char module_checksum[] = { 0x8b, 0x84, 0xd1, 0x52, 0x03, 0x85, 0xdf, 0x46, 0x00, 0x3d, 0xdb, 0x88, 0xff, 0x58, 0xbe, 0x77 };

/* Class definitions for internal use */

class a__cse__cf01_Default : public Default_Base {
public:
a__cse__cf01_Default();
alt_status call_altstep();
};

class a__cse__cf02_Default : public Default_Base {
public:
a__cse__cf02_Default();
alt_status call_altstep();
};

class a__cse__cf04_Default : public Default_Base {
public:
a__cse__cf04_Default();
alt_status call_altstep();
};

class a__ae__default_Default : public Default_Base {
public:
a__ae__default_Default();
alt_status call_altstep();
};

class a__ae__cf03_Default : public Default_Base {
public:
a__ae__cf03_Default();
alt_status call_altstep();
};

class a__default_Default : public Default_Base {
public:
a__default_Default();
alt_status call_altstep();
};


/* Global variable definitions */

static UNIVERSAL_CHARSTRING_template template_f__cse__preamble__createAcpAux_p__acpName_defval;
const UNIVERSAL_CHARSTRING_template& f__cse__preamble__createAcpAux_p__acpName_defval = template_f__cse__preamble__createAcpAux_p__acpName_defval;
static OneM2M__Types::AccessControlOperations_template template_f__cse__preamble__createAcpAux_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& f__cse__preamble__createAcpAux_p__allowedOperations_defval = template_f__cse__preamble__createAcpAux_p__allowedOperations_defval;
static OneM2M__Types::AcpType_template template_f__cse__preamble__registerAe_p__accessControlPolicyIDs_defval;
const OneM2M__Types::AcpType_template& f__cse__preamble__registerAe_p__accessControlPolicyIDs_defval = template_f__cse__preamble__registerAe_p__accessControlPolicyIDs_defval;
static OneM2M__Types::PoaList_template template_f__cse__preamble__registerAe_p__poaList_defval;
const OneM2M__Types::PoaList_template& f__cse__preamble__registerAe_p__poaList_defval = template_f__cse__preamble__registerAe_p__poaList_defval;
static OneM2M__Types::AccessControlOperations_template template_f__cse__preamble__registerAeWithId_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& f__cse__preamble__registerAeWithId_p__allowedOperations_defval = template_f__cse__preamble__registerAeWithId_p__allowedOperations_defval;
static OneM2M__Types::ListOfM2MID_template template_f__cse__preamble__createServiceSubscribedAppRule_p__allowedAEs_defval;
const OneM2M__Types::ListOfM2MID_template& f__cse__preamble__createServiceSubscribedAppRule_p__allowedAEs_defval = template_f__cse__preamble__createServiceSubscribedAppRule_p__allowedAEs_defval;
static OneM2M__Types::ResponseStatusCode const_f__cse__preamble__subscriptionVerification_p__responseStatusCode_defval;
const OneM2M__Types::ResponseStatusCode& f__cse__preamble__subscriptionVerification_p__responseStatusCode_defval = const_f__cse__preamble__subscriptionVerification_p__responseStatusCode_defval;
static OneM2M__Types::RequestPrimitive_template template_f__cse__createResource_p__requestPrimitive_defval;
const OneM2M__Types::RequestPrimitive_template& f__cse__createResource_p__requestPrimitive_defval = template_f__cse__createResource_p__requestPrimitive_defval;
static INTEGER const_f__cse__createResource_p__parentIndex_defval;
const INTEGER& f__cse__createResource_p__parentIndex_defval = const_f__cse__createResource_p__parentIndex_defval;
static UNIVERSAL_CHARSTRING_template template_f__cse__createAccessControlPolicyAux_p__acpName_defval;
const UNIVERSAL_CHARSTRING_template& f__cse__createAccessControlPolicyAux_p__acpName_defval = template_f__cse__createAccessControlPolicyAux_p__acpName_defval;
static OneM2M__Types::ListOfURIs_template template_f__cse__createAccessControlPolicyAux_p__acor_defval;
const OneM2M__Types::ListOfURIs_template& f__cse__createAccessControlPolicyAux_p__acor_defval = template_f__cse__createAccessControlPolicyAux_p__acor_defval;
static OneM2M__Types::AccessControlOperations_template template_f__cse__createAccessControlPolicyAux_p__allowedOperations_defval;
const OneM2M__Types::AccessControlOperations_template& f__cse__createAccessControlPolicyAux_p__allowedOperations_defval = template_f__cse__createAccessControlPolicyAux_p__allowedOperations_defval;
static INTEGER const_f__cse__createContainerResourceAux_p__parentIndex_defval;
const INTEGER& f__cse__createContainerResourceAux_p__parentIndex_defval = const_f__cse__createContainerResourceAux_p__parentIndex_defval;
static OneM2M__Types::RequestPrimitive_template template_f__cse__deleteResource_p__requestPrimitive_defval;
const OneM2M__Types::RequestPrimitive_template& f__cse__deleteResource_p__requestPrimitive_defval = template_f__cse__deleteResource_p__requestPrimitive_defval;
static UNIVERSAL_CHARSTRING_template template_f__cse__resourceAnnouncementHandler_p__from_defval;
const UNIVERSAL_CHARSTRING_template& f__cse__resourceAnnouncementHandler_p__from_defval = template_f__cse__resourceAnnouncementHandler_p__from_defval;
static UNIVERSAL_CHARSTRING_template template_f__cse__resourceAnnouncementHandler_p__to_defval;
const UNIVERSAL_CHARSTRING_template& f__cse__resourceAnnouncementHandler_p__to_defval = template_f__cse__resourceAnnouncementHandler_p__to_defval;
static OneM2M__Types::ResponseStatusCode const_f__cse__notifyProcedure__subscriptionVerificationHandler_p__responseStatusCode_defval;
const OneM2M__Types::ResponseStatusCode& f__cse__notifyProcedure__subscriptionVerificationHandler_p__responseStatusCode_defval = const_f__cse__notifyProcedure__subscriptionVerificationHandler_p__responseStatusCode_defval;
static OneM2M__Types::RequestPrimitive_template template_f__getCreateRequestPrimitive_p__request_defval;
const OneM2M__Types::RequestPrimitive_template& f__getCreateRequestPrimitive_p__request_defval = template_f__getCreateRequestPrimitive_p__request_defval;
static OneM2M__Types::RequestPrimitive_template template_f__getCreateResponsePrimitive_p__request_defval;
const OneM2M__Types::RequestPrimitive_template& f__getCreateResponsePrimitive_p__request_defval = template_f__getCreateResponsePrimitive_p__request_defval;
static INTEGER const_f__getOriginator_p__targetResourceIndex_defval;
const INTEGER& f__getOriginator_p__targetResourceIndex_defval = const_f__getOriginator_p__targetResourceIndex_defval;
static BOOLEAN const_f__getOriginator_p__testSystemRole_defval;
const BOOLEAN& f__getOriginator_p__testSystemRole_defval = const_f__getOriginator_p__testSystemRole_defval;
static INTEGER const_f__getCreator_p__targetResourceIndex_defval;
const INTEGER& f__getCreator_p__targetResourceIndex_defval = const_f__getCreator_p__targetResourceIndex_defval;
static CHARSTRING const_f__getAnnouncementTargetPoA_p__protocolBinding_defval;
const CHARSTRING& f__getAnnouncementTargetPoA_p__protocolBinding_defval = const_f__getAnnouncementTargetPoA_p__protocolBinding_defval;
static CHARSTRING const_f__getAnnouncementTargetPoA_p__announcementTargetAddress_defval;
const CHARSTRING& f__getAnnouncementTargetPoA_p__announcementTargetAddress_defval = const_f__getAnnouncementTargetPoA_p__announcementTargetAddress_defval;
static CHARSTRING const_f__getAnnouncementTargetPoA_p__announcementTargetResource_defval;
const CHARSTRING& f__getAnnouncementTargetPoA_p__announcementTargetResource_defval = const_f__getAnnouncementTargetPoA_p__announcementTargetResource_defval;
static INTEGER const_f__getResourceAddress_p__targetResourceIndex_defval;
const INTEGER& f__getResourceAddress_p__targetResourceIndex_defval = const_f__getResourceAddress_p__targetResourceIndex_defval;
static INTEGER const_f__setResource_p__parentIndex_defval;
const INTEGER& f__setResource_p__parentIndex_defval = const_f__setResource_p__parentIndex_defval;
static INTEGER const_f__getAeId_p__targetResourceIndex_defval;
const INTEGER& f__getAeId_p__targetResourceIndex_defval = const_f__getAeId_p__targetResourceIndex_defval;
TTCN_Module module_object("OneM2M_Functions", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, start_ptc_function, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_1,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Member functions of C++ classes */

a__cse__cf01_Default::a__cse__cf01_Default()
 : Default_Base("a_cse_cf01")
{
}

alt_status a__cse__cf01_Default::call_altstep()
{
return a__cse__cf01_instance();
}

a__cse__cf02_Default::a__cse__cf02_Default()
 : Default_Base("a_cse_cf02")
{
}

alt_status a__cse__cf02_Default::call_altstep()
{
return a__cse__cf02_instance();
}

a__cse__cf04_Default::a__cse__cf04_Default()
 : Default_Base("a_cse_cf04")
{
}

alt_status a__cse__cf04_Default::call_altstep()
{
return a__cse__cf04_instance();
}

a__ae__default_Default::a__ae__default_Default()
 : Default_Base("a_ae_default")
{
}

alt_status a__ae__default_Default::call_altstep()
{
return a__ae__default_instance();
}

a__ae__cf03_Default::a__ae__cf03_Default()
 : Default_Base("a_ae_cf03")
{
}

alt_status a__ae__cf03_Default::call_altstep()
{
return a__ae__cf03_instance();
}

a__default_Default::a__default_Default()
 : Default_Base("a_default")
{
}

alt_status a__default_Default::call_altstep()
{
return a__default_instance();
}


/* Bodies of functions, altsteps and testcases */

void f__cf01Up()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 31, TTCN_Location::LOCATION_FUNCTION, "f_cf01Up");
current_location.update_lineno(34);
#line 34 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__config = OneM2M__Types::Configurations::e__cf01;
current_location.update_lineno(37);
#line 37 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(38);
#line 38 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(39);
#line 39 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__default();
current_location.update_lineno(40);
#line 40 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__cse__cf01();
}

void start_f__cf01Up(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf01Up(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf01Up", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf02Up()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 51, TTCN_Location::LOCATION_FUNCTION, "f_cf02Up");
current_location.update_lineno(54);
#line 54 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__config = OneM2M__Types::Configurations::e__cf02;
current_location.update_lineno(57);
#line 57 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(58);
#line 58 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(59);
#line 59 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(60);
#line 60 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__default();
current_location.update_lineno(61);
#line 61 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__cse__cf02();
}

void start_f__cf02Up(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf02Up(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf02Up", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf03Up()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 72, TTCN_Location::LOCATION_FUNCTION, "f_cf03Up");
current_location.update_lineno(75);
#line 75 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__config = OneM2M__Types::Configurations::e__cf03;
current_location.update_lineno(78);
#line 78 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::AeTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(79);
#line 79 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(80);
#line 80 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__default();
current_location.update_lineno(81);
#line 81 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__ae__cf03();
}

void start_f__cf03Up(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf03Up(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf03Up", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf04Up()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 92, TTCN_Location::LOCATION_FUNCTION, "f_cf04Up");
current_location.update_lineno(95);
#line 95 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__config = OneM2M__Types::Configurations::e__cf04;
current_location.update_lineno(98);
#line 98 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(99);
#line 99 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(100);
#line 100 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__default();
current_location.update_lineno(101);
#line 101 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
activate_a__cse__cf04();
}

void start_f__cf04Up(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf04Up(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf04Up", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cfCseTesterDown()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 113, TTCN_Location::LOCATION_FUNCTION, "f_cfCseTesterDown");
current_location.update_lineno(115);
#line 115 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__config == OneM2M__Types::Configurations::e__cf01)) {
current_location.update_lineno(116);
#line 116 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cf01Down();
}
else {
current_location.update_lineno(117);
#line 117 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__config == OneM2M__Types::Configurations::e__cf02)) {
current_location.update_lineno(118);
#line 118 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cf02Down();
}
}
}

void start_f__cfCseTesterDown(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cfCseTesterDown(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cfCseTesterDown", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cfAeTesterDown()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 125, TTCN_Location::LOCATION_FUNCTION, "f_cfAeTesterDown");
current_location.update_lineno(127);
#line 127 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__config == OneM2M__Types::Configurations::e__cf03)) {
current_location.update_lineno(128);
#line 128 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cf03Down();
}
}

void start_f__cfAeTesterDown(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cfAeTesterDown(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cfAeTesterDown", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf01Down()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 135, TTCN_Location::LOCATION_FUNCTION, "f_cf01Down");
current_location.update_lineno(137);
#line 137 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(138);
#line 138 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cf01Down(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf01Down(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf01Down", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf02Down()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 144, TTCN_Location::LOCATION_FUNCTION, "f_cf02Down");
current_location.update_lineno(146);
#line 146 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(147);
#line 147 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(148);
#line 148 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cf02Down(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf02Down(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf02Down", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf03Down()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 153, TTCN_Location::LOCATION_FUNCTION, "f_cf03Down");
current_location.update_lineno(155);
#line 155 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::AeTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(156);
#line 156 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cf03Down(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf03Down(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf03Down", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cf04Down()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 162, TTCN_Location::LOCATION_FUNCTION, "f_cf04Down");
current_location.update_lineno(164);
#line 164 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(165);
#line 165 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cf04Down(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cf04Down(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cf04Down", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__preamble__createAcpAux(const UNIVERSAL_CHARSTRING_template& p__acpName, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 180, TTCN_Location::LOCATION_FUNCTION, "f_cse_preamble_createAcpAux");
current_location.update_lineno(182);
#line 182 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__cse__createAccessControlPolicyAux(p__acpName, f__cse__createAccessControlPolicyAux_p__acor_defval, p__allowedOperations);
}

void start_f__cse__preamble__createAcpAux(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING_template& p__acpName, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_createAcpAux(");
p__acpName.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_preamble_createAcpAux", text_buf);
p__acpName.encode_text(text_buf);
p__allowedOperations.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__preamble__registerAe(const OneM2M__Types::AcpType_template& p__accessControlPolicyIDs, const OneM2M__Types::PoaList_template& p__poaList)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 193, TTCN_Location::LOCATION_FUNCTION, "f_cse_preamble_registerAe");
current_location.update_lineno(195);
#line 195 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(196);
#line 196 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(197);
#line 197 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__aeAuxIndex(-1);
current_location.update_lineno(199);
#line 199 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__createAeAux(p__accessControlPolicyIDs, p__poaList).valueof();
current_location.update_lineno(201);
#line 201 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = f__getCreateRequestPrimitive(OneM2M__Types::ResourceType::int2, OneM2M__Types::RequestPrimitive_template(v__request), -1);
current_location.update_lineno(203);
#line 203 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(205);
#line 205 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(206);
#line 206 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_6:
alt_status tmp_6_alt_flag_0 = ALT_MAYBE;
alt_status tmp_6_alt_flag_1 = ALT_MAYBE;
alt_status tmp_6_alt_flag_2 = ALT_MAYBE;
alt_status tmp_6_alt_flag_3 = ALT_MAYBE;
alt_status tmp_6_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_6_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(207);
#line 207 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_6_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_6_alt_flag_0 == ALT_YES) {
current_location.update_lineno(208);
#line 208 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(209);
#line 209 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAe:INFO: Application registered successfuly"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(210);
#line 210 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent()().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(211);
#line 211 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "f_cse_preamble_registerAe-Enter here ....");
current_location.update_lineno(212);
#line 212 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_vc__aeAux = const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent()().aE();
current_location.update_lineno(214);
#line 214 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkAttributesToBeSaved(OneM2M__Types::ResourceType::int2, v__request, v__response.primitive().responsePrimitive());
current_location.update_lineno(216);
#line 216 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeAuxIndex = f__setResource(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent(), OneM2M__Types::ResourceType::int2, f__setResource_p__parentIndex_defval);
current_location.update_lineno(219);
#line 219 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_12;
{
boolean tmp_9 = OneM2M__TestSystem::CseTester_component_vc__aeAux.is_bound();
if(tmp_9) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_10 = OneM2M__TestSystem::CseTester_component_vc__aeAux.aE__ID();
switch (tmp_10.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_9 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_9 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_11 = (const UNIVERSAL_CHARSTRING&) tmp_10;
tmp_9 = tmp_11.is_present();
break;}
}
}
tmp_12 = tmp_9;
}
if (tmp_12) {
current_location.update_lineno(220);
#line 220 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__sendAcPrimitive(cs_0, oct2char(unichar2oct(const_cast< const OneM2M__Types::AE__optional&>(OneM2M__TestSystem::CseTester_component_vc__aeAux).aE__ID()())));
}
else {
current_location.update_lineno(222);
#line 222 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__sendAcPrimitive(cs_0, cs_1);
}
}
}
break;
}
}
if (tmp_6_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(226);
#line 226 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_6_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_6_alt_flag_1 == ALT_YES) {
current_location.update_lineno(227);
#line 227 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(228);
#line 228 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAe:INFO: Error while registering application"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(229);
#line 229 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_6_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(231);
#line 231 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_6_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_6_alt_flag_2 == ALT_YES) {
current_location.update_lineno(232);
#line 232 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(233);
#line 233 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAe:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(234);
#line 234 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_6_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(236);
#line 236 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_6_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_6_alt_flag_3 == ALT_YES) {
current_location.update_lineno(237);
#line 237 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAe:INFO: No answer while registering resource"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(238);
#line 238 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_6_default_flag == ALT_MAYBE) {
tmp_6_default_flag = TTCN_Default::try_altsteps();
if (tmp_6_default_flag == ALT_YES || tmp_6_default_flag == ALT_BREAK) break;
else if (tmp_6_default_flag == ALT_REPEAT) goto tmp_6;
}
current_location.update_lineno(206);
#line 206 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_6_alt_flag_0 == ALT_NO && tmp_6_alt_flag_1 == ALT_NO && tmp_6_alt_flag_2 == ALT_NO && tmp_6_alt_flag_3 == ALT_NO && tmp_6_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 206 and 240.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(242);
#line 242 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(243);
#line 243 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__aeAuxIndex;
}

void start_f__cse__preamble__registerAe(const COMPONENT& component_reference, const OneM2M__Types::AcpType_template& p__accessControlPolicyIDs, const OneM2M__Types::PoaList_template& p__poaList)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_registerAe(");
p__accessControlPolicyIDs.log();
TTCN_Logger::log_event_str(", ");
p__poaList.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_preamble_registerAe", text_buf);
p__accessControlPolicyIDs.encode_text(text_buf);
p__poaList.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__preamble__registerAeWithId(const UNIVERSAL_CHARSTRING& p__appId, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 253, TTCN_Location::LOCATION_FUNCTION, "f_cse_preamble_registerAeWithId");
current_location.update_lineno(255);
#line 255 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(256);
#line 256 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(257);
#line 257 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__aeAuxIndex(-1);
current_location.update_lineno(258);
#line 258 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__acpAuxIndex(-1);
current_location.update_lineno(260);
#line 260 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (OneM2M__Pics::PICS__ACP__SUPPORT) {
current_location.update_lineno(261);
#line 261 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__acpAuxIndex = f__cse__createAccessControlPolicyAux(f__cse__createAccessControlPolicyAux_p__acpName_defval, f__cse__createAccessControlPolicyAux_p__acor_defval, p__allowedOperations);
current_location.update_lineno(262);
#line 262 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex = v__acpAuxIndex;
}
current_location.update_lineno(265);
#line 265 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__acpAuxIndex != -1)) {
current_location.update_lineno(266);
#line 266 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted.set_size(1);
OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted[0] = v__acpAuxIndex;
current_location.update_lineno(267);
#line 267 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::AcpType_template tmp_17;
tmp_17.set_size(1);
tmp_17[0] = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[v__acpAuxIndex].resource());
v__request = OneM2M__Templates::m__createAe(p__appId, tmp_17, OneM2M__Templates::m__createAe_p__from_defval, OneM2M__Templates::m__createAe_p__resourceName_defval, OneM2M__Templates::m__createAe_p__poaList_defval).valueof();
}
current_location.update_lineno(270);
#line 270 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request.to__() = f__getResourceAddress(f__getResourceAddress_p__targetResourceIndex_defval);
current_location.update_lineno(272);
#line 272 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
}
else {
current_location.update_lineno(275);
#line 275 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Templates::m__createAe(p__appId, OneM2M__Templates::m__createAe_p__accessControlPolicyIds_defval, OneM2M__Templates::m__createAe_p__from_defval, OneM2M__Templates::m__createAe_p__resourceName_defval, OneM2M__Templates::m__createAe_p__poaList_defval), OneM2M__Templates::m__request_p__forcedFields_defval));
}
current_location.update_lineno(277);
#line 277 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(278);
#line 278 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_19:
alt_status tmp_19_alt_flag_0 = ALT_MAYBE;
alt_status tmp_19_alt_flag_1 = ALT_MAYBE;
alt_status tmp_19_alt_flag_2 = ALT_MAYBE;
alt_status tmp_19_alt_flag_3 = ALT_MAYBE;
alt_status tmp_19_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_19_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(279);
#line 279 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_19_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_19_alt_flag_0 == ALT_YES) {
current_location.update_lineno(280);
#line 280 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(281);
#line 281 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAeWithId: INFO: Application registered successfuly"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(282);
#line 282 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent()().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(283);
#line 283 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_vc__aeAux = const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent()().aE();
current_location.update_lineno(285);
#line 285 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeAuxIndex = f__setResource(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent(), OneM2M__Types::ResourceType::int2, f__setResource_p__parentIndex_defval);
current_location.update_lineno(287);
#line 287 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_25;
{
boolean tmp_22 = OneM2M__TestSystem::CseTester_component_vc__aeAux.is_bound();
if(tmp_22) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_23 = OneM2M__TestSystem::CseTester_component_vc__aeAux.aE__ID();
switch (tmp_23.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_22 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_22 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_24 = (const UNIVERSAL_CHARSTRING&) tmp_23;
tmp_22 = tmp_24.is_present();
break;}
}
}
tmp_25 = tmp_22;
}
if (tmp_25) {
current_location.update_lineno(288);
#line 288 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__sendAcPrimitive(cs_0, oct2char(unichar2oct(const_cast< const OneM2M__Types::AE__optional&>(OneM2M__TestSystem::CseTester_component_vc__aeAux).aE__ID()())));
}
else {
current_location.update_lineno(290);
#line 290 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__sendAcPrimitive(cs_0, cs_1);
}
}
}
break;
}
}
if (tmp_19_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(294);
#line 294 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_19_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_19_alt_flag_1 == ALT_YES) {
current_location.update_lineno(296);
#line 296 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(297);
#line 297 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAeWithId:INFO: Error while registering application"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(298);
#line 298 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_19_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(300);
#line 300 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_19_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_19_alt_flag_2 == ALT_YES) {
current_location.update_lineno(301);
#line 301 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(302);
#line 302 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAeWithId:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(303);
#line 303 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_19_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(305);
#line 305 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_19_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_19_alt_flag_3 == ALT_YES) {
current_location.update_lineno(306);
#line 306 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_preamble_registerAeWithId:INFO: No answer while registering resource"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(307);
#line 307 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_19_default_flag == ALT_MAYBE) {
tmp_19_default_flag = TTCN_Default::try_altsteps();
if (tmp_19_default_flag == ALT_YES || tmp_19_default_flag == ALT_BREAK) break;
else if (tmp_19_default_flag == ALT_REPEAT) goto tmp_19;
}
current_location.update_lineno(278);
#line 278 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_19_alt_flag_0 == ALT_NO && tmp_19_alt_flag_1 == ALT_NO && tmp_19_alt_flag_2 == ALT_NO && tmp_19_alt_flag_3 == ALT_NO && tmp_19_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 278 and 309.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(311);
#line 311 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(312);
#line 312 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__aeAuxIndex;
}

void start_f__cse__preamble__registerAeWithId(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__appId, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_registerAeWithId(");
p__appId.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_preamble_registerAeWithId", text_buf);
p__appId.encode_text(text_buf);
p__allowedOperations.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__preamble__createServiceSubscribedAppRule(const OneM2M__Types::ListOfM2MID_template& p__allowedAEs)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 316, TTCN_Location::LOCATION_FUNCTION, "f_cse_preamble_createServiceSubscribedAppRule");
current_location.update_lineno(318);
#line 318 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__serviceSubscribedAppRuleIndex(-1);
current_location.update_lineno(320);
#line 320 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::ListOfM2MID tmp_27;
tmp_27.set_size(1);
tmp_27[0] = cs_2;
OneM2M__Types::ListOfM2MID tmp_28;
tmp_28.set_size(1);
tmp_28[0] = OneM2M__Pixits::PX__APP__ID;
v__serviceSubscribedAppRuleIndex = f__cse__createResource(OneM2M__Types::ResourceType::int19, OneM2M__Templates::m__createServiceSubscribedAppRule(tmp_27, tmp_28, p__allowedAEs.valueof()), f__cse__createResource_p__parentIndex_defval);
}
current_location.update_lineno(322);
#line 322 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__serviceSubscribedAppRuleIndex;
}

void start_f__cse__preamble__createServiceSubscribedAppRule(const COMPONENT& component_reference, const OneM2M__Types::ListOfM2MID_template& p__allowedAEs)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_createServiceSubscribedAppRule(");
p__allowedAEs.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_preamble_createServiceSubscribedAppRule", text_buf);
p__allowedAEs.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__preamble__subscriptionVerification(COMPONENT& p__notifyHandler, const INTEGER& p__aeIndex, INTEGER& p__ae2Index, OneM2M__Types::RequestPrimitive_template& p__createRequestPrimitive, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::ResponseStatusCode& p__responseStatusCode)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 326, TTCN_Location::LOCATION_FUNCTION, "f_cse_preamble_subscriptionVerification");
p__notifyHandler.clean_up();
current_location.update_lineno(327);
#line 327 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int23)) {
current_location.update_lineno(328);
#line 328 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__notifyHandler = TTCN_Runtime::create_component("OneM2M_TestSystem", "CseTester", "NotifyHandler", NULL, TRUE);
current_location.update_lineno(329);
#line 329 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::PoaList_template tmp_31;
tmp_31.set_size(1);
tmp_31[0] = f__getAnnouncementTargetPoA(cs_5, OneM2M__Pixits::PX__AE2__ADDRESS, cs_3);
p__ae2Index = f__cse__createResource(OneM2M__Types::ResourceType::int2, OneM2M__Templates::m__createAe(OneM2M__Pixits::PX__APP__ID, OneM2M__Templates::m__createAe_p__accessControlPolicyIds_defval, UNIVERSAL_CHARSTRING_template(OneM2M__Pixits::PX__AE2__ID__STEM), UNIVERSAL_CHARSTRING_template(cs_4), tmp_31), -1);
}
current_location.update_lineno(330);
#line 330 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__createRequestPrimitive.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription)) {
current_location.update_lineno(331);
#line 331 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::ListOfURIs_template& tmp_33 = p__createRequestPrimitive.primitiveContent().subscription().notificationURI();
tmp_33.remove_all_permutations();
tmp_33.set_size(1);
tmp_33[0] = f__getResourceAddress(INTEGER(p__ae2Index));
}
}
current_location.update_lineno(333);
#line 333 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
start_f__cse__notifyProcedure__subscriptionVerificationHandler(p__notifyHandler, p__aeIndex, p__responseStatusCode);
}
}

void f__cse__postamble__deleteResources()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 345, TTCN_Location::LOCATION_FUNCTION, "f_cse_postamble_deleteResources");
current_location.update_lineno(346);
#line 346 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(347);
#line 347 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
UNIVERSAL_CHARSTRING v__resourceAddress;
current_location.update_lineno(348);
#line 348 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(350);
#line 350 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (OneM2M__Pixits::PX__RUN__POSTAMBLE) {
current_location.update_lineno(352);
#line 352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = (OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted.lengthof() - 1);
current_location.update_lineno(352);
#line 352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(352);
#line 352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i >= 0)) break;
current_location.update_lineno(354);
#line 354 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = f__getResourceAddress(INTEGER(const_cast< const OneM2M__Types::IntegerList&>(OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted)[i]));
current_location.update_lineno(356);
#line 356 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__delete(v__resourceAddress, f__getOriginator(INTEGER(const_cast< const OneM2M__Types::IntegerList&>(OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted)[i]), f__getOriginator_p__testSystemRole_defval)).valueof();
current_location.update_lineno(358);
#line 358 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request.from__() = f__getOriginator(INTEGER(const_cast< const OneM2M__Types::IntegerList&>(OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted)[i]), f__getOriginator_p__testSystemRole_defval);
current_location.update_lineno(360);
#line 360 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(362);
#line 362 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(363);
#line 363 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_38:
alt_status tmp_38_alt_flag_0 = ALT_MAYBE;
alt_status tmp_38_alt_flag_1 = ALT_MAYBE;
alt_status tmp_38_alt_flag_2 = ALT_MAYBE;
alt_status tmp_38_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_38_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(364);
#line 364 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_38_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_38_alt_flag_0 == ALT_YES) {
current_location.update_lineno(365);
#line 365 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(366);
#line 366 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_6 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
break;
}
}
if (tmp_38_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(368);
#line 368 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_38_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_38_alt_flag_1 == ALT_YES) {
current_location.update_lineno(369);
#line 369 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(370);
#line 370 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_8 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
break;
}
}
if (tmp_38_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(372);
#line 372 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_38_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_38_alt_flag_2 == ALT_YES) {
current_location.update_lineno(373);
#line 373 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_9 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
break;
}
}
if (tmp_38_default_flag == ALT_MAYBE) {
tmp_38_default_flag = TTCN_Default::try_altsteps();
if (tmp_38_default_flag == ALT_YES || tmp_38_default_flag == ALT_BREAK) break;
else if (tmp_38_default_flag == ALT_REPEAT) goto tmp_38;
}
current_location.update_lineno(363);
#line 363 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_38_alt_flag_0 == ALT_NO && tmp_38_alt_flag_1 == ALT_NO && tmp_38_alt_flag_2 == ALT_NO && tmp_38_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 363 and 375.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(352);
#line 352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_39;
--i;
}
}
}
current_location.update_lineno(380);
#line 380 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cse__postamble__default();
}

void start_f__cse__postamble__deleteResources(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_postamble_deleteResources(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_postamble_deleteResources", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__postamble__default()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 387, TTCN_Location::LOCATION_FUNCTION, "f_cse_postamble_default");
}

void start_f__cse__postamble__default(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_postamble_default(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_postamble_default", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__is__component__done(const COMPONENT& p__notifyHandler)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 390, TTCN_Location::LOCATION_FUNCTION, "f_is_component_done");
current_location.update_lineno(392);
#line 392 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start(1.0e1);
current_location.update_lineno(393);
#line 393 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_40:
alt_status tmp_40_alt_flag_0 = ALT_MAYBE;
alt_status tmp_40_alt_flag_1 = ALT_MAYBE;
alt_status tmp_40_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_40_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(394);
#line 394 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_40_alt_flag_0 = p__notifyHandler.done(NULL);
if (tmp_40_alt_flag_0 == ALT_REPEAT) goto tmp_40;
if (tmp_40_alt_flag_0 == ALT_YES) {
current_location.update_lineno(395);
#line 395 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
break;
}
}
if (tmp_40_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(397);
#line 397 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_40_alt_flag_1 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_40_alt_flag_1 == ALT_YES) {
current_location.update_lineno(398);
#line 398 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_is_component_doneINFO: Notify verification not received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_40_default_flag == ALT_MAYBE) {
tmp_40_default_flag = TTCN_Default::try_altsteps();
if (tmp_40_default_flag == ALT_YES || tmp_40_default_flag == ALT_BREAK) break;
else if (tmp_40_default_flag == ALT_REPEAT) goto tmp_40;
}
current_location.update_lineno(393);
#line 393 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_40_alt_flag_0 == ALT_NO && tmp_40_alt_flag_1 == ALT_NO && tmp_40_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 393 and 400.");
TTCN_Snapshot::take_new(TRUE);
}
}
}

void start_f__is__component__done(const COMPONENT& component_reference, const COMPONENT& p__notifyHandler)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_is_component_done(");
p__notifyHandler.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_is_component_done", text_buf);
p__notifyHandler.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__createResource(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const INTEGER& p__parentIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 416, TTCN_Location::LOCATION_FUNCTION, "f_cse_createResource");
current_location.update_lineno(418);
#line 418 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(419);
#line 419 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(420);
#line 420 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__resourceIndex(-1);
current_location.update_lineno(421);
#line 421 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
TTCN_Logger::log_event_str("f_cse_createResource-look HERE ______________:");
int2str(p__parentIndex).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(422);
#line 422 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = f__getCreateRequestPrimitive(p__resourceType, p__requestPrimitive, p__parentIndex);
current_location.update_lineno(424);
#line 424 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(425);
#line 425 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(426);
#line 426 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_42:
alt_status tmp_42_alt_flag_0 = ALT_MAYBE;
alt_status tmp_42_alt_flag_1 = ALT_MAYBE;
alt_status tmp_42_alt_flag_2 = ALT_MAYBE;
alt_status tmp_42_alt_flag_3 = ALT_MAYBE;
alt_status tmp_42_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_42_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(427);
#line 427 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_42_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_42_alt_flag_0 == ALT_YES) {
current_location.update_lineno(428);
#line 428 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(429);
#line 429 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),((cs_10 + int2str(OneM2M__Types::ResourceType::enum2int(p__resourceType))) + cs_11).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(430);
#line 430 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkAttributesToBeSaved(p__resourceType, v__request, v__response.primitive().responsePrimitive());
current_location.update_lineno(431);
#line 431 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceIndex = f__setResource(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent(), p__resourceType, p__parentIndex);
break;
}
}
if (tmp_42_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(433);
#line 433 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_42_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_42_alt_flag_1 == ALT_YES) {
current_location.update_lineno(434);
#line 434 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(435);
#line 435 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(cs_12 + int2str(OneM2M__Types::ResourceType::enum2int(p__resourceType))).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_42_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(437);
#line 437 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_42_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_42_alt_flag_2 == ALT_YES) {
current_location.update_lineno(438);
#line 438 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(439);
#line 439 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_createResource:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_42_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(441);
#line 441 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_42_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_42_alt_flag_3 == ALT_YES) {
current_location.update_lineno(442);
#line 442 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(cs_13 + int2str(OneM2M__Types::ResourceType::enum2int(p__resourceType))).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_42_default_flag == ALT_MAYBE) {
tmp_42_default_flag = TTCN_Default::try_altsteps();
if (tmp_42_default_flag == ALT_YES || tmp_42_default_flag == ALT_BREAK) break;
else if (tmp_42_default_flag == ALT_REPEAT) goto tmp_42;
}
current_location.update_lineno(426);
#line 426 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_42_alt_flag_0 == ALT_NO && tmp_42_alt_flag_1 == ALT_NO && tmp_42_alt_flag_2 == ALT_NO && tmp_42_alt_flag_3 == ALT_NO && tmp_42_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 426 and 444.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(446);
#line 446 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(448);
#line 448 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceIndex;
}

void start_f__cse__createResource(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const INTEGER& p__parentIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createResource(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_createResource", text_buf);
p__resourceType.encode_text(text_buf);
p__requestPrimitive.encode_text(text_buf);
p__parentIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__createAccessControlPolicyAux(const UNIVERSAL_CHARSTRING_template& p__acpName, const OneM2M__Types::ListOfURIs_template& , const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 459, TTCN_Location::LOCATION_FUNCTION, "f_cse_createAccessControlPolicyAux");
current_location.update_lineno(460);
#line 460 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(461);
#line 461 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(462);
#line 462 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__acpAuxIndex(-1);
current_location.update_lineno(464);
#line 464 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__createAcpAux(p__acpName, OneM2M__Templates::m__createAcpAux_p__acor_defval, p__allowedOperations).valueof();
current_location.update_lineno(466);
#line 466 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = f__getCreateRequestPrimitive(OneM2M__Types::ResourceType::int1, OneM2M__Types::RequestPrimitive_template(v__request), -1);
current_location.update_lineno(468);
#line 468 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(469);
#line 469 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(470);
#line 470 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_46:
alt_status tmp_46_alt_flag_0 = ALT_MAYBE;
alt_status tmp_46_alt_flag_1 = ALT_MAYBE;
alt_status tmp_46_alt_flag_2 = ALT_MAYBE;
alt_status tmp_46_alt_flag_3 = ALT_MAYBE;
alt_status tmp_46_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_46_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(471);
#line 471 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_46_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_46_alt_flag_0 == ALT_YES) {
current_location.update_lineno(472);
#line 472 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(473);
#line 473 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_createAccessControlPolicyAux:INFO: Resource type 1 created successfuly"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(474);
#line 474 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkAttributesToBeSaved(OneM2M__Types::ResourceType::int1, v__request, v__response.primitive().responsePrimitive());
current_location.update_lineno(475);
#line 475 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__acpAuxIndex = f__setResource(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent(), OneM2M__Types::ResourceType::int1, f__setResource_p__parentIndex_defval);
current_location.update_lineno(476);
#line 476 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex = v__acpAuxIndex;
break;
}
}
if (tmp_46_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(478);
#line 478 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_46_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_46_alt_flag_1 == ALT_YES) {
current_location.update_lineno(479);
#line 479 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(480);
#line 480 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_createAccessControlPolicyAux:INFO: Error while creating resource type 1"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_46_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(482);
#line 482 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_46_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_46_alt_flag_2 == ALT_YES) {
current_location.update_lineno(483);
#line 483 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(484);
#line 484 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_createAccessControlPolicyAux:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_46_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(486);
#line 486 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_46_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_46_alt_flag_3 == ALT_YES) {
current_location.update_lineno(487);
#line 487 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_createAccessControlPolicyAux:INFO: No answer while creating resource type 1"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_46_default_flag == ALT_MAYBE) {
tmp_46_default_flag = TTCN_Default::try_altsteps();
if (tmp_46_default_flag == ALT_YES || tmp_46_default_flag == ALT_BREAK) break;
else if (tmp_46_default_flag == ALT_REPEAT) goto tmp_46;
}
current_location.update_lineno(470);
#line 470 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_46_alt_flag_0 == ALT_NO && tmp_46_alt_flag_1 == ALT_NO && tmp_46_alt_flag_2 == ALT_NO && tmp_46_alt_flag_3 == ALT_NO && tmp_46_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 470 and 489.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(491);
#line 491 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(493);
#line 493 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__acpAuxIndex;
}

void start_f__cse__createAccessControlPolicyAux(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING_template& p__acpName, const OneM2M__Types::ListOfURIs_template& p__acor, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createAccessControlPolicyAux(");
p__acpName.log();
TTCN_Logger::log_event_str(", ");
p__acor.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_createAccessControlPolicyAux", text_buf);
p__acpName.encode_text(text_buf);
p__acor.encode_text(text_buf);
p__allowedOperations.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__createContainerResourceAux(const INTEGER& p__parentIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 504, TTCN_Location::LOCATION_FUNCTION, "f_cse_createContainerResourceAux");
current_location.update_lineno(506);
#line 506 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(507);
#line 507 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__acpAuxIndex(-1);
current_location.update_lineno(508);
#line 508 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__containerResourceIndex(-1);
current_location.update_lineno(510);
#line 510 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__acpAuxIndex = f__cse__createAccessControlPolicyAux(UNIVERSAL_CHARSTRING_template(OneM2M__TypesAndValues::c__acpAuxName), f__cse__createAccessControlPolicyAux_p__acor_defval, f__cse__createAccessControlPolicyAux_p__allowedOperations_defval);
current_location.update_lineno(512);
#line 512 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__createContainerBase.valueof();
current_location.update_lineno(513);
#line 513 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::AcpType& tmp_52 = v__request.primitiveContent()().container().accessControlPolicyIDs(); /* 7388 */
tmp_52.set_size(1);
tmp_52[0] = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[v__acpAuxIndex].resource());
}
current_location.update_lineno(514);
#line 514 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request.primitiveContent()().container().resourceName() = cs_14;
current_location.update_lineno(516);
#line 516 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__containerResourceIndex = f__cse__createResource(OneM2M__Types::ResourceType::int3, OneM2M__Types::RequestPrimitive_template(v__request), p__parentIndex);
current_location.update_lineno(518);
#line 518 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__containerResourceIndex;
}

void start_f__cse__createContainerResourceAux(const COMPONENT& component_reference, const INTEGER& p__parentIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createContainerResourceAux(");
p__parentIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_createContainerResourceAux", text_buf);
p__parentIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__updateResource(const OneM2M__Types::RequestPrimitive& p__requestPrimitive)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 527, TTCN_Location::LOCATION_FUNCTION, "f_cse_updateResource");
current_location.update_lineno(528);
#line 528 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(530);
#line 530 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(p__requestPrimitive), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(531);
#line 531 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(532);
#line 532 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_55:
alt_status tmp_55_alt_flag_0 = ALT_MAYBE;
alt_status tmp_55_alt_flag_1 = ALT_MAYBE;
alt_status tmp_55_alt_flag_2 = ALT_MAYBE;
alt_status tmp_55_alt_flag_3 = ALT_MAYBE;
alt_status tmp_55_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_55_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(533);
#line 533 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_55_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_55_alt_flag_0 == ALT_YES) {
current_location.update_lineno(534);
#line 534 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(535);
#line 535 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_updateResource:INFO: Attribute of resource updated successfuly"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_55_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(537);
#line 537 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_55_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), &(v__response), any_compref, NULL, NULL);
if (tmp_55_alt_flag_1 == ALT_YES) {
current_location.update_lineno(538);
#line 538 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(539);
#line 539 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_updateResource:INFO: Error while updating resource"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_55_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(541);
#line 541 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_55_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_55_alt_flag_2 == ALT_YES) {
current_location.update_lineno(542);
#line 542 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(543);
#line 543 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_updateResource:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_55_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(545);
#line 545 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_55_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_55_alt_flag_3 == ALT_YES) {
current_location.update_lineno(546);
#line 546 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_updateResource:INFO: No answer while updating resource"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_55_default_flag == ALT_MAYBE) {
tmp_55_default_flag = TTCN_Default::try_altsteps();
if (tmp_55_default_flag == ALT_YES || tmp_55_default_flag == ALT_BREAK) break;
else if (tmp_55_default_flag == ALT_REPEAT) goto tmp_55;
}
current_location.update_lineno(532);
#line 532 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_55_alt_flag_0 == ALT_NO && tmp_55_alt_flag_1 == ALT_NO && tmp_55_alt_flag_2 == ALT_NO && tmp_55_alt_flag_3 == ALT_NO && tmp_55_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 532 and 548.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(550);
#line 550 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
}

void start_f__cse__updateResource(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive& p__requestPrimitive)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_updateResource(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_updateResource", text_buf);
p__requestPrimitive.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

OneM2M__Types::PrimitiveContent f__cse__retrieveResource(const INTEGER& p__resourceIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 559, TTCN_Location::LOCATION_FUNCTION, "f_cse_retrieveResource");
current_location.update_lineno(560);
#line 560 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(562);
#line 562 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Templates::m__retrieveResource(f__getResourceAddress(p__resourceIndex), f__getOriginator(p__resourceIndex, f__getOriginator_p__testSystemRole_defval)), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(563);
#line 563 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(564);
#line 564 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_56:
alt_status tmp_56_alt_flag_0 = ALT_MAYBE;
alt_status tmp_56_alt_flag_1 = ALT_MAYBE;
alt_status tmp_56_alt_flag_2 = ALT_MAYBE;
alt_status tmp_56_alt_flag_3 = ALT_MAYBE;
alt_status tmp_56_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_56_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(565);
#line 565 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_56_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_56_alt_flag_0 == ALT_YES) {
current_location.update_lineno(566);
#line 566 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(567);
#line 567 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_retrieveResource:INFO: Resource retrieved successfuly"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_56_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(569);
#line 569 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_56_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), &(v__response), any_compref, NULL, NULL);
if (tmp_56_alt_flag_1 == ALT_YES) {
current_location.update_lineno(570);
#line 570 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(571);
#line 571 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_retrieveResource:INFO: Error while retrieving resource"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_56_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(573);
#line 573 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_56_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_56_alt_flag_2 == ALT_YES) {
current_location.update_lineno(574);
#line 574 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(575);
#line 575 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_retrieveResource:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_56_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(577);
#line 577 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_56_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_56_alt_flag_3 == ALT_YES) {
current_location.update_lineno(578);
#line 578 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_retrieveResource:INFO: No answer while retrieving resource"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_56_default_flag == ALT_MAYBE) {
tmp_56_default_flag = TTCN_Default::try_altsteps();
if (tmp_56_default_flag == ALT_YES || tmp_56_default_flag == ALT_BREAK) break;
else if (tmp_56_default_flag == ALT_REPEAT) goto tmp_56;
}
current_location.update_lineno(564);
#line 564 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_56_alt_flag_0 == ALT_NO && tmp_56_alt_flag_1 == ALT_NO && tmp_56_alt_flag_2 == ALT_NO && tmp_56_alt_flag_3 == ALT_NO && tmp_56_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 564 and 580.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(582);
#line 582 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(584);
#line 584 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent()();
}

void start_f__cse__retrieveResource(const COMPONENT& component_reference, const INTEGER& p__resourceIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_retrieveResource(");
p__resourceIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_retrieveResource", text_buf);
p__resourceIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__deleteResource(const INTEGER& p__index, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 593, TTCN_Location::LOCATION_FUNCTION, "f_cse_deleteResource");
current_location.update_lineno(594);
#line 594 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(596);
#line 596 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((!(p__requestPrimitive.is_value()))) {
current_location.update_lineno(597);
#line 597 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__delete(f__getResourceAddress(p__index), f__getOriginator(p__index, f__getOriginator_p__testSystemRole_defval)).valueof();
}
else {
current_location.update_lineno(599);
#line 599 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = p__requestPrimitive.valueof();
}
current_location.update_lineno(602);
#line 602 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(604);
#line 604 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(605);
#line 605 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_59:
alt_status tmp_59_alt_flag_0 = ALT_MAYBE;
alt_status tmp_59_alt_flag_1 = ALT_MAYBE;
alt_status tmp_59_alt_flag_2 = ALT_MAYBE;
alt_status tmp_59_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_59_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(606);
#line 606 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_59_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_59_alt_flag_0 == ALT_YES) {
current_location.update_lineno(607);
#line 607 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(608);
#line 608 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),((cs_15 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()) + cs_7).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(610);
#line 610 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__removeElementFromList(OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted, p__index);
break;
}
}
if (tmp_59_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(612);
#line 612 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_59_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_59_alt_flag_1 == ALT_YES) {
current_location.update_lineno(613);
#line 613 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(614);
#line 614 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(cs_16 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_59_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(616);
#line 616 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_59_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_59_alt_flag_2 == ALT_YES) {
current_location.update_lineno(617);
#line 617 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(cs_17 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_59_default_flag == ALT_MAYBE) {
tmp_59_default_flag = TTCN_Default::try_altsteps();
if (tmp_59_default_flag == ALT_YES || tmp_59_default_flag == ALT_BREAK) break;
else if (tmp_59_default_flag == ALT_REPEAT) goto tmp_59;
}
current_location.update_lineno(605);
#line 605 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_59_alt_flag_0 == ALT_NO && tmp_59_alt_flag_1 == ALT_NO && tmp_59_alt_flag_2 == ALT_NO && tmp_59_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 605 and 619.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(621);
#line 621 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
}

void start_f__cse__deleteResource(const COMPONENT& component_reference, const INTEGER& p__index, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_deleteResource(");
p__index.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_deleteResource", text_buf);
p__index.encode_text(text_buf);
p__requestPrimitive.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isResourcePresent(const INTEGER& p__resourceIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 630, TTCN_Location::LOCATION_FUNCTION, "f_isResourcePresent");
current_location.update_lineno(633);
#line 633 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Templates::m__retrieveResource(f__getResourceAddress(p__resourceIndex), f__getOriginator(p__resourceIndex, f__getOriginator_p__testSystemRole_defval)), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(634);
#line 634 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(635);
#line 635 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_60:
alt_status tmp_60_alt_flag_0 = ALT_MAYBE;
alt_status tmp_60_alt_flag_1 = ALT_MAYBE;
alt_status tmp_60_alt_flag_2 = ALT_MAYBE;
alt_status tmp_60_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_60_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(636);
#line 636 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_60_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitive(OneM2M__Types::ResponseStatusCode_template(OneM2M__Types::ResponseStatusCode::int2000), OneM2M__Templates::mw__responsePrimitive_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_60_alt_flag_0 == ALT_YES) {
current_location.update_lineno(637);
#line 637 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(638);
#line 638 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),((TTCN_Runtime::get_testcasename() + cs_18) + f__getResourceAddress(p__resourceIndex)).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(639);
#line 639 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
}
if (tmp_60_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(641);
#line 641 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_60_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitive(OneM2M__Types::ResponseStatusCode_template(ANY_VALUE), OneM2M__Templates::mw__responsePrimitive_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_60_alt_flag_1 == ALT_YES) {
current_location.update_lineno(642);
#line 642 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(643);
#line 643 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(TTCN_Runtime::get_testcasename() + cs_19).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(644);
#line 644 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
if (tmp_60_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(646);
#line 646 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_60_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_60_alt_flag_2 == ALT_YES) {
current_location.update_lineno(647);
#line 647 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(TTCN_Runtime::get_testcasename() + cs_20).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(648);
#line 648 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
if (tmp_60_default_flag == ALT_MAYBE) {
tmp_60_default_flag = TTCN_Default::try_altsteps();
if (tmp_60_default_flag == ALT_YES || tmp_60_default_flag == ALT_BREAK) break;
else if (tmp_60_default_flag == ALT_REPEAT) goto tmp_60;
}
current_location.update_lineno(635);
#line 635 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_60_alt_flag_0 == ALT_NO && tmp_60_alt_flag_1 == ALT_NO && tmp_60_alt_flag_2 == ALT_NO && tmp_60_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 635 and 650.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(651);
#line 651 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}

void start_f__isResourcePresent(const COMPONENT& component_reference, const INTEGER& p__resourceIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isResourcePresent(");
p__resourceIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isResourcePresent", text_buf);
p__resourceIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isResourceNotPresent(const INTEGER& p__parentIndex, const UNIVERSAL_CHARSTRING& p__resourceName)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 660, TTCN_Location::LOCATION_FUNCTION, "f_isResourceNotPresent");
current_location.update_lineno(662);
#line 662 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(TTCN_Runtime::get_testcasename() + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(663);
#line 663 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Types::AddressingMethod::e__hierarchical;
current_location.update_lineno(665);
#line 665 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Templates::m__retrieveResource(((f__getResourceAddress(p__parentIndex) + cs_22) + p__resourceName), f__getOriginator(p__parentIndex, f__getOriginator_p__testSystemRole_defval)), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(666);
#line 666 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(667);
#line 667 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_62:
alt_status tmp_62_alt_flag_0 = ALT_MAYBE;
alt_status tmp_62_alt_flag_1 = ALT_MAYBE;
alt_status tmp_62_alt_flag_2 = ALT_MAYBE;
alt_status tmp_62_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_62_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(668);
#line 668 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_62_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitive(OneM2M__Types::ResponseStatusCode_template(OneM2M__Types::ResponseStatusCode::int4004), OneM2M__Templates::mw__responsePrimitive_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_62_alt_flag_0 == ALT_YES) {
current_location.update_lineno(669);
#line 669 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(670);
#line 670 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),(TTCN_Runtime::get_testcasename() + cs_23).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(671);
#line 671 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Pixits::PX__ADDRESSING__METHOD;
current_location.update_lineno(672);
#line 672 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
}
if (tmp_62_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(674);
#line 674 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_62_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitive(OneM2M__Types::ResponseStatusCode_template(ANY_VALUE), OneM2M__Templates::mw__responsePrimitive_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_62_alt_flag_1 == ALT_YES) {
current_location.update_lineno(675);
#line 675 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(676);
#line 676 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(TTCN_Runtime::get_testcasename() + cs_19).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(677);
#line 677 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Pixits::PX__ADDRESSING__METHOD;
current_location.update_lineno(678);
#line 678 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
if (tmp_62_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(680);
#line 680 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_62_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_62_alt_flag_2 == ALT_YES) {
current_location.update_lineno(681);
#line 681 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),(TTCN_Runtime::get_testcasename() + cs_20).log(),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(682);
#line 682 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Pixits::PX__ADDRESSING__METHOD;
current_location.update_lineno(683);
#line 683 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
if (tmp_62_default_flag == ALT_MAYBE) {
tmp_62_default_flag = TTCN_Default::try_altsteps();
if (tmp_62_default_flag == ALT_YES || tmp_62_default_flag == ALT_BREAK) break;
else if (tmp_62_default_flag == ALT_REPEAT) goto tmp_62;
}
current_location.update_lineno(667);
#line 667 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_62_alt_flag_0 == ALT_NO && tmp_62_alt_flag_1 == ALT_NO && tmp_62_alt_flag_2 == ALT_NO && tmp_62_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 667 and 685.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(686);
#line 686 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}

void start_f__isResourceNotPresent(const COMPONENT& component_reference, const INTEGER& p__parentIndex, const UNIVERSAL_CHARSTRING& p__resourceName)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isResourceNotPresent(");
p__parentIndex.log();
TTCN_Logger::log_event_str(", ");
p__resourceName.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isResourceNotPresent", text_buf);
p__parentIndex.encode_text(text_buf);
p__resourceName.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__updateAcpAuxResource(const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 694, TTCN_Location::LOCATION_FUNCTION, "f_cse_updateAcpAuxResource");
current_location.update_lineno(695);
#line 695 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(697);
#line 697 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = OneM2M__Templates::m__updateAcpBase.valueof();
current_location.update_lineno(699);
#line 699 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request.to__() = f__getResourceAddress(INTEGER(OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex));
current_location.update_lineno(700);
#line 700 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request.from__() = f__getOriginator(INTEGER(OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex), f__getOriginator_p__testSystemRole_defval);
current_location.update_lineno(701);
#line 701 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::SetOfAcrs_accessControlRule__list& tmp_70 = v__request.primitiveContent()().accessControlPolicy().privileges()().accessControlRule__list(); /* 7388 */
tmp_70.set_size(1);
{
OneM2M__Types::AccessControlRule& tmp_71 = tmp_70[0];
tmp_71.accessControlOriginators() = OneM2M__Pixits::PX__ACOR;
tmp_71.accessControlOperations() = p__allowedOperations.valueof();
tmp_71.accessControlContexts__list() = NULL_VALUE;
tmp_71.accessControlAuthenticationFlag() = OMIT_VALUE;
tmp_71.accessControlObjectDetails__list() = NULL_VALUE;
}
}
current_location.update_lineno(711);
#line 711 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(712);
#line 712 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(713);
#line 713 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_72:
alt_status tmp_72_alt_flag_0 = ALT_MAYBE;
alt_status tmp_72_alt_flag_1 = ALT_MAYBE;
alt_status tmp_72_alt_flag_2 = ALT_MAYBE;
alt_status tmp_72_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_72_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(714);
#line 714 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_72_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), NULL, any_compref, NULL, NULL);
if (tmp_72_alt_flag_0 == ALT_YES) {
current_location.update_lineno(715);
#line 715 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(716);
#line 716 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),((cs_24 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()) + cs_25).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_72_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(718);
#line 718 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_72_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_72_alt_flag_1 == ALT_YES) {
current_location.update_lineno(719);
#line 719 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(720);
#line 720 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),((cs_26 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()) + cs_27).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_72_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(722);
#line 722 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_72_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_72_alt_flag_2 == ALT_YES) {
current_location.update_lineno(723);
#line 723 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),((cs_28 + const_cast< const OneM2M__Types::RequestPrimitive&>(v__request).to__()) + cs_27).log(),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_72_default_flag == ALT_MAYBE) {
tmp_72_default_flag = TTCN_Default::try_altsteps();
if (tmp_72_default_flag == ALT_YES || tmp_72_default_flag == ALT_BREAK) break;
else if (tmp_72_default_flag == ALT_REPEAT) goto tmp_72;
}
current_location.update_lineno(713);
#line 713 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_72_alt_flag_0 == ALT_NO && tmp_72_alt_flag_1 == ALT_NO && tmp_72_alt_flag_2 == ALT_NO && tmp_72_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 713 and 725.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(727);
#line 727 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
}

void start_f__cse__updateAcpAuxResource(const COMPONENT& component_reference, const OneM2M__Types::AccessControlOperations_template& p__allowedOperations)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_updateAcpAuxResource(");
p__allowedOperations.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_updateAcpAuxResource", text_buf);
p__allowedOperations.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__resourceAnnouncementHandler(const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 737, TTCN_Location::LOCATION_FUNCTION, "f_cse_resourceAnnouncementHandler");
current_location.update_lineno(739);
#line 739 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
current_location.update_lineno(740);
#line 740 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::ResponsePrimitive v__responsePrimitive;
current_location.update_lineno(742);
#line 742 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(743);
#line 743 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(745);
#line 745 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(746);
#line 746 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_73:
alt_status tmp_73_alt_flag_0 = ALT_MAYBE;
alt_status tmp_73_alt_flag_1 = ALT_MAYBE;
alt_status tmp_73_alt_flag_2 = ALT_MAYBE;
alt_status tmp_73_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_73_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(747);
#line 747 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_73_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__create(p__from, p__to)), &(v__request), any_compref, NULL, NULL);
if (tmp_73_alt_flag_0 == ALT_YES) {
current_location.update_lineno(748);
#line 748 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(749);
#line 749 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_resourceAnnouncementHandler:INFO: Announcement received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(750);
#line 750 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__responsePrimitive = f__getCreateResponsePrimitive(const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive().resourceType(), OneM2M__Types::RequestPrimitive_template(const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive()));
current_location.update_lineno(751);
#line 751 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Types::ResponsePrimitive_template(v__responsePrimitive), OneM2M__Templates::m__response_p__forcedFields_defval));
break;
}
}
if (tmp_73_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(753);
#line 753 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_73_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_73_alt_flag_1 == ALT_YES) {
current_location.update_lineno(754);
#line 754 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(755);
#line 755 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_resourceAnnouncementHandler:ERROR: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_73_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(757);
#line 757 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_73_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_73_alt_flag_2 == ALT_YES) {
current_location.update_lineno(758);
#line 758 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_resourceAnnouncementHandler:ERROR:  No announcement received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_73_default_flag == ALT_MAYBE) {
tmp_73_default_flag = TTCN_Default::try_altsteps();
if (tmp_73_default_flag == ALT_YES || tmp_73_default_flag == ALT_BREAK) break;
else if (tmp_73_default_flag == ALT_REPEAT) goto tmp_73;
}
current_location.update_lineno(746);
#line 746 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_73_alt_flag_0 == ALT_NO && tmp_73_alt_flag_1 == ALT_NO && tmp_73_alt_flag_2 == ALT_NO && tmp_73_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 746 and 760.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(762);
#line 762 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mccPort.get_name(), SYSTEM_COMPREF, "mccPort");
current_location.update_lineno(763);
#line 763 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__resourceAnnouncementHandler(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING_template& p__from, const UNIVERSAL_CHARSTRING_template& p__to)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_resourceAnnouncementHandler(");
p__from.log();
TTCN_Logger::log_event_str(", ");
p__to.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_resourceAnnouncementHandler", text_buf);
p__from.encode_text(text_buf);
p__to.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__checkAttributesToBeSaved(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive& p__request, OneM2M__Types::ResponsePrimitive& p__response)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 767, TTCN_Location::LOCATION_FUNCTION, "f_checkAttributesToBeSaved");
{
const OneM2M__Types::ResourceType &tmp_76 = p__resourceType;
current_location.update_lineno(769);
#line 769 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int1) goto tmp_75_0;
current_location.update_lineno(776);
#line 776 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int2) goto tmp_75_1;
current_location.update_lineno(783);
#line 783 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int3) goto tmp_75_2;
current_location.update_lineno(790);
#line 790 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int4) goto tmp_75_3;
current_location.update_lineno(797);
#line 797 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int15) goto tmp_75_4;
current_location.update_lineno(804);
#line 804 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int16) goto tmp_75_5;
current_location.update_lineno(811);
#line 811 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int18) goto tmp_75_6;
current_location.update_lineno(818);
#line 818 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int23) goto tmp_75_7;
current_location.update_lineno(825);
#line 825 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if(tmp_76 == OneM2M__Types::ResourceType::int9) goto tmp_75_8;
goto tmp_75_9;
tmp_75_0:
{
current_location.update_lineno(770);
#line 770 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_77;
tmp_77 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().accessControlPolicy().is_value();
if (tmp_77) {
boolean tmp_78 = p__response.is_bound();
if(tmp_78) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_79 = p__response.primitiveContent();
switch (tmp_79.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_78 = FALSE;
break;
default:
break;
}
if(tmp_78) {
const OneM2M__Types::PrimitiveContent& tmp_80 = (const OneM2M__Types::PrimitiveContent&) tmp_79;
tmp_78 = tmp_80.is_bound();
if(tmp_78) {
tmp_78 = tmp_80.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy);
}
if(tmp_78) {
const OneM2M__Types::PrimitiveContent& tmp_81 = tmp_80;
const OneM2M__Types::AccessControlPolicy__optional& tmp_82 = tmp_81.accessControlPolicy();
tmp_78 = tmp_82.is_bound();
if(tmp_78) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_83 = tmp_82.resourceName();
switch (tmp_83.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_78 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_78 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_84 = (const UNIVERSAL_CHARSTRING&) tmp_83;
tmp_78 = tmp_84.is_present();
break;}
}
}
}
}
}
tmp_77 = (!(tmp_78));
}
if (tmp_77) {
current_location.update_lineno(772);
#line 772 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().accessControlPolicy().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().accessControlPolicy().resourceName();
current_location.update_lineno(773);
#line 773 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().accessControlPolicy().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_1:
{
current_location.update_lineno(777);
#line 777 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_86;
tmp_86 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().aE().is_value();
if (tmp_86) {
boolean tmp_87 = p__response.is_bound();
if(tmp_87) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_88 = p__response.primitiveContent();
switch (tmp_88.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_87 = FALSE;
break;
default:
break;
}
if(tmp_87) {
const OneM2M__Types::PrimitiveContent& tmp_89 = (const OneM2M__Types::PrimitiveContent&) tmp_88;
tmp_87 = tmp_89.is_bound();
if(tmp_87) {
tmp_87 = tmp_89.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_87) {
const OneM2M__Types::PrimitiveContent& tmp_90 = tmp_89;
const OneM2M__Types::AE__optional& tmp_91 = tmp_90.aE();
tmp_87 = tmp_91.is_bound();
if(tmp_87) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_92 = tmp_91.resourceName();
switch (tmp_92.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_87 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_87 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_93 = (const UNIVERSAL_CHARSTRING&) tmp_92;
tmp_87 = tmp_93.is_present();
break;}
}
}
}
}
}
tmp_86 = (!(tmp_87));
}
if (tmp_86) {
current_location.update_lineno(779);
#line 779 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().aE().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().aE().resourceName();
current_location.update_lineno(780);
#line 780 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().aE().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_2:
{
current_location.update_lineno(784);
#line 784 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_95;
tmp_95 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().container().is_value();
if (tmp_95) {
boolean tmp_96 = p__response.is_bound();
if(tmp_96) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_97 = p__response.primitiveContent();
switch (tmp_97.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_96 = FALSE;
break;
default:
break;
}
if(tmp_96) {
const OneM2M__Types::PrimitiveContent& tmp_98 = (const OneM2M__Types::PrimitiveContent&) tmp_97;
tmp_96 = tmp_98.is_bound();
if(tmp_96) {
tmp_96 = tmp_98.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_96) {
const OneM2M__Types::PrimitiveContent& tmp_99 = tmp_98;
const OneM2M__Types::Container__optional& tmp_100 = tmp_99.container();
tmp_96 = tmp_100.is_bound();
if(tmp_96) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_101 = tmp_100.resourceName();
switch (tmp_101.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_96 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_96 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_102 = (const UNIVERSAL_CHARSTRING&) tmp_101;
tmp_96 = tmp_102.is_present();
break;}
}
}
}
}
}
tmp_95 = (!(tmp_96));
}
if (tmp_95) {
current_location.update_lineno(786);
#line 786 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().container().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().container().resourceName();
current_location.update_lineno(787);
#line 787 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().container().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_3:
{
current_location.update_lineno(791);
#line 791 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_104;
tmp_104 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().contentInstance().is_value();
if (tmp_104) {
boolean tmp_105 = p__response.is_bound();
if(tmp_105) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_106 = p__response.primitiveContent();
switch (tmp_106.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_105 = FALSE;
break;
default:
break;
}
if(tmp_105) {
const OneM2M__Types::PrimitiveContent& tmp_107 = (const OneM2M__Types::PrimitiveContent&) tmp_106;
tmp_105 = tmp_107.is_bound();
if(tmp_105) {
tmp_105 = tmp_107.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_105) {
const OneM2M__Types::PrimitiveContent& tmp_108 = tmp_107;
const OneM2M__Types::ContentInstance__optional& tmp_109 = tmp_108.contentInstance();
tmp_105 = tmp_109.is_bound();
if(tmp_105) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_110 = tmp_109.resourceName();
switch (tmp_110.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_105 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_105 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_111 = (const UNIVERSAL_CHARSTRING&) tmp_110;
tmp_105 = tmp_111.is_present();
break;}
}
}
}
}
}
tmp_104 = (!(tmp_105));
}
if (tmp_104) {
current_location.update_lineno(793);
#line 793 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().contentInstance().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().contentInstance().resourceName();
current_location.update_lineno(794);
#line 794 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().contentInstance().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_4:
{
current_location.update_lineno(798);
#line 798 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_113;
tmp_113 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().pollingChannel().is_value();
if (tmp_113) {
boolean tmp_114 = p__response.is_bound();
if(tmp_114) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_115 = p__response.primitiveContent();
switch (tmp_115.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_114 = FALSE;
break;
default:
break;
}
if(tmp_114) {
const OneM2M__Types::PrimitiveContent& tmp_116 = (const OneM2M__Types::PrimitiveContent&) tmp_115;
tmp_114 = tmp_116.is_bound();
if(tmp_114) {
tmp_114 = tmp_116.ischosen(OneM2M__Types::PrimitiveContent::ALT_pollingChannel);
}
if(tmp_114) {
const OneM2M__Types::PrimitiveContent& tmp_117 = tmp_116;
const OneM2M__Types::PollingChannel__optional& tmp_118 = tmp_117.pollingChannel();
tmp_114 = tmp_118.is_bound();
if(tmp_114) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_119 = tmp_118.resourceName();
switch (tmp_119.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_114 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_114 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_120 = (const UNIVERSAL_CHARSTRING&) tmp_119;
tmp_114 = tmp_120.is_present();
break;}
}
}
}
}
}
tmp_113 = (!(tmp_114));
}
if (tmp_113) {
current_location.update_lineno(800);
#line 800 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().pollingChannel().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().pollingChannel().resourceName();
current_location.update_lineno(801);
#line 801 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().pollingChannel().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_5:
{
current_location.update_lineno(805);
#line 805 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_122;
tmp_122 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().remoteCSE().is_value();
if (tmp_122) {
boolean tmp_123 = p__response.is_bound();
if(tmp_123) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_124 = p__response.primitiveContent();
switch (tmp_124.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_123 = FALSE;
break;
default:
break;
}
if(tmp_123) {
const OneM2M__Types::PrimitiveContent& tmp_125 = (const OneM2M__Types::PrimitiveContent&) tmp_124;
tmp_123 = tmp_125.is_bound();
if(tmp_123) {
tmp_123 = tmp_125.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_123) {
const OneM2M__Types::PrimitiveContent& tmp_126 = tmp_125;
const OneM2M__Types::RemoteCSE__optional& tmp_127 = tmp_126.remoteCSE();
tmp_123 = tmp_127.is_bound();
if(tmp_123) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_128 = tmp_127.resourceName();
switch (tmp_128.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_123 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_123 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_129 = (const UNIVERSAL_CHARSTRING&) tmp_128;
tmp_123 = tmp_129.is_present();
break;}
}
}
}
}
}
tmp_122 = (!(tmp_123));
}
if (tmp_122) {
current_location.update_lineno(807);
#line 807 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().remoteCSE().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().remoteCSE().resourceName();
current_location.update_lineno(808);
#line 808 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().remoteCSE().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_6:
{
current_location.update_lineno(812);
#line 812 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_131;
tmp_131 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().schedule().is_value();
if (tmp_131) {
boolean tmp_132 = p__response.is_bound();
if(tmp_132) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_133 = p__response.primitiveContent();
switch (tmp_133.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_132 = FALSE;
break;
default:
break;
}
if(tmp_132) {
const OneM2M__Types::PrimitiveContent& tmp_134 = (const OneM2M__Types::PrimitiveContent&) tmp_133;
tmp_132 = tmp_134.is_bound();
if(tmp_132) {
tmp_132 = tmp_134.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule);
}
if(tmp_132) {
const OneM2M__Types::PrimitiveContent& tmp_135 = tmp_134;
const OneM2M__Types::Schedule__optional& tmp_136 = tmp_135.schedule();
tmp_132 = tmp_136.is_bound();
if(tmp_132) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_137 = tmp_136.resourceName();
switch (tmp_137.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_132 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_132 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_138 = (const UNIVERSAL_CHARSTRING&) tmp_137;
tmp_132 = tmp_138.is_present();
break;}
}
}
}
}
}
tmp_131 = (!(tmp_132));
}
if (tmp_131) {
current_location.update_lineno(814);
#line 814 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().schedule().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().schedule().resourceName();
current_location.update_lineno(815);
#line 815 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().schedule().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_7:
{
current_location.update_lineno(819);
#line 819 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_140;
tmp_140 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().subscription().is_value();
if (tmp_140) {
boolean tmp_141 = p__response.is_bound();
if(tmp_141) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_142 = p__response.primitiveContent();
switch (tmp_142.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_141 = FALSE;
break;
default:
break;
}
if(tmp_141) {
const OneM2M__Types::PrimitiveContent& tmp_143 = (const OneM2M__Types::PrimitiveContent&) tmp_142;
tmp_141 = tmp_143.is_bound();
if(tmp_141) {
tmp_141 = tmp_143.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_141) {
const OneM2M__Types::PrimitiveContent& tmp_144 = tmp_143;
const OneM2M__Types::Subscription__optional& tmp_145 = tmp_144.subscription();
tmp_141 = tmp_145.is_bound();
if(tmp_141) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_146 = tmp_145.resourceName();
switch (tmp_146.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_141 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_141 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_147 = (const UNIVERSAL_CHARSTRING&) tmp_146;
tmp_141 = tmp_147.is_present();
break;}
}
}
}
}
}
tmp_140 = (!(tmp_141));
}
if (tmp_140) {
current_location.update_lineno(821);
#line 821 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().subscription().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().subscription().resourceName();
current_location.update_lineno(822);
#line 822 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().subscription().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_8:
{
current_location.update_lineno(826);
#line 826 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_149;
tmp_149 = const_cast< const OneM2M__Types::ResponsePrimitive&>(p__response).primitiveContent()().group__().is_value();
if (tmp_149) {
boolean tmp_150 = p__response.is_bound();
if(tmp_150) {
const OPTIONAL<OneM2M__Types::PrimitiveContent>& tmp_151 = p__response.primitiveContent();
switch (tmp_151.get_selection()) {
case OPTIONAL_UNBOUND:
case OPTIONAL_OMIT:
tmp_150 = FALSE;
break;
default:
break;
}
if(tmp_150) {
const OneM2M__Types::PrimitiveContent& tmp_152 = (const OneM2M__Types::PrimitiveContent&) tmp_151;
tmp_150 = tmp_152.is_bound();
if(tmp_150) {
tmp_150 = tmp_152.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_150) {
const OneM2M__Types::PrimitiveContent& tmp_153 = tmp_152;
const OneM2M__Types::Group__optional& tmp_154 = tmp_153.group__();
tmp_150 = tmp_154.is_bound();
if(tmp_150) {
const OPTIONAL<UNIVERSAL_CHARSTRING>& tmp_155 = tmp_154.resourceName();
switch (tmp_155.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_150 = FALSE;
break;
case OPTIONAL_OMIT:
tmp_150 = FALSE;
break;
default:
{
const UNIVERSAL_CHARSTRING& tmp_156 = (const UNIVERSAL_CHARSTRING&) tmp_155;
tmp_150 = tmp_156.is_present();
break;}
}
}
}
}
}
tmp_149 = (!(tmp_150));
}
if (tmp_149) {
current_location.update_lineno(828);
#line 828 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__response.primitiveContent()().group__().resourceName() = const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().group__().resourceName();
current_location.update_lineno(829);
#line 829 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
(cs_29 + const_cast< const OneM2M__Types::RequestPrimitive&>(p__request).primitiveContent()().group__().resourceName()()).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
}
goto tmp_75_end;
}
tmp_75_9:
{
current_location.update_lineno(833);
#line 833 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_30 + int2str(OneM2M__Types::ResourceType::enum2int(p__resourceType))) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
goto tmp_75_end;
}
tmp_75_end: /* empty */;
}
}

BOOLEAN f__compareURIs(const INTEGER& p__expectedURIIndex, const UNIVERSAL_CHARSTRING& p__receivedURI)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 840, TTCN_Location::LOCATION_FUNCTION, "f_compareURIs");
current_location.update_lineno(842);
#line 842 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
BOOLEAN v__matchResult(FALSE);
current_location.update_lineno(844);
#line 844 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isNonHierarchical(p__receivedURI)) {
current_location.update_lineno(845);
#line 845 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Types::AddressingMethod::e__nonHierarchical;
}
else {
current_location.update_lineno(846);
#line 846 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isHierarchical(p__receivedURI)) {
current_location.update_lineno(847);
#line 847 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Types::AddressingMethod::e__hierarchical;
}
}
current_location.update_lineno(849);
#line 849 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeCseRelative(p__receivedURI)) {
current_location.update_lineno(850);
#line 850 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__primitiveScope = OneM2M__Types::PrimitiveScope::e__cseRelative;
}
current_location.update_lineno(852);
#line 852 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeSpRelative(p__receivedURI)) {
current_location.update_lineno(853);
#line 853 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__primitiveScope = OneM2M__Types::PrimitiveScope::e__spRelative;
}
current_location.update_lineno(855);
#line 855 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeAbsolute(p__receivedURI)) {
current_location.update_lineno(856);
#line 856 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__primitiveScope = OneM2M__Types::PrimitiveScope::e__absolute;
}
current_location.update_lineno(859);
#line 859 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (UNIVERSAL_CHARSTRING_template(p__receivedURI).match(f__getResourceAddress(p__expectedURIIndex))) {
current_location.update_lineno(860);
#line 860 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = TRUE;
}
else {
current_location.update_lineno(862);
#line 862 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = FALSE;
}
current_location.update_lineno(865);
#line 865 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__primitiveScope = OneM2M__Pixits::PX__PRIMITIVE__SCOPE;
current_location.update_lineno(866);
#line 866 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_vc__addressingMethod = OneM2M__Pixits::PX__ADDRESSING__METHOD;
current_location.update_lineno(868);
#line 868 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__matchResult;
}

void start_f__compareURIs(const COMPONENT& component_reference, const INTEGER& p__expectedURIIndex, const UNIVERSAL_CHARSTRING& p__receivedURI)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_compareURIs(");
p__expectedURIIndex.log();
TTCN_Logger::log_event_str(", ");
p__receivedURI.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_compareURIs", text_buf);
p__expectedURIIndex.encode_text(text_buf);
p__receivedURI.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__notifyProcedure__subscriptionVerificationHandler(const INTEGER& , const OneM2M__Types::ResponseStatusCode& p__responseStatusCode)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 874, TTCN_Location::LOCATION_FUNCTION, "f_cse_notifyProcedure_subscriptionVerificationHandler");
current_location.update_lineno(876);
#line 876 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
current_location.update_lineno(877);
#line 877 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::ResponsePrimitive v__responsePrimitive;
current_location.update_lineno(878);
#line 878 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::Notification__1_template v__notificationRequest(OneM2M__Templates::mw__contentNotificationVerification);
current_location.update_lineno(880);
#line 880 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(881);
#line 881 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(890);
#line 890 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__responsePrimitive = OneM2M__Templates::m__responseNotification(p__responseStatusCode, OneM2M__Types::PrimitiveContent_template(OMIT_VALUE)).valueof();
current_location.update_lineno(892);
#line 892 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(893);
#line 893 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_168:
alt_status tmp_168_alt_flag_0 = ALT_MAYBE;
alt_status tmp_168_alt_flag_1 = ALT_MAYBE;
alt_status tmp_168_alt_flag_2 = ALT_MAYBE;
alt_status tmp_168_alt_flag_3 = ALT_MAYBE;
alt_status tmp_168_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_168_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(894);
#line 894 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_168_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__notify(OneM2M__Types::Notification__1_template(v__notificationRequest.valueof()))), &(v__request), any_compref, NULL, NULL);
if (tmp_168_alt_flag_0 == ALT_YES) {
current_location.update_lineno(895);
#line 895 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(896);
#line 896 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionVerificationHandler:INFO: Notification received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(897);
#line 897 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__responsePrimitive.requestIdentifier() = const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive().requestIdentifier();
current_location.update_lineno(908);
#line 908 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__httpResponse(OneM2M__Types::ResponsePrimitive_template(v__responsePrimitive), OneM2M__Templates::m__httpResponse_p__forcedFields_defval));
break;
}
}
if (tmp_168_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(910);
#line 910 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_168_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__notify(OneM2M__Templates::mw__contentNotification(OneM2M__Types::Representation_template(ANY_VALUE)))), &(v__request), any_compref, NULL, NULL);
if (tmp_168_alt_flag_1 == ALT_YES) {
current_location.update_lineno(911);
#line 911 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(912);
#line 912 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionVerificationHandler:ERROR: Notification received but verificationRequest isn't set to TRUE"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_168_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(914);
#line 914 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_168_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_168_alt_flag_2 == ALT_YES) {
current_location.update_lineno(915);
#line 915 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(916);
#line 916 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionVerificationHandler:ERROR: unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_168_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(918);
#line 918 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_168_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_168_alt_flag_3 == ALT_YES) {
current_location.update_lineno(919);
#line 919 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionVerificationHandler:ERROR:  No notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_168_default_flag == ALT_MAYBE) {
tmp_168_default_flag = TTCN_Default::try_altsteps();
if (tmp_168_default_flag == ALT_YES || tmp_168_default_flag == ALT_BREAK) break;
else if (tmp_168_default_flag == ALT_REPEAT) goto tmp_168;
}
current_location.update_lineno(893);
#line 893 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_168_alt_flag_0 == ALT_NO && tmp_168_alt_flag_1 == ALT_NO && tmp_168_alt_flag_2 == ALT_NO && tmp_168_alt_flag_3 == ALT_NO && tmp_168_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 893 and 921.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(925);
#line 925 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(926);
#line 926 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__notifyProcedure__subscriptionVerificationHandler(const COMPONENT& component_reference, const INTEGER& p__creatorIndex, const OneM2M__Types::ResponseStatusCode& p__responseStatusCode)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_subscriptionVerificationHandler(");
p__creatorIndex.log();
TTCN_Logger::log_event_str(", ");
p__responseStatusCode.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_notifyProcedure_subscriptionVerificationHandler", text_buf);
p__creatorIndex.encode_text(text_buf);
p__responseStatusCode.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__notifyProcedure__representationHandler(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 930, TTCN_Location::LOCATION_FUNCTION, "f_cse_notifyProcedure_representationHandler");
current_location.update_lineno(932);
#line 932 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
current_location.update_lineno(934);
#line 934 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(935);
#line 935 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(937);
#line 937 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(938);
#line 938 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_170:
alt_status tmp_170_alt_flag_0 = ALT_MAYBE;
alt_status tmp_170_alt_flag_1 = ALT_MAYBE;
alt_status tmp_170_alt_flag_2 = ALT_MAYBE;
alt_status tmp_170_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_170_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(939);
#line 939 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_170_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__notify(OneM2M__Templates::mw__contentNotification(OneM2M__Types::Representation_template(ANY_VALUE)))), &(v__request), any_compref, NULL, NULL);
if (tmp_170_alt_flag_0 == ALT_YES) {
current_location.update_lineno(940);
#line 940 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(941);
#line 941 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__check__notificationContent(const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive(), p__primitiveContent)) {
current_location.update_lineno(942);
#line 942 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_representationHandler:INFO: Notification received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(943);
#line 943 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Types::ResponsePrimitive_template(OneM2M__Templates::m__responseNotification(OneM2M__Types::ResponseStatusCode::int2001, OneM2M__Templates::m__responseNotification_p__notification_defval).valueof()), OneM2M__Templates::m__response_p__forcedFields_defval));
}
else {
current_location.update_lineno(946);
#line 946 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_representationHandler:ERROR: Notification received but the content doesn't match"),TTCN_Logger::end_event_log2str()));
}
break;
}
}
if (tmp_170_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(949);
#line 949 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_170_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_170_alt_flag_1 == ALT_YES) {
current_location.update_lineno(950);
#line 950 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(951);
#line 951 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_representationHandler:ERROR: unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_170_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(953);
#line 953 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_170_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_170_alt_flag_2 == ALT_YES) {
current_location.update_lineno(954);
#line 954 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_representationHandler:ERROR: No notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_170_default_flag == ALT_MAYBE) {
tmp_170_default_flag = TTCN_Default::try_altsteps();
if (tmp_170_default_flag == ALT_YES || tmp_170_default_flag == ALT_BREAK) break;
else if (tmp_170_default_flag == ALT_REPEAT) goto tmp_170;
}
current_location.update_lineno(938);
#line 938 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_170_alt_flag_0 == ALT_NO && tmp_170_alt_flag_1 == ALT_NO && tmp_170_alt_flag_2 == ALT_NO && tmp_170_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 938 and 956.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(959);
#line 959 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(960);
#line 960 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__notifyProcedure__representationHandler(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_representationHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_notifyProcedure_representationHandler", text_buf);
p__primitiveContent.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__notifyProcedure__aggregatedNoficationHandler(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent, const INTEGER& p__numberOfAggregatedNotification)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 964, TTCN_Location::LOCATION_FUNCTION, "f_cse_notifyProcedure_aggregatedNoficationHandler");
current_location.update_lineno(966);
#line 966 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(968);
#line 968 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(969);
#line 969 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(971);
#line 971 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(972);
#line 972 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_171:
alt_status tmp_171_alt_flag_0 = ALT_MAYBE;
alt_status tmp_171_alt_flag_1 = ALT_MAYBE;
alt_status tmp_171_alt_flag_2 = ALT_MAYBE;
alt_status tmp_171_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_171_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(973);
#line 973 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_171_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__aggregatedNotifyBase), &(v__response), any_compref, NULL, NULL);
if (tmp_171_alt_flag_0 == ALT_YES) {
current_location.update_lineno(974);
#line 974 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(975);
#line 975 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__numberOfAggregatedNotification == const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().requestPrimitive().primitiveContent()().aggregatedNotification().notification__list().lengthof())) {
current_location.update_lineno(976);
#line 976 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__check__notificationContent(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().requestPrimitive(), p__primitiveContent)) {
current_location.update_lineno(977);
#line 977 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_aggregatedNoficationHandler: Notification received"),TTCN_Logger::end_event_log2str()));
}
else {
current_location.update_lineno(980);
#line 980 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_aggregatedNoficationHandler: Notification received but the content doesn't match"),TTCN_Logger::end_event_log2str()));
}
}
else {
current_location.update_lineno(984);
#line 984 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_aggregatedNoficationHandler: Number of Notification in Aggregatednotification isn't right"),TTCN_Logger::end_event_log2str()));
}
break;
}
}
if (tmp_171_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(987);
#line 987 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_171_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_171_alt_flag_1 == ALT_YES) {
current_location.update_lineno(988);
#line 988 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(989);
#line 989 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_aggregatedNoficationHandler: Error, unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_171_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(991);
#line 991 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_171_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_171_alt_flag_2 == ALT_YES) {
current_location.update_lineno(992);
#line 992 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_aggregatedNoficationHandler: No notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_171_default_flag == ALT_MAYBE) {
tmp_171_default_flag = TTCN_Default::try_altsteps();
if (tmp_171_default_flag == ALT_YES || tmp_171_default_flag == ALT_BREAK) break;
else if (tmp_171_default_flag == ALT_REPEAT) goto tmp_171;
}
current_location.update_lineno(972);
#line 972 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_171_alt_flag_0 == ALT_NO && tmp_171_alt_flag_1 == ALT_NO && tmp_171_alt_flag_2 == ALT_NO && tmp_171_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 972 and 994.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(996);
#line 996 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(997);
#line 997 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__notifyProcedure__aggregatedNoficationHandler(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent, const INTEGER& p__numberOfAggregatedNotification)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_aggregatedNoficationHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(", ");
p__numberOfAggregatedNotification.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_notifyProcedure_aggregatedNoficationHandler", text_buf);
p__primitiveContent.encode_text(text_buf);
p__numberOfAggregatedNotification.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__notifyProcedure__subscriptionDeletionHandler(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1001, TTCN_Location::LOCATION_FUNCTION, "f_cse_notifyProcedure_subscriptionDeletionHandler");
current_location.update_lineno(1002);
#line 1002 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(1004);
#line 1004 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(1005);
#line 1005 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(1007);
#line 1007 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(1008);
#line 1008 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_172:
alt_status tmp_172_alt_flag_0 = ALT_MAYBE;
alt_status tmp_172_alt_flag_1 = ALT_MAYBE;
alt_status tmp_172_alt_flag_2 = ALT_MAYBE;
alt_status tmp_172_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_172_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1009);
#line 1009 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_172_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__notify(OneM2M__Templates::mw__contentNotification(OneM2M__Types::Representation_template(ANY_VALUE)))), &(v__response), any_compref, NULL, NULL);
if (tmp_172_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1010);
#line 1010 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1011);
#line 1011 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Types::ResponsePrimitive_template(OneM2M__Templates::m__responseNotification(OneM2M__Types::ResponseStatusCode::int2001, OneM2M__Templates::m__responseNotification_p__notification_defval).valueof()), OneM2M__Templates::m__response_p__forcedFields_defval));
current_location.update_lineno(1012);
#line 1012 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((!(BOOLEAN_template(TRUE).match(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().requestPrimitive().primitiveContent()().notification().subscriptionDeletion())))) {
current_location.update_lineno(1013);
#line 1013 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionDeletionHandler:ERROR: subscriptionDeletion attribute have to be set to TRUE"),TTCN_Logger::end_event_log2str()));
}
current_location.update_lineno(1015);
#line 1015 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__check__notificationContent(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().requestPrimitive(), p__primitiveContent)) {
current_location.update_lineno(1016);
#line 1016 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionDeletionHandler:INFO: Notification received"),TTCN_Logger::end_event_log2str()));
}
else {
current_location.update_lineno(1019);
#line 1019 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionDeletionHandler:ERROR: Notification received but the content doesn't match"),TTCN_Logger::end_event_log2str()));
}
break;
}
}
if (tmp_172_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1022);
#line 1022 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_172_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL);
if (tmp_172_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1023);
#line 1023 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1024);
#line 1024 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionDeletionHandler:ERROR: unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_172_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1026);
#line 1026 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_172_alt_flag_2 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_172_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1027);
#line 1027 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_subscriptionDeletionHandler:ERROR: No notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_172_default_flag == ALT_MAYBE) {
tmp_172_default_flag = TTCN_Default::try_altsteps();
if (tmp_172_default_flag == ALT_YES || tmp_172_default_flag == ALT_BREAK) break;
else if (tmp_172_default_flag == ALT_REPEAT) goto tmp_172;
}
current_location.update_lineno(1008);
#line 1008 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_172_alt_flag_0 == ALT_NO && tmp_172_alt_flag_1 == ALT_NO && tmp_172_alt_flag_2 == ALT_NO && tmp_172_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 1008 and 1029.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1031);
#line 1031 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(1032);
#line 1032 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__notifyProcedure__subscriptionDeletionHandler(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_subscriptionDeletionHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_notifyProcedure_subscriptionDeletionHandler", text_buf);
p__primitiveContent.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cse__notifyProcedure__noNotificationHandler()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1036, TTCN_Location::LOCATION_FUNCTION, "f_cse_notifyProcedure_noNotificationHandler");
current_location.update_lineno(1038);
#line 1038 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(1040);
#line 1040 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(1041);
#line 1041 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::map_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
current_location.update_lineno(1043);
#line 1043 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start(1.0e1);
current_location.update_lineno(1044);
#line 1044 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_173:
alt_status tmp_173_alt_flag_0 = ALT_MAYBE;
alt_status tmp_173_alt_flag_1 = ALT_MAYBE;
alt_status tmp_173_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_173_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1045);
#line 1045 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_173_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__notify(OneM2M__Templates::mw__contentNotification(OneM2M__Types::Representation_template(ANY_VALUE)))), &(v__response), any_compref, NULL, NULL);
if (tmp_173_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1046);
#line 1046 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1047);
#line 1047 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(FAIL,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_noNotificationHandler: Error, Non expected notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_173_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1049);
#line 1049 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_173_alt_flag_1 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_173_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1050);
#line 1050 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_notifyProcedure_noNotificationHandler: No notification received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_173_default_flag == ALT_MAYBE) {
tmp_173_default_flag = TTCN_Default::try_altsteps();
if (tmp_173_default_flag == ALT_YES || tmp_173_default_flag == ALT_BREAK) break;
else if (tmp_173_default_flag == ALT_REPEAT) goto tmp_173;
}
current_location.update_lineno(1044);
#line 1044 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_173_alt_flag_0 == ALT_NO && tmp_173_alt_flag_1 == ALT_NO && tmp_173_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 1044 and 1052.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1054);
#line 1054 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::CseTester_component_mcaPort.get_name(), SYSTEM_COMPREF, "mcaPort");
current_location.update_lineno(1055);
#line 1055 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::unmap_port(self, OneM2M__TestSystem::Tester_component_acPort.get_name(), SYSTEM_COMPREF, "acPort");
}

void start_f__cse__notifyProcedure__noNotificationHandler(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_noNotificationHandler(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_notifyProcedure_noNotificationHandler", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__check__notificationContent(const OneM2M__Types::RequestPrimitive& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1059, TTCN_Location::LOCATION_FUNCTION, "f_check_notificationContent");
current_location.update_lineno(1061);
#line 1061 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
BOOLEAN v__matchResult(FALSE);
current_location.update_lineno(1062);
#line 1062 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(1063);
#line 1063 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__numberOfAggregatedNotification;
current_location.update_lineno(1065);
#line 1065 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1066);
#line 1066 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_resource)) {
current_location.update_lineno(1067);
#line 1067 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = p__primitiveContent.aE().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().resource().aE());
}
else {
current_location.update_lineno(1069);
#line 1069 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_responsePrimitive)) {
current_location.update_lineno(1070);
#line 1070 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = p__primitiveContent.aE().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().responsePrimitive().primitiveContent()().aE());
}
else {
current_location.update_lineno(1072);
#line 1072 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().ischosen(OneM2M__Types::PrimitiveContent::ALT_aggregatedNotification)) {
current_location.update_lineno(1073);
#line 1073 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = TRUE;
current_location.update_lineno(1074);
#line 1074 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__numberOfAggregatedNotification = const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().aggregatedNotification().notification__list().lengthof();
current_location.update_lineno(1075);
#line 1075 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = 0;
current_location.update_lineno(1075);
#line 1075 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(1075);
#line 1075 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i < v__numberOfAggregatedNotification)) break;
current_location.update_lineno(1076);
#line 1076 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().aggregatedNotification().notification__list()[i].notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_resource)) {
current_location.update_lineno(1077);
#line 1077 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((!(p__primitiveContent.aE().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().aggregatedNotification().notification__list()[i].notificationEvent()().representation()().resource().aE())))) {
current_location.update_lineno(1078);
#line 1078 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = FALSE;
}
}
else {
current_location.update_lineno(1081);
#line 1081 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().aggregatedNotification().notification__list()[i].notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_responsePrimitive)) {
current_location.update_lineno(1082);
#line 1082 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((!(p__primitiveContent.aE().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().aggregatedNotification().notification__list()[i].notificationEvent()().representation()().responsePrimitive().primitiveContent()().aE())))) {
current_location.update_lineno(1083);
#line 1083 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = FALSE;
}
}
}
current_location.update_lineno(1075);
#line 1075 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_181;
++i;
}
}
current_location.update_lineno(1087);
#line 1087 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((i == 0)) {
current_location.update_lineno(1088);
#line 1088 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = FALSE;
}
}
}
}
}
current_location.update_lineno(1094);
#line 1094 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container)) {
current_location.update_lineno(1095);
#line 1095 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_resource)) {
current_location.update_lineno(1096);
#line 1096 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = p__primitiveContent.container().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().resource().container());
}
else {
current_location.update_lineno(1098);
#line 1098 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().ischosen(OneM2M__Types::Representation::ALT_responsePrimitive)) {
current_location.update_lineno(1099);
#line 1099 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__matchResult = p__primitiveContent.container().match(const_cast< const OneM2M__Types::RequestPrimitive&>(p__requestPrimitive).primitiveContent()().notification().notificationEvent()().representation()().responsePrimitive().primitiveContent()().container());
}
}
}
current_location.update_lineno(1103);
#line 1103 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__matchResult;
}

void start_f__check__notificationContent(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive& p__requestPrimitive, const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_check_notificationContent(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__primitiveContent.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_check_notificationContent", text_buf);
p__requestPrimitive.encode_text(text_buf);
p__primitiveContent.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isNonHierarchical(const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1114, TTCN_Location::LOCATION_FUNCTION, "f_isNonHierarchical");
current_location.update_lineno(1115);
#line 1115 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(1116);
#line 1116 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__nbOfSlashes(0);
current_location.update_lineno(1118);
#line 1118 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = 0;
current_location.update_lineno(1118);
#line 1118 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(1118);
#line 1118 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i < p__resourceAddress.lengthof())) break;
current_location.update_lineno(1119);
#line 1119 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (UNIVERSAL_CHARSTRING_template(cs_22).match(const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[i])) {
current_location.update_lineno(1120);
#line 1120 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_186;
++v__nbOfSlashes;
}
}
current_location.update_lineno(1118);
#line 1118 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_187;
++i;
}
}
current_location.update_lineno(1124);
#line 1124 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeCseRelative(p__resourceAddress)) {
current_location.update_lineno(1125);
#line 1125 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__nbOfSlashes == 0)) {
current_location.update_lineno(1126);
#line 1126 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1128);
#line 1128 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
else {
current_location.update_lineno(1131);
#line 1131 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeSpRelative(p__resourceAddress)) {
current_location.update_lineno(1132);
#line 1132 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__nbOfSlashes == 2)) {
current_location.update_lineno(1133);
#line 1133 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1135);
#line 1135 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
else {
current_location.update_lineno(1137);
#line 1137 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isScopeAbsolute(p__resourceAddress)) {
current_location.update_lineno(1138);
#line 1138 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__nbOfSlashes == 4)) {
current_location.update_lineno(1139);
#line 1139 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1141);
#line 1141 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
else {
current_location.update_lineno(1144);
#line 1144 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
}
}

void start_f__isNonHierarchical(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isNonHierarchical(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isNonHierarchical", text_buf);
p__resourceAddress.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isHierarchical(const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1154, TTCN_Location::LOCATION_FUNCTION, "f_isHierarchical");
current_location.update_lineno(1155);
#line 1155 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (f__isNonHierarchical(p__resourceAddress)) {
current_location.update_lineno(1156);
#line 1156 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
else {
current_location.update_lineno(1158);
#line 1158 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
}

void start_f__isHierarchical(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isHierarchical(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isHierarchical", text_buf);
p__resourceAddress.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isScopeCseRelative(const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1167, TTCN_Location::LOCATION_FUNCTION, "f_isScopeCseRelative");
current_location.update_lineno(1168);
#line 1168 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[0] != cs_22)) {
current_location.update_lineno(1169);
#line 1169 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1171);
#line 1171 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}

void start_f__isScopeCseRelative(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeCseRelative(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isScopeCseRelative", text_buf);
p__resourceAddress.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isScopeSpRelative(const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1180, TTCN_Location::LOCATION_FUNCTION, "f_isScopeSpRelative");
current_location.update_lineno(1181);
#line 1181 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_188;
tmp_188 = (const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[0] == cs_22);
if (tmp_188) tmp_188 = (const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[1] != cs_22);
if (tmp_188) {
current_location.update_lineno(1182);
#line 1182 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1184);
#line 1184 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
}

void start_f__isScopeSpRelative(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeSpRelative(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isScopeSpRelative", text_buf);
p__resourceAddress.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

BOOLEAN f__isScopeAbsolute(const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1193, TTCN_Location::LOCATION_FUNCTION, "f_isScopeAbsolute");
current_location.update_lineno(1194);
#line 1194 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_189;
tmp_189 = (const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[0] == cs_22);
if (tmp_189) tmp_189 = (const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceAddress)[1] == cs_22);
if (tmp_189) {
current_location.update_lineno(1195);
#line 1195 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return TRUE;
}
else {
current_location.update_lineno(1197);
#line 1197 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return FALSE;
}
}
}

void start_f__isScopeAbsolute(const COMPONENT& component_reference, const UNIVERSAL_CHARSTRING& p__resourceAddress)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeAbsolute(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_isScopeAbsolute", text_buf);
p__resourceAddress.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__cse__registerRemoteCse(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1206, TTCN_Location::LOCATION_FUNCTION, "f_cse_registerRemoteCse");
current_location.update_lineno(1208);
#line 1208 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__response;
current_location.update_lineno(1209);
#line 1209 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__request;
current_location.update_lineno(1210);
#line 1210 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__resourceIndex(-1);
current_location.update_lineno(1212);
#line 1212 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__request = f__getCreateRequestPrimitive(OneM2M__Types::ResourceType::int16, p__requestPrimitive, -1);
current_location.update_lineno(1214);
#line 1214 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::CseTester_component_mcaPort.send(OneM2M__Templates::m__request(OneM2M__Types::RequestPrimitive_template(v__request), OneM2M__Templates::m__request_p__forcedFields_defval));
current_location.update_lineno(1215);
#line 1215 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(1216);
#line 1216 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_191:
alt_status tmp_191_alt_flag_0 = ALT_MAYBE;
alt_status tmp_191_alt_flag_1 = ALT_MAYBE;
alt_status tmp_191_alt_flag_2 = ALT_MAYBE;
alt_status tmp_191_alt_flag_3 = ALT_MAYBE;
alt_status tmp_191_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_191_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1217);
#line 1217 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_191_alt_flag_0 = OneM2M__TestSystem::CseTester_component_mccPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveOK(OneM2M__Templates::mw__responsePrimitiveOK_p__content_defval)), &(v__response), any_compref, NULL, NULL);
if (tmp_191_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1218);
#line 1218 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1219);
#line 1219 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_registerRemoteCse:INFO: Resource type RemoteCSE created successfuly"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(1220);
#line 1220 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkAttributesToBeSaved(OneM2M__Types::ResourceType::int16, v__request, v__response.primitive().responsePrimitive());
current_location.update_lineno(1221);
#line 1221 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceIndex = f__setResource(const_cast< const OneM2M__Types::MsgIn&>(v__response).primitive().responsePrimitive().primitiveContent(), OneM2M__Types::ResourceType::int16, -1);
break;
}
}
if (tmp_191_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1223);
#line 1223 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_191_alt_flag_1 = OneM2M__TestSystem::CseTester_component_mccPort.receive(OneM2M__Templates::mw__response(OneM2M__Templates::mw__responsePrimitiveKO), NULL, any_compref, NULL, NULL);
if (tmp_191_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1224);
#line 1224 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1225);
#line 1225 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_registerRemoteCse:INFO: Error while creating resource type RemoteCSE"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_191_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1227);
#line 1227 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_191_alt_flag_2 = OneM2M__TestSystem::CseTester_component_mccPort.receive(any_compref, NULL, NULL);
if (tmp_191_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1228);
#line 1228 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1229);
#line 1229 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_registerRemoteCse:INFO: Unexpected message received"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_191_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(1231);
#line 1231 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_191_alt_flag_3 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_191_alt_flag_3 == ALT_YES) {
current_location.update_lineno(1232);
#line 1232 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_cse_registerRemoteCse:INFO: No answer while creating resource type RemoteCSE"),TTCN_Logger::end_event_log2str()));
break;
}
}
if (tmp_191_default_flag == ALT_MAYBE) {
tmp_191_default_flag = TTCN_Default::try_altsteps();
if (tmp_191_default_flag == ALT_YES || tmp_191_default_flag == ALT_BREAK) break;
else if (tmp_191_default_flag == ALT_REPEAT) goto tmp_191;
}
current_location.update_lineno(1216);
#line 1216 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_191_alt_flag_0 == ALT_NO && tmp_191_alt_flag_1 == ALT_NO && tmp_191_alt_flag_2 == ALT_NO && tmp_191_alt_flag_3 == ALT_NO && tmp_191_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 1216 and 1234.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1236);
#line 1236 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkCseTesterStatus();
current_location.update_lineno(1238);
#line 1238 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceIndex;
}

void start_f__cse__registerRemoteCse(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_registerRemoteCse(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_cse_registerRemoteCse", text_buf);
p__requestPrimitive.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

alt_status a__cse__cf01_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1250, TTCN_Location::LOCATION_ALTSTEP, "a_cse_cf01");
alt_status ret_val = ALT_NO;
current_location.update_lineno(1252);
#line 1252 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1253);
#line 1253 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_cse_cf01: WARNING: Unexpected message received");
current_location.update_lineno(1254);
#line 1254 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__cse__cf01()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__cse__cf01_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_cse_cf01.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__cse__cf01()
{
return new a__cse__cf01_Default();
}

alt_status a__cse__cf02_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1261, TTCN_Location::LOCATION_ALTSTEP, "a_cse_cf02");
alt_status ret_val = ALT_NO;
current_location.update_lineno(1263);
#line 1263 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::CseTester_component_mcaPort.receive(any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1264);
#line 1264 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_cse_cf02: WARNING: Unexpected message received");
current_location.update_lineno(1265);
#line 1265 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(1267);
#line 1267 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::CseTester_component_mccPort.receive(any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1268);
#line 1268 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_cse_cf02: WARNING: Unexpected message received");
current_location.update_lineno(1269);
#line 1269 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__cse__cf02()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__cse__cf02_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_cse_cf02.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__cse__cf02()
{
return new a__cse__cf02_Default();
}

alt_status a__cse__cf04_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1276, TTCN_Location::LOCATION_ALTSTEP, "a_cse_cf04");
alt_status ret_val = ALT_NO;
current_location.update_lineno(1278);
#line 1278 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::CseTester_component_mccPort.receive(any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1279);
#line 1279 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_cse_cf04: WARNING: Unexpected message received");
current_location.update_lineno(1280);
#line 1280 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__cse__cf04()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__cse__cf04_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_cse_cf04.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__cse__cf04()
{
return new a__cse__cf04_Default();
}

INTEGER f__ae__preamble__registerAe()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1297, TTCN_Location::LOCATION_FUNCTION, "f_ae_preamble_registerAe");
current_location.update_lineno(1299);
#line 1299 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
current_location.update_lineno(1300);
#line 1300 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::PrimitiveContent v__modifiedResource;
current_location.update_lineno(1301);
#line 1301 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__resourceIndex;
current_location.update_lineno(1301);
#line 1301 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__parentIndex;
current_location.update_lineno(1302);
#line 1302 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__rp;
current_location.update_lineno(1304);
#line 1304 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.start();
current_location.update_lineno(1305);
#line 1305 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
tmp_193:
alt_status tmp_193_alt_flag_0 = ALT_MAYBE;
alt_status tmp_193_alt_flag_1 = ALT_MAYBE;
alt_status tmp_193_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_193_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1306);
#line 1306 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_193_alt_flag_0 = OneM2M__TestSystem::AeTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__createAe(OneM2M__Templates::mw__createAe_p__from_defval, OneM2M__Templates::mw__createAe_p__to_defval)), &(v__request), any_compref, NULL, NULL);
if (tmp_193_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1307);
#line 1307 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::Tester_component_tc__ac.stop();
current_location.update_lineno(1309);
#line 1309 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__rp = const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive();
current_location.update_lineno(1310);
#line 1310 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__parentIndex = f__getResourceIndex(const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).to__());
current_location.update_lineno(1311);
#line 1311 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceIndex = f__ae__createResource(const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).primitiveContent(), v__parentIndex, const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).resourceType(), v__modifiedResource);
current_location.update_lineno(1312);
#line 1312 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__resourceIndex != -1)) {
current_location.update_lineno(1313);
#line 1313 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::AeTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Templates::m__responsePrimitive__content(OneM2M__Types::ResponseStatusCode::int2001, const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).requestIdentifier(), OneM2M__Types::PrimitiveContent_template(v__modifiedResource)), OneM2M__Templates::m__response_p__forcedFields_defval));
current_location.update_lineno(1314);
#line 1314 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(PASS,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_ae_preamble_registerAe:INFO: Application registered successfuly"),TTCN_Logger::end_event_log2str()));
}
else {
current_location.update_lineno(1317);
#line 1317 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::AeTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Templates::m__responsePrimitive(OneM2M__Types::ResponseStatusCode::int5000, const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive().requestIdentifier(), OneM2M__Templates::m__responsePrimitive_p__content_defval), OneM2M__Templates::m__response_p__forcedFields_defval));
current_location.update_lineno(1318);
#line 1318 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_ae_preamble_registerAe:INFO: AE registration failed"),TTCN_Logger::end_event_log2str()));
}
break;
}
}
if (tmp_193_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1322);
#line 1322 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
tmp_193_alt_flag_1 = OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL);
if (tmp_193_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1323);
#line 1323 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_ae_preamble_registerAe:INFO: AE registration request not received"),TTCN_Logger::end_event_log2str()));
current_location.update_lineno(1324);
#line 1324 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}
if (tmp_193_default_flag == ALT_MAYBE) {
tmp_193_default_flag = TTCN_Default::try_altsteps();
if (tmp_193_default_flag == ALT_YES || tmp_193_default_flag == ALT_BREAK) break;
else if (tmp_193_default_flag == ALT_REPEAT) goto tmp_193;
}
current_location.update_lineno(1305);
#line 1305 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (tmp_193_alt_flag_0 == ALT_NO && tmp_193_alt_flag_1 == ALT_NO && tmp_193_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn between lines 1305 and 1326.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1328);
#line 1328 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__checkAeTesterStatus();
current_location.update_lineno(1330);
#line 1330 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceIndex;
}

void start_f__ae__preamble__registerAe(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_ae_preamble_registerAe(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_ae_preamble_registerAe", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__ae__createResource(const OneM2M__Types::PrimitiveContent& p__resource, const INTEGER& p__parentIndex, const OneM2M__Types::ResourceType& p__resourceType, OneM2M__Types::PrimitiveContent& p__modifiedResource)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1345, TTCN_Location::LOCATION_FUNCTION, "f_ae_createResource");
p__modifiedResource.clean_up();
OneM2M__Types::PrimitiveContent p__resource_shadow(p__resource);
current_location.update_lineno(1347);
#line 1347 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__resourceIndex;
current_location.update_lineno(1350);
#line 1350 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_197;
tmp_197 = (p__resourceType == OneM2M__Types::ResourceType::int2);
if (tmp_197) tmp_197 = p__resource_shadow.is_present();
if (tmp_197) {
current_location.update_lineno(1351);
#line 1351 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__resource_shadow.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1352);
#line 1352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::AE__optional v__ae(const_cast< const OneM2M__Types::PrimitiveContent&>(p__resource_shadow).aE());
current_location.update_lineno(1353);
#line 1353 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::AE__optional v__aeModified;
current_location.update_lineno(1355);
#line 1355 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceIndex = (OneM2M__TestSystem::Tester_component_vc__resourcesList.lengthof() - 1);
current_location.update_lineno(1356);
#line 1356 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.resourceType() = p__resourceType;
current_location.update_lineno(1358);
#line 1358 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.parentID() = int2str(p__parentIndex);
current_location.update_lineno(1359);
#line 1359 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.creationTime() = fx__generateTimestamp();
current_location.update_lineno(1360);
#line 1360 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OPTIONAL<UNIVERSAL_CHARSTRING> tmp_202;
tmp_202 = const_cast< const OneM2M__Types::AE__optional&>(v__ae).creationTime();
v__ae.lastModifiedTime() = tmp_202;
}
current_location.update_lineno(1361);
#line 1361 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.resourceID() = (cs_32 + int2char(v__resourceIndex));
current_location.update_lineno(1362);
#line 1362 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.aE__ID() = (cs_32 + int2char(v__resourceIndex));
current_location.update_lineno(1363);
#line 1363 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__ae.resourceName() = (cs_32 + int2char(v__resourceIndex));
current_location.update_lineno(1365);
#line 1365 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.parentID() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).parentID();
current_location.update_lineno(1366);
#line 1366 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.creationTime() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).creationTime();
current_location.update_lineno(1367);
#line 1367 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.lastModifiedTime() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).lastModifiedTime();
current_location.update_lineno(1368);
#line 1368 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.resourceID() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).resourceID();
current_location.update_lineno(1369);
#line 1369 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.aE__ID() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).aE__ID();
current_location.update_lineno(1370);
#line 1370 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__aeModified.resourceName() = const_cast< const OneM2M__Types::AE__optional&>(v__ae).resourceName();
current_location.update_lineno(1372);
#line 1372 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__resource_shadow.aE() = v__ae;
current_location.update_lineno(1373);
#line 1373 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__modifiedResource.aE() = v__aeModified;
current_location.update_lineno(1374);
#line 1374 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__setResource(p__resource_shadow, p__resourceType, p__parentIndex);
}
}
}
current_location.update_lineno(1383);
#line 1383 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return -1;
}

alt_status a__ae__default_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1393, TTCN_Location::LOCATION_ALTSTEP, "a_ae_default");
current_location.update_lineno(1395);
#line 1395 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
alt_status ret_val = ALT_NO;
current_location.update_lineno(1397);
#line 1397 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::AeTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Types::RequestPrimitive_template(ANY_VALUE)), &(v__request), any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1398);
#line 1398 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_ae_default:WARNING: Unexpected request received");
current_location.update_lineno(1399);
#line 1399 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::AeTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Templates::m__responsePrimitive(OneM2M__Types::ResponseStatusCode::int5000, const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive().requestIdentifier(), OneM2M__Templates::m__responsePrimitive_p__content_defval), OneM2M__Templates::m__response_p__forcedFields_defval));
current_location.update_lineno(1400);
#line 1400 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(1403);
#line 1403 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::AeTester_component_mcaPort.receive(any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1404);
#line 1404 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "a_ae_default:WARNING: Unexpected message received");
current_location.update_lineno(1405);
#line 1405 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__ae__default()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__ae__default_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_ae_default.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__ae__default()
{
return new a__ae__default_Default();
}

alt_status a__ae__cf03_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1414, TTCN_Location::LOCATION_ALTSTEP, "a_ae_cf03");
current_location.update_lineno(1416);
#line 1416 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::MsgIn v__request;
current_location.update_lineno(1417);
#line 1417 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::PrimitiveContent v__modifiedResource;
current_location.update_lineno(1418);
#line 1418 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__resourceIndex;
current_location.update_lineno(1418);
#line 1418 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__parentIndex;
current_location.update_lineno(1419);
#line 1419 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::RequestPrimitive v__rp;
alt_status ret_val = ALT_NO;
current_location.update_lineno(1421);
#line 1421 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::AeTester_component_mcaPort.receive(OneM2M__Templates::mw__request(OneM2M__Templates::mw__create(OneM2M__Templates::mw__create_p__from_defval, OneM2M__Templates::mw__create_p__to_defval)), &(v__request), any_compref, NULL, NULL)) {
case ALT_YES:
{
current_location.update_lineno(1422);
#line 1422 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__rp = const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive();
current_location.update_lineno(1423);
#line 1423 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__parentIndex = f__getResourceIndex(const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).to__());
current_location.update_lineno(1424);
#line 1424 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceIndex = f__ae__createResource(const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).primitiveContent(), v__parentIndex, const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).resourceType(), v__modifiedResource);
current_location.update_lineno(1425);
#line 1425 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__resourceIndex != -1)) {
current_location.update_lineno(1426);
#line 1426 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::AeTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Templates::m__responsePrimitive__content(OneM2M__Types::ResponseStatusCode::int2001, const_cast< const OneM2M__Types::RequestPrimitive&>(v__rp).requestIdentifier(), OneM2M__Types::PrimitiveContent_template(v__modifiedResource)), OneM2M__Templates::m__response_p__forcedFields_defval));
}
else {
current_location.update_lineno(1429);
#line 1429 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__TestSystem::AeTester_component_mcaPort.send(OneM2M__Templates::m__response(OneM2M__Templates::m__responsePrimitive(OneM2M__Types::ResponseStatusCode::int5000, const_cast< const OneM2M__Types::MsgIn&>(v__request).primitive().requestPrimitive().requestIdentifier(), OneM2M__Templates::m__responsePrimitive_p__content_defval), OneM2M__Templates::m__response_p__forcedFields_defval));
}
current_location.update_lineno(1431);
#line 1431 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(1434);
#line 1434 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (a__ae__default_instance()) {
case ALT_YES:
return ALT_YES;
case ALT_REPEAT:
return ALT_REPEAT;
case ALT_BREAK:
return ALT_BREAK;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__ae__cf03()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__ae__cf03_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_ae_cf03.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__ae__cf03()
{
return new a__ae__cf03_Default();
}

OneM2M__Types::RequestPrimitive f__getCreateRequestPrimitive(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__request, const INTEGER& p__parentIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1452, TTCN_Location::LOCATION_FUNCTION, "f_getCreateRequestPrimitive");
OneM2M__Types::RequestPrimitive_template p__request_shadow(p__request);
current_location.update_lineno(1453);
#line 1453 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::ListOfURIs_template v__defaultListOfURIs;
v__defaultListOfURIs.set_size(1);
v__defaultListOfURIs[0] = cs_33;
current_location.update_lineno(1454);
#line 1454 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::AcpType_template v__defaultAcpIDs;
v__defaultAcpIDs.set_size(1);
v__defaultAcpIDs[0] = cs_33;
current_location.update_lineno(1456);
#line 1456 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType != OneM2M__Types::ResourceType::int2)) {
current_location.update_lineno(1457);
#line 1457 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.from__() = f__getOriginator(p__parentIndex, f__getOriginator_p__testSystemRole_defval);
}
current_location.update_lineno(1459);
#line 1459 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.to__() = f__getResourceAddress(p__parentIndex);
current_location.update_lineno(1461);
#line 1461 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int1)) {
}
current_location.update_lineno(1465);
#line 1465 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int9)) {
current_location.update_lineno(1466);
#line 1466 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__defaultListOfURIs.match(p__request_shadow.primitiveContent().group__().memberIDs().valueof())) {
current_location.update_lineno(1467);
#line 1467 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__parentIndex != -1)) {
current_location.update_lineno(1468);
#line 1468 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::ListOfURIs_template& tmp_220 = p__request_shadow.primitiveContent().group__().memberIDs();
tmp_220.remove_all_permutations();
tmp_220.set_size(1);
tmp_220[0] = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__parentIndex].resource());
}
}
else {
current_location.update_lineno(1470);
#line 1470 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::ListOfURIs_template& tmp_222 = p__request_shadow.primitiveContent().group__().memberIDs();
tmp_222.remove_all_permutations();
tmp_222.set_size(1);
tmp_222[0] = f__getResourceAddress(p__parentIndex);
}
}
}
}
current_location.update_lineno(1478);
#line 1478 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int3)) {
current_location.update_lineno(1480);
#line 1480 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (OneM2M__Pixits::PX__IS__LOC__CONTAINER) {
current_location.update_lineno(1481);
#line 1481 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.primitiveContent().container().locationID() = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__parentIndex].resource());
}
current_location.update_lineno(1483);
#line 1483 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_231;
{
boolean tmp_224 = p__request_shadow.is_bound();
if(tmp_224) {
switch (p__request_shadow.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_224 = FALSE;
break;
case ANY_VALUE:
tmp_224 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_224) {
const OneM2M__Types::RequestPrimitive_template& tmp_225 = p__request_shadow;
const OneM2M__Types::PrimitiveContent_template& tmp_226 = tmp_225.primitiveContent();
tmp_224 = tmp_226.is_bound();
if(tmp_224) {
switch (tmp_226.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_224 = FALSE;
break;
case ANY_VALUE:
tmp_224 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_224) {
tmp_224 = tmp_226.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_224) {
const OneM2M__Types::PrimitiveContent_template& tmp_227 = tmp_226;
const OneM2M__Types::Container__optional_template& tmp_228 = tmp_227.container();
tmp_224 = tmp_228.is_bound();
if(tmp_224) {
switch (tmp_228.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_224 = FALSE;
break;
case ANY_VALUE:
tmp_224 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_224) {
const OneM2M__Types::Container__optional_template& tmp_229 = tmp_228;
const OneM2M__Types::AcpType_template& tmp_230 = tmp_229.accessControlPolicyIDs();
tmp_224 = tmp_230.is_present();
}
break;}
default:
tmp_224 = FALSE;
break;
}
}
}
break;}
default:
tmp_224 = FALSE;
break;
}
}
}
break;}
default:
tmp_224 = FALSE;
break;
}
}
tmp_231 = tmp_224;
}
if (tmp_231) {
current_location.update_lineno(1484);
#line 1484 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__defaultAcpIDs.match(p__request_shadow.primitiveContent().container().accessControlPolicyIDs().valueof())) {
current_location.update_lineno(1485);
#line 1485 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::AcpType_template& tmp_233 = p__request_shadow.primitiveContent().container().accessControlPolicyIDs();
tmp_233.remove_all_permutations();
tmp_233.set_size(1);
tmp_233[0] = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex].resource());
}
}
}
}
}
current_location.update_lineno(1490);
#line 1490 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int15)) {
current_location.update_lineno(1491);
#line 1491 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__parentIndex].resource().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1492);
#line 1492 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.from__() = const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__parentIndex].resource().aE().aE__ID();
}
}
current_location.update_lineno(1496);
#line 1496 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int18)) {
}
current_location.update_lineno(1499);
#line 1499 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int23)) {
current_location.update_lineno(1501);
#line 1501 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__defaultListOfURIs.match(p__request_shadow.primitiveContent().subscription().notificationURI().valueof())) {
current_location.update_lineno(1502);
#line 1502 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::ListOfURIs_template& tmp_236 = p__request_shadow.primitiveContent().subscription().notificationURI();
tmp_236.remove_all_permutations();
tmp_236.set_size(1);
tmp_236[0] = f__getResourceAddress(p__parentIndex);
}
}
current_location.update_lineno(1505);
#line 1505 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_244;
{
boolean tmp_237 = p__request_shadow.is_bound();
if(tmp_237) {
switch (p__request_shadow.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_237 = FALSE;
break;
case ANY_VALUE:
tmp_237 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_237) {
const OneM2M__Types::RequestPrimitive_template& tmp_238 = p__request_shadow;
const OneM2M__Types::PrimitiveContent_template& tmp_239 = tmp_238.primitiveContent();
tmp_237 = tmp_239.is_bound();
if(tmp_237) {
switch (tmp_239.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_237 = FALSE;
break;
case ANY_VALUE:
tmp_237 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_237) {
tmp_237 = tmp_239.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_237) {
const OneM2M__Types::PrimitiveContent_template& tmp_240 = tmp_239;
const OneM2M__Types::Subscription__optional_template& tmp_241 = tmp_240.subscription();
tmp_237 = tmp_241.is_bound();
if(tmp_237) {
switch (tmp_241.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_237 = FALSE;
break;
case ANY_VALUE:
tmp_237 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_237) {
const OneM2M__Types::Subscription__optional_template& tmp_242 = tmp_241;
const UNIVERSAL_CHARSTRING_template& tmp_243 = tmp_242.creator();
tmp_237 = tmp_243.is_present();
}
break;}
default:
tmp_237 = FALSE;
break;
}
}
}
break;}
default:
tmp_237 = FALSE;
break;
}
}
}
break;}
default:
tmp_237 = FALSE;
break;
}
}
tmp_244 = tmp_237;
}
if (tmp_244) {
current_location.update_lineno(1506);
#line 1506 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.primitiveContent().subscription().creator() = f__getCreator(p__parentIndex);
}
}
current_location.update_lineno(1509);
#line 1509 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_253;
{
boolean tmp_246 = p__request_shadow.is_bound();
if(tmp_246) {
switch (p__request_shadow.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_246 = FALSE;
break;
case ANY_VALUE:
tmp_246 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_246) {
const OneM2M__Types::RequestPrimitive_template& tmp_247 = p__request_shadow;
const OneM2M__Types::PrimitiveContent_template& tmp_248 = tmp_247.primitiveContent();
tmp_246 = tmp_248.is_bound();
if(tmp_246) {
switch (tmp_248.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_246 = FALSE;
break;
case ANY_VALUE:
tmp_246 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_246) {
tmp_246 = tmp_248.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_246) {
const OneM2M__Types::PrimitiveContent_template& tmp_249 = tmp_248;
const OneM2M__Types::Subscription__optional_template& tmp_250 = tmp_249.subscription();
tmp_246 = tmp_250.is_bound();
if(tmp_246) {
switch (tmp_250.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_246 = FALSE;
break;
case ANY_VALUE:
tmp_246 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_246) {
const OneM2M__Types::Subscription__optional_template& tmp_251 = tmp_250;
const OneM2M__Types::AcpType_template& tmp_252 = tmp_251.accessControlPolicyIDs();
tmp_246 = tmp_252.is_present();
}
break;}
default:
tmp_246 = FALSE;
break;
}
}
}
break;}
default:
tmp_246 = FALSE;
break;
}
}
}
break;}
default:
tmp_246 = FALSE;
break;
}
}
tmp_253 = tmp_246;
}
if (tmp_253) {
current_location.update_lineno(1510);
#line 1510 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__defaultAcpIDs.match(p__request_shadow.primitiveContent().subscription().accessControlPolicyIDs().valueof())) {
current_location.update_lineno(1511);
#line 1511 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::AcpType_template& tmp_255 = p__request_shadow.primitiveContent().subscription().accessControlPolicyIDs();
tmp_255.remove_all_permutations();
tmp_255.set_size(1);
tmp_255[0] = f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[OneM2M__TestSystem::CseTester_component_vc__acpAuxIndex].resource());
}
}
}
}
}
current_location.update_lineno(1515);
#line 1515 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int4)) {
current_location.update_lineno(1517);
#line 1517 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_263;
{
boolean tmp_256 = p__request_shadow.is_bound();
if(tmp_256) {
switch (p__request_shadow.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_256 = FALSE;
break;
case ANY_VALUE:
tmp_256 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_256) {
const OneM2M__Types::RequestPrimitive_template& tmp_257 = p__request_shadow;
const OneM2M__Types::PrimitiveContent_template& tmp_258 = tmp_257.primitiveContent();
tmp_256 = tmp_258.is_bound();
if(tmp_256) {
switch (tmp_258.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_256 = FALSE;
break;
case ANY_VALUE:
tmp_256 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_256) {
tmp_256 = tmp_258.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_256) {
const OneM2M__Types::PrimitiveContent_template& tmp_259 = tmp_258;
const OneM2M__Types::ContentInstance__optional_template& tmp_260 = tmp_259.contentInstance();
tmp_256 = tmp_260.is_bound();
if(tmp_256) {
switch (tmp_260.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_256 = FALSE;
break;
case ANY_VALUE:
tmp_256 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_256) {
const OneM2M__Types::ContentInstance__optional_template& tmp_261 = tmp_260;
const UNIVERSAL_CHARSTRING_template& tmp_262 = tmp_261.creator();
tmp_256 = tmp_262.is_present();
}
break;}
default:
tmp_256 = FALSE;
break;
}
}
}
break;}
default:
tmp_256 = FALSE;
break;
}
}
}
break;}
default:
tmp_256 = FALSE;
break;
}
}
tmp_263 = tmp_256;
}
if (tmp_263) {
current_location.update_lineno(1518);
#line 1518 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.primitiveContent().contentInstance().creator() = f__getCreator(p__parentIndex);
}
}
}
current_location.update_lineno(1522);
#line 1522 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return p__request_shadow.valueof();
}

void start_f__getCreateRequestPrimitive(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__request, const INTEGER& p__parentIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreateRequestPrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getCreateRequestPrimitive", text_buf);
p__resourceType.encode_text(text_buf);
p__request.encode_text(text_buf);
p__parentIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

OneM2M__Types::ResponsePrimitive f__getCreateResponsePrimitive(const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__request)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1533, TTCN_Location::LOCATION_FUNCTION, "f_getCreateResponsePrimitive");
OneM2M__Types::RequestPrimitive_template p__request_shadow(p__request);
current_location.update_lineno(1534);
#line 1534 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::ResponsePrimitive_template v__responsePrimitive;
current_location.update_lineno(1536);
#line 1536 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType != OneM2M__Types::ResourceType::int2)) {
current_location.update_lineno(1537);
#line 1537 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__responsePrimitive.from__() = p__request_shadow.to__();
}
current_location.update_lineno(1539);
#line 1539 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
UNIVERSAL_CHARSTRING_template tmp_266;
tmp_266 = p__request_shadow.from__();
p__request_shadow.to__() = tmp_266;
}
current_location.update_lineno(1541);
#line 1541 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int1)) {
}
current_location.update_lineno(1545);
#line 1545 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int9)) {
}
current_location.update_lineno(1549);
#line 1549 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int3)) {
}
current_location.update_lineno(1553);
#line 1553 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int15)) {
}
current_location.update_lineno(1557);
#line 1557 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int18)) {
}
current_location.update_lineno(1560);
#line 1560 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int23)) {
}
current_location.update_lineno(1565);
#line 1565 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__responsePrimitive.valueof();
}

void start_f__getCreateResponsePrimitive(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const OneM2M__Types::RequestPrimitive_template& p__request)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreateResponsePrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getCreateResponsePrimitive", text_buf);
p__resourceType.encode_text(text_buf);
p__request.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

OneM2M__Types::RequestPrimitive f__getUpdateRequestPrimitive(const OneM2M__Types::ResourceType& p__resourceType, const INTEGER& p__resourceIndex, const OneM2M__Types::RequestPrimitive_template& p__request)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1576, TTCN_Location::LOCATION_FUNCTION, "f_getUpdateRequestPrimitive");
OneM2M__Types::RequestPrimitive_template p__request_shadow(p__request);
current_location.update_lineno(1578);
#line 1578 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.from__() = f__getOriginator(p__resourceIndex, f__getOriginator_p__testSystemRole_defval);
current_location.update_lineno(1580);
#line 1580 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__request_shadow.to__() = f__getResourceAddress(p__resourceIndex);
current_location.update_lineno(1582);
#line 1582 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int3)) {
}
current_location.update_lineno(1587);
#line 1587 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int9)) {
}
current_location.update_lineno(1592);
#line 1592 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int18)) {
}
current_location.update_lineno(1597);
#line 1597 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int15)) {
}
current_location.update_lineno(1601);
#line 1601 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__resourceType == OneM2M__Types::ResourceType::int23)) {
}
current_location.update_lineno(1605);
#line 1605 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return p__request_shadow.valueof();
}

void start_f__getUpdateRequestPrimitive(const COMPONENT& component_reference, const OneM2M__Types::ResourceType& p__resourceType, const INTEGER& p__resourceIndex, const OneM2M__Types::RequestPrimitive_template& p__request)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getUpdateRequestPrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__resourceIndex.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getUpdateRequestPrimitive", text_buf);
p__resourceType.encode_text(text_buf);
p__resourceIndex.encode_text(text_buf);
p__request.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

UNIVERSAL_CHARSTRING f__getResourceId(const OneM2M__Types::PrimitiveContent& p__contentResource)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1614, TTCN_Location::LOCATION_FUNCTION, "f_getResourceId");
current_location.update_lineno(1616);
#line 1616 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy)) {
current_location.update_lineno(1617);
#line 1617 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).accessControlPolicy().resourceID());
}
current_location.update_lineno(1619);
#line 1619 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_container)) {
current_location.update_lineno(1620);
#line 1620 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).container().resourceID());
}
current_location.update_lineno(1622);
#line 1622 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance)) {
current_location.update_lineno(1623);
#line 1623 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).contentInstance().resourceID());
}
current_location.update_lineno(1625);
#line 1625 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule)) {
current_location.update_lineno(1626);
#line 1626 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).schedule().resourceID());
}
current_location.update_lineno(1628);
#line 1628 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_pollingChannel)) {
current_location.update_lineno(1629);
#line 1629 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).pollingChannel().resourceID());
}
current_location.update_lineno(1631);
#line 1631 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription)) {
current_location.update_lineno(1632);
#line 1632 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).subscription().resourceID());
}
current_location.update_lineno(1634);
#line 1634 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__)) {
current_location.update_lineno(1635);
#line 1635 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).group__().resourceID());
}
current_location.update_lineno(1637);
#line 1637 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1638);
#line 1638 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).aE().resourceID());
}
current_location.update_lineno(1640);
#line 1640 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_serviceSubscribedAppRule)) {
current_location.update_lineno(1641);
#line 1641 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__resourceIdCleaner(const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).serviceSubscribedAppRule().resourceID());
}
current_location.update_lineno(1643);
#line 1643 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "f_getResourceId:WARNING: Primitive Content Kind not implemented");
current_location.update_lineno(1645);
#line 1645 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return cs_34;
}

UNIVERSAL_CHARSTRING f__getResourceName(const OneM2M__Types::PrimitiveContent& p__contentResource)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1655, TTCN_Location::LOCATION_FUNCTION, "f_getResourceName");
current_location.update_lineno(1657);
#line 1657 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy)) {
current_location.update_lineno(1658);
#line 1658 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).accessControlPolicy().resourceName()();
}
current_location.update_lineno(1660);
#line 1660 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_container)) {
current_location.update_lineno(1661);
#line 1661 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).container().resourceName()();
}
current_location.update_lineno(1663);
#line 1663 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance)) {
current_location.update_lineno(1664);
#line 1664 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).contentInstance().resourceName()();
}
current_location.update_lineno(1666);
#line 1666 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule)) {
current_location.update_lineno(1667);
#line 1667 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).schedule().resourceName()();
}
current_location.update_lineno(1669);
#line 1669 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_pollingChannel)) {
current_location.update_lineno(1670);
#line 1670 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).pollingChannel().resourceName()();
}
current_location.update_lineno(1672);
#line 1672 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription)) {
current_location.update_lineno(1673);
#line 1673 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).subscription().resourceName()();
}
current_location.update_lineno(1675);
#line 1675 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__)) {
current_location.update_lineno(1676);
#line 1676 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).group__().resourceName()();
}
current_location.update_lineno(1678);
#line 1678 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1679);
#line 1679 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).aE().resourceName()();
}
current_location.update_lineno(1681);
#line 1681 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__contentResource.ischosen(OneM2M__Types::PrimitiveContent::ALT_serviceSubscribedAppRule)) {
current_location.update_lineno(1682);
#line 1682 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::PrimitiveContent&>(p__contentResource).serviceSubscribedAppRule().resourceName()();
}
current_location.update_lineno(1684);
#line 1684 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "f_getResourceName:WARNING: Primitive Content Kind not implemented");
current_location.update_lineno(1686);
#line 1686 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return cs_35;
}

UNIVERSAL_CHARSTRING f__getOriginator(const INTEGER& p__targetResourceIndex, const BOOLEAN& p__testSystemRole)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1697, TTCN_Location::LOCATION_FUNCTION, "f_getOriginator");
current_location.update_lineno(1699);
#line 1699 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1700);
#line 1700 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__testSystemRole) {
current_location.update_lineno(1701);
#line 1701 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return OneM2M__Pixits::PX__SUPER__AE__ID;
}
else {
current_location.update_lineno(1703);
#line 1703 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return OneM2M__Pixits::PX__SUPER__CSE__ID;
}
}
current_location.update_lineno(1707);
#line 1707 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex() == -1)) {
current_location.update_lineno(1708);
#line 1708 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1709);
#line 1709 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().aE().aE__ID()();
}
else {
current_location.update_lineno(1710);
#line 1710 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE)) {
current_location.update_lineno(1711);
#line 1711 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().remoteCSE().cSE__ID()();
}
else {
current_location.update_lineno(1713);
#line 1713 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__getOriginator(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex()), f__getOriginator_p__testSystemRole_defval);
}
}
}
else {
current_location.update_lineno(1716);
#line 1716 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__getOriginator(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex()), f__getOriginator_p__testSystemRole_defval);
}
}

void start_f__getOriginator(const COMPONENT& component_reference, const INTEGER& p__targetResourceIndex, const BOOLEAN& p__testSystemRole)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getOriginator(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(", ");
p__testSystemRole.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getOriginator", text_buf);
p__targetResourceIndex.encode_text(text_buf);
p__testSystemRole.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

UNIVERSAL_CHARSTRING f__getCreator(const INTEGER& p__targetResourceIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1726, TTCN_Location::LOCATION_FUNCTION, "f_getCreator");
current_location.update_lineno(1728);
#line 1728 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1729);
#line 1729 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return OneM2M__Pixits::PX__CSE__ID;
}
current_location.update_lineno(1732);
#line 1732 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1733);
#line 1733 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().aE().aE__ID()();
}
else {
current_location.update_lineno(1735);
#line 1735 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__getCreator(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex()));
}
}

void start_f__getCreator(const COMPONENT& component_reference, const INTEGER& p__targetResourceIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreator(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getCreator", text_buf);
p__targetResourceIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__getAttribute(const OneM2M__Types::AttributeList__1& p__attributeList, const UNIVERSAL_CHARSTRING& p__attributeName)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1747, TTCN_Location::LOCATION_FUNCTION, "f_getAttribute");
current_location.update_lineno(1748);
#line 1748 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(1750);
#line 1750 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = 0;
current_location.update_lineno(1750);
#line 1750 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(1750);
#line 1750 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i < p__attributeList.lengthof())) break;
current_location.update_lineno(1751);
#line 1751 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const OneM2M__Types::AttributeList__1&>(p__attributeList)[i] == p__attributeName)) {
current_location.update_lineno(1752);
#line 1752 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return i;
}
current_location.update_lineno(1750);
#line 1750 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_270;
++i;
}
}
current_location.update_lineno(1756);
#line 1756 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return -1;
}

CHARSTRING f__getAnnouncementTargetPoA(const CHARSTRING& p__protocolBinding, const CHARSTRING& p__announcementTargetAddress, const CHARSTRING& p__announcementTargetResource)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1767, TTCN_Location::LOCATION_FUNCTION, "f_getAnnouncementTargetPoA");
current_location.update_lineno(1769);
#line 1769 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__protocolBinding == cs_5)) {
current_location.update_lineno(1770);
#line 1770 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (((cs_36 + p__announcementTargetAddress) + cs_22) + p__announcementTargetResource);
}
else {
current_location.update_lineno(1771);
#line 1771 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__protocolBinding == cs_37)) {
current_location.update_lineno(1772);
#line 1772 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (((cs_38 + p__announcementTargetAddress) + cs_22) + p__announcementTargetResource);
}
else {
current_location.update_lineno(1773);
#line 1773 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__protocolBinding == cs_39)) {
current_location.update_lineno(1774);
#line 1774 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (((cs_40 + OneM2M__Pixits::PX__SUT__ADDRESS) + cs_22) + p__announcementTargetResource);
}
else {
current_location.update_lineno(1776);
#line 1776 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (((cs_41 + p__announcementTargetAddress) + cs_22) + p__announcementTargetResource);
}
}
}
}

INTEGER f__getResourceIndex(const UNIVERSAL_CHARSTRING& )
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1786, TTCN_Location::LOCATION_FUNCTION, "f_getResourceIndex");
current_location.update_lineno(1787);
#line 1787 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return -1;
}

UNIVERSAL_CHARSTRING f__getResourceAddress(const INTEGER& p__targetResourceIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1796, TTCN_Location::LOCATION_FUNCTION, "f_getResourceAddress");
current_location.update_lineno(1797);
#line 1797 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
UNIVERSAL_CHARSTRING v__resourceAddress;
current_location.update_lineno(1799);
#line 1799 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__primitiveScope == OneM2M__Types::PrimitiveScope::e__cseRelative)) {
current_location.update_lineno(1801);
#line 1801 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__addressingMethod == OneM2M__Types::AddressingMethod::e__nonHierarchical)) {
current_location.update_lineno(1802);
#line 1802 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1803);
#line 1803 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return OneM2M__Pixits::PX__CSE__RESOURCE__ID;
}
else {
current_location.update_lineno(1805);
#line 1805 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource());
}
}
else {
current_location.update_lineno(1808);
#line 1808 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1809);
#line 1809 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return OneM2M__Pixits::PX__CSE__NAME;
}
else {
current_location.update_lineno(1811);
#line 1811 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = ((f__getResourceAddress(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex())) + cs_22) + f__getResourceName(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource()));
current_location.update_lineno(1812);
#line 1812 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceAddress;
}
}
}
else {
current_location.update_lineno(1816);
#line 1816 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__primitiveScope == OneM2M__Types::PrimitiveScope::e__spRelative)) {
current_location.update_lineno(1817);
#line 1817 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__addressingMethod == OneM2M__Types::AddressingMethod::e__nonHierarchical)) {
current_location.update_lineno(1818);
#line 1818 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1820);
#line 1820 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ((OneM2M__Pixits::PX__CSE__ID + cs_22) + OneM2M__Pixits::PX__CSE__RESOURCE__ID);
}
else {
current_location.update_lineno(1822);
#line 1822 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = ((OneM2M__Pixits::PX__CSE__ID + cs_22) + f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource()));
current_location.update_lineno(1824);
#line 1824 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceAddress;
}
}
else {
current_location.update_lineno(1827);
#line 1827 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1828);
#line 1828 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return ((OneM2M__Pixits::PX__CSE__ID + cs_22) + OneM2M__Pixits::PX__CSE__NAME);
}
else {
current_location.update_lineno(1830);
#line 1830 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = ((f__getResourceAddress(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex())) + cs_22) + f__getResourceName(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource()));
current_location.update_lineno(1832);
#line 1832 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceAddress;
}
}
}
else {
current_location.update_lineno(1835);
#line 1835 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__primitiveScope == OneM2M__Types::PrimitiveScope::e__absolute)) {
current_location.update_lineno(1836);
#line 1836 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((OneM2M__TestSystem::Tester_component_vc__addressingMethod == OneM2M__Types::AddressingMethod::e__nonHierarchical)) {
current_location.update_lineno(1837);
#line 1837 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1838);
#line 1838 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (OneM2M__Pixits::PX__SP__ID + OneM2M__Pixits::PX__CSE__ID);
}
else {
current_location.update_lineno(1840);
#line 1840 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = ((f__getResourceAddress(f__getResourceAddress_p__targetResourceIndex_defval) + cs_22) + f__getResourceId(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource()));
current_location.update_lineno(1841);
#line 1841 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceAddress;
}
}
else {
current_location.update_lineno(1844);
#line 1844 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((p__targetResourceIndex == -1)) {
current_location.update_lineno(1845);
#line 1845 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return (((OneM2M__Pixits::PX__SP__ID + OneM2M__Pixits::PX__CSE__ID) + cs_22) + OneM2M__Pixits::PX__CSE__NAME);
}
else {
current_location.update_lineno(1847);
#line 1847 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__resourceAddress = ((f__getResourceAddress(INTEGER(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].parentIndex())) + cs_22) + f__getResourceName(const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource()));
current_location.update_lineno(1848);
#line 1848 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__resourceAddress;
}
}
}
else {
current_location.update_lineno(1852);
#line 1852 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return cs_3;
}
}
}
}

void start_f__getResourceAddress(const COMPONENT& component_reference, const INTEGER& p__targetResourceIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getResourceAddress(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getResourceAddress", text_buf);
p__targetResourceIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__setResource(const OneM2M__Types::PrimitiveContent& p__resource, const OneM2M__Types::ResourceType& p__resourceType, const INTEGER& p__parentIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1863, TTCN_Location::LOCATION_FUNCTION, "f_setResource");
current_location.update_lineno(1864);
#line 1864 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__newIndex(-1);
current_location.update_lineno(1865);
#line 1865 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (OneM2M__TestSystem::Tester_component_vc__resourcesList.is_bound()) {
current_location.update_lineno(1866);
#line 1866 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::MyResource& tmp_277 = OneM2M__TestSystem::Tester_component_vc__resourcesList[OneM2M__TestSystem::Tester_component_vc__resourcesList.lengthof()]; /* 7388 */
tmp_277.parentIndex() = p__parentIndex;
tmp_277.resourceType() = p__resourceType;
tmp_277.resource() = p__resource;
}
}
else {
current_location.update_lineno(1868);
#line 1868 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::MyResource& tmp_279 = OneM2M__TestSystem::Tester_component_vc__resourcesList[0]; /* 7388 */
tmp_279.parentIndex() = p__parentIndex;
tmp_279.resourceType() = p__resourceType;
tmp_279.resource() = p__resource;
}
}
current_location.update_lineno(1871);
#line 1871 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__newIndex = (OneM2M__TestSystem::Tester_component_vc__resourcesList.lengthof() - 1);
current_location.update_lineno(1872);
#line 1872 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_281;
tmp_281 = OneM2M__Types::ResourceType_template(p__resourceType).match(OneM2M__Types::ResourceType::int2);
if (!tmp_281) tmp_281 = INTEGER_template(p__parentIndex).match(-1);
if (tmp_281) {
current_location.update_lineno(1873);
#line 1873 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::IntegerList tmp_282;
{
OneM2M__Types::IntegerList tmp_283;
tmp_283.set_size(1);
tmp_283[0] = v__newIndex;
tmp_282 = (OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted + tmp_283);
}
OneM2M__TestSystem::Tester_component_vc__resourcesIndexToBeDeleted = tmp_282;
}
}
}
current_location.update_lineno(1876);
#line 1876 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__newIndex;
}

void start_f__setResource(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent& p__resource, const OneM2M__Types::ResourceType& p__resourceType, const INTEGER& p__parentIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_setResource(");
p__resource.log();
TTCN_Logger::log_event_str(", ");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_setResource", text_buf);
p__resource.encode_text(text_buf);
p__resourceType.encode_text(text_buf);
p__parentIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

OneM2M__Types::RequestPrimitive f__setAcpId(const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AcpType_template& p__accessControlPolicyIDs)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1887, TTCN_Location::LOCATION_FUNCTION, "f_setAcpId");
OneM2M__Types::RequestPrimitive_template p__requestPrimitive_shadow(p__requestPrimitive);
current_location.update_lineno(1889);
#line 1889 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1890);
#line 1890 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().aE().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1892);
#line 1892 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_container)) {
current_location.update_lineno(1893);
#line 1893 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().container().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1895);
#line 1895 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_group__)) {
current_location.update_lineno(1896);
#line 1896 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().group__().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1898);
#line 1898 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_serviceSubscribedAppRule)) {
current_location.update_lineno(1899);
#line 1899 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().serviceSubscribedAppRule().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1901);
#line 1901 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription)) {
current_location.update_lineno(1902);
#line 1902 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().subscription().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1904);
#line 1904 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_locationPolicy)) {
current_location.update_lineno(1905);
#line 1905 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().locationPolicy().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1907);
#line 1907 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_delivery)) {
current_location.update_lineno(1908);
#line 1908 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().delivery().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1910);
#line 1910 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_mgmtCmd)) {
current_location.update_lineno(1911);
#line 1911 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().mgmtCmd().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1913);
#line 1913 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_node)) {
current_location.update_lineno(1914);
#line 1914 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().node().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1916);
#line 1916 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE)) {
current_location.update_lineno(1917);
#line 1917 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().remoteCSE().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1919);
#line 1919 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_request)) {
current_location.update_lineno(1920);
#line 1920 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().request().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1922);
#line 1922 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_statsCollect)) {
current_location.update_lineno(1923);
#line 1923 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().statsCollect().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1925);
#line 1925 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__requestPrimitive_shadow.primitiveContent().ischosen(OneM2M__Types::PrimitiveContent::ALT_statsConfig)) {
current_location.update_lineno(1926);
#line 1926 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__requestPrimitive_shadow.primitiveContent().statsConfig().accessControlPolicyIDs() = p__accessControlPolicyIDs;
}
else {
current_location.update_lineno(1928);
#line 1928 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "f_setAcpId:INFO: Resource not having acpi attribute. Not possible to set acpi");
}
}
}
}
}
}
}
}
}
}
}
}
}
current_location.update_lineno(1930);
#line 1930 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return p__requestPrimitive_shadow.valueof();
}

void start_f__setAcpId(const COMPONENT& component_reference, const OneM2M__Types::RequestPrimitive_template& p__requestPrimitive, const OneM2M__Types::AcpType_template& p__accessControlPolicyIDs)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_setAcpId(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__accessControlPolicyIDs.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_setAcpId", text_buf);
p__requestPrimitive.encode_text(text_buf);
p__accessControlPolicyIDs.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

UNIVERSAL_CHARSTRING f__getAeId(const INTEGER& p__targetResourceIndex)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1938, TTCN_Location::LOCATION_FUNCTION, "f_getAeId");
current_location.update_lineno(1940);
#line 1940 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(1941);
#line 1941 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return const_cast< const OneM2M__Types::MyResourcesList&>(OneM2M__TestSystem::Tester_component_vc__resourcesList)[p__targetResourceIndex].resource().aE().aE__ID()();
}
current_location.update_lineno(1944);
#line 1944 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Logger::log_str(TTCN_USER, "f_getAeId:WARNING: p_targetResourceIndex does not refer to AE resource");
current_location.update_lineno(1945);
#line 1945 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return cs_3;
}

void start_f__getAeId(const COMPONENT& component_reference, const INTEGER& p__targetResourceIndex)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getAeId(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_getAeId", text_buf);
p__targetResourceIndex.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__checkCseTesterStatus()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1961, TTCN_Location::LOCATION_FUNCTION, "f_checkCseTesterStatus");
current_location.update_lineno(1963);
#line 1963 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((TTCN_Runtime::getverdict() != PASS)) {
current_location.update_lineno(1964);
#line 1964 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cse__postamble__deleteResources();
current_location.update_lineno(1966);
#line 1966 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cfCseTesterDown();
current_location.update_lineno(1967);
#line 1967 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}

void start_f__checkCseTesterStatus(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_checkCseTesterStatus(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_checkCseTesterStatus", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__checkAeTesterStatus()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1977, TTCN_Location::LOCATION_FUNCTION, "f_checkAeTesterStatus");
current_location.update_lineno(1979);
#line 1979 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((TTCN_Runtime::getverdict() != PASS)) {
current_location.update_lineno(1982);
#line 1982 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
f__cfAeTesterDown();
current_location.update_lineno(1983);
#line 1983 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::stop_execution();
}
}

void start_f__checkAeTesterStatus(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_checkAeTesterStatus(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_checkAeTesterStatus", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__sendAcPrimitive(const CHARSTRING& p__event, const CHARSTRING& p__data)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 1993, TTCN_Location::LOCATION_FUNCTION, "f_sendAcPrimitive");
current_location.update_lineno(1996);
#line 1996 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
CHARSTRING v__data((cs_3 + p__data));
current_location.update_lineno(1997);
#line 1997 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::AcRequestPrimitive_template tmp_297;
tmp_297.event() = p__event;
tmp_297.data().AT_CHARSTRING() = v__data;
OneM2M__TestSystem::Tester_component_acPort.send(tmp_297);
}
}

void start_f__sendAcPrimitive(const COMPONENT& component_reference, const CHARSTRING& p__event, const CHARSTRING& p__data)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_sendAcPrimitive(");
p__event.log();
TTCN_Logger::log_event_str(", ");
p__data.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_sendAcPrimitive", text_buf);
p__event.encode_text(text_buf);
p__data.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

alt_status a__default_instance()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2006, TTCN_Location::LOCATION_ALTSTEP, "a_default");
alt_status ret_val = ALT_NO;
current_location.update_lineno(2008);
#line 2008 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::Tester_component_tc__wait.timeout(NULL)) {
case ALT_YES:
{
current_location.update_lineno(2009);
#line 2009 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("a_default:INFO: Timeout while awaiting reaction of the IUT prior to Upper Tester action"),TTCN_Logger::end_event_log2str()));
}
return ALT_YES;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(2011);
#line 2011 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
switch (OneM2M__TestSystem::Tester_component_tc__ac.timeout(NULL)) {
case ALT_YES:
{
current_location.update_lineno(2012);
#line 2012 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("a_default:INFO: Timeout while awaiting the reception of a message"),TTCN_Logger::end_event_log2str()));
}
return ALT_YES;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__default()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__default_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_default.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__default()
{
return new a__default_Default();
}

UNIVERSAL_CHARSTRING f__resourceIdCleaner(const UNIVERSAL_CHARSTRING& p__resourceID)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2018, TTCN_Location::LOCATION_FUNCTION, "f_resourceIdCleaner");
current_location.update_lineno(2019);
#line 2019 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__length(p__resourceID.lengthof());
current_location.update_lineno(2020);
#line 2020 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(2021);
#line 2021 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
UNIVERSAL_CHARSTRING result(cs_3);
current_location.update_lineno(2023);
#line 2023 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = (v__length - 1);
current_location.update_lineno(2023);
#line 2023 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(2023);
#line 2023 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i >= 0)) break;
current_location.update_lineno(2024);
#line 2024 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceID)[i] == cs_22)) {
current_location.update_lineno(2025);
#line 2025 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return result;
}
else {
current_location.update_lineno(2028);
#line 2028 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
UNIVERSAL_CHARSTRING tmp_299;
tmp_299 = (const_cast< const UNIVERSAL_CHARSTRING&>(p__resourceID)[i] + result);
result = tmp_299;
}
}
current_location.update_lineno(2023);
#line 2023 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_300;
--i;
}
}
current_location.update_lineno(2031);
#line 2031 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return result;
}

UNIVERSAL_CHARSTRING f__removePoa(const UNIVERSAL_CHARSTRING& p__url)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2040, TTCN_Location::LOCATION_FUNCTION, "f_removePoa");
current_location.update_lineno(2041);
#line 2041 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__length(p__url.lengthof());
current_location.update_lineno(2042);
#line 2042 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(2043);
#line 2043 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER v__numberOfColons(0);
current_location.update_lineno(2044);
#line 2044 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
BOOLEAN v__lookForSlash(FALSE);
current_location.update_lineno(2045);
#line 2045 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
BOOLEAN v__getURI(FALSE);
current_location.update_lineno(2046);
#line 2046 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
UNIVERSAL_CHARSTRING v__uri(cs_3);
current_location.update_lineno(2049);
#line 2049 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = 0;
current_location.update_lineno(2049);
#line 2049 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(2049);
#line 2049 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i < v__length)) break;
current_location.update_lineno(2050);
#line 2050 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__getURI) {
current_location.update_lineno(2051);
#line 2051 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
UNIVERSAL_CHARSTRING tmp_302;
tmp_302 = (v__uri + const_cast< const UNIVERSAL_CHARSTRING&>(p__url)[i]);
v__uri = tmp_302;
}
}
else {
current_location.update_lineno(2053);
#line 2053 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const UNIVERSAL_CHARSTRING&>(p__url)[i] == cs_43)) {
current_location.update_lineno(2054);
#line 2054 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_303;
++v__numberOfColons;
}
}
current_location.update_lineno(2056);
#line 2056 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__numberOfColons >= 2)) {
current_location.update_lineno(2057);
#line 2057 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__lookForSlash = TRUE;
}
current_location.update_lineno(2059);
#line 2059 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (v__lookForSlash) {
current_location.update_lineno(2060);
#line 2060 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const UNIVERSAL_CHARSTRING&>(p__url)[i] == cs_22)) {
current_location.update_lineno(2061);
#line 2061 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__getURI = TRUE;
}
}
}
current_location.update_lineno(2049);
#line 2049 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_306;
++i;
}
}
current_location.update_lineno(2068);
#line 2068 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((v__uri == cs_3)) {
current_location.update_lineno(2069);
#line 2069 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return p__url;
}
else {
current_location.update_lineno(2071);
#line 2071 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__uri;
}
}

void f__removeElementFromList(OneM2M__Types::IntegerList& p__list, const INTEGER& p__valueToBeDeleted)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2075, TTCN_Location::LOCATION_FUNCTION, "f_removeElementFromList");
current_location.update_lineno(2076);
#line 2076 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::IntegerList result(NULL_VALUE);
current_location.update_lineno(2077);
#line 2077 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
INTEGER i;
current_location.update_lineno(2078);
#line 2078 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
i = 0;
current_location.update_lineno(2078);
#line 2078 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
for ( ; ; ) {
current_location.update_lineno(2078);
#line 2078 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (!(i < p__list.lengthof())) break;
current_location.update_lineno(2079);
#line 2079 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((const_cast< const OneM2M__Types::IntegerList&>(p__list)[i] != p__valueToBeDeleted)) {
current_location.update_lineno(2080);
#line 2080 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
OneM2M__Types::IntegerList tmp_308;
{
OneM2M__Types::IntegerList tmp_309;
tmp_309.set_size(1);
tmp_309[0] = const_cast< const OneM2M__Types::IntegerList&>(p__list)[i];
tmp_308 = (result + tmp_309);
}
result = tmp_308;
}
}
current_location.update_lineno(2078);
#line 2078 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
INTEGER tmp_310;
++i;
}
}
current_location.update_lineno(2083);
#line 2083 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
p__list = result;
}

OneM2M__Types::PrimitiveContent_template f__getTemplateFromPrimitiveContent(const OneM2M__Types::PrimitiveContent_template& p__primitiveContent)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2086, TTCN_Location::LOCATION_FUNCTION, "f_getTemplateFromPrimitiveContent");
current_location.update_lineno(2087);
#line 2087 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::PrimitiveContent_template v__primitiveContent(OMIT_VALUE);
current_location.update_lineno(2089);
#line 2089 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container)) {
current_location.update_lineno(2090);
#line 2090 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container() = OneM2M__Templates::mw__contentContainerBase;
current_location.update_lineno(2092);
#line 2092 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_318;
{
boolean tmp_313 = p__primitiveContent.is_bound();
if(tmp_313) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_313 = FALSE;
break;
case ANY_VALUE:
tmp_313 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_313) {
tmp_313 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_313) {
const OneM2M__Types::PrimitiveContent_template& tmp_314 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_315 = tmp_314.container();
tmp_313 = tmp_315.is_bound();
if(tmp_313) {
switch (tmp_315.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_313 = FALSE;
break;
case ANY_VALUE:
tmp_313 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_313) {
const OneM2M__Types::Container__optional_template& tmp_316 = tmp_315;
const OneM2M__Types::Labels_template& tmp_317 = tmp_316.labels();
tmp_313 = tmp_317.is_present();
}
break;}
default:
tmp_313 = FALSE;
break;
}
}
}
break;}
default:
tmp_313 = FALSE;
break;
}
}
tmp_318 = tmp_313;
}
if (tmp_318) {
current_location.update_lineno(2093);
#line 2093 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2095);
#line 2095 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_325;
{
boolean tmp_320 = p__primitiveContent.is_bound();
if(tmp_320) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_320 = FALSE;
break;
case ANY_VALUE:
tmp_320 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_320) {
tmp_320 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_320) {
const OneM2M__Types::PrimitiveContent_template& tmp_321 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_322 = tmp_321.container();
tmp_320 = tmp_322.is_bound();
if(tmp_320) {
switch (tmp_322.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_320 = FALSE;
break;
case ANY_VALUE:
tmp_320 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_320) {
const OneM2M__Types::Container__optional_template& tmp_323 = tmp_322;
const OneM2M__Types::AcpType_template& tmp_324 = tmp_323.accessControlPolicyIDs();
tmp_320 = tmp_324.is_present();
}
break;}
default:
tmp_320 = FALSE;
break;
}
}
}
break;}
default:
tmp_320 = FALSE;
break;
}
}
tmp_325 = tmp_320;
}
if (tmp_325) {
current_location.update_lineno(2096);
#line 2096 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().accessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2098);
#line 2098 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_332;
{
boolean tmp_327 = p__primitiveContent.is_bound();
if(tmp_327) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_327 = FALSE;
break;
case ANY_VALUE:
tmp_327 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_327) {
tmp_327 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_327) {
const OneM2M__Types::PrimitiveContent_template& tmp_328 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_329 = tmp_328.container();
tmp_327 = tmp_329.is_bound();
if(tmp_327) {
switch (tmp_329.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_327 = FALSE;
break;
case ANY_VALUE:
tmp_327 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_327) {
const OneM2M__Types::Container__optional_template& tmp_330 = tmp_329;
const OneM2M__Types::ListOfURIs_template& tmp_331 = tmp_330.dynamicAuthorizationConsultationIDs();
tmp_327 = tmp_331.is_present();
}
break;}
default:
tmp_327 = FALSE;
break;
}
}
}
break;}
default:
tmp_327 = FALSE;
break;
}
}
tmp_332 = tmp_327;
}
if (tmp_332) {
current_location.update_lineno(2099);
#line 2099 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().dynamicAuthorizationConsultationIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2101);
#line 2101 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_339;
{
boolean tmp_334 = p__primitiveContent.is_bound();
if(tmp_334) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_334 = FALSE;
break;
case ANY_VALUE:
tmp_334 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_334) {
tmp_334 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_334) {
const OneM2M__Types::PrimitiveContent_template& tmp_335 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_336 = tmp_335.container();
tmp_334 = tmp_336.is_bound();
if(tmp_334) {
switch (tmp_336.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_334 = FALSE;
break;
case ANY_VALUE:
tmp_334 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_334) {
const OneM2M__Types::Container__optional_template& tmp_337 = tmp_336;
const OneM2M__Types::ListOfURIs_template& tmp_338 = tmp_337.announceTo();
tmp_334 = tmp_338.is_present();
}
break;}
default:
tmp_334 = FALSE;
break;
}
}
}
break;}
default:
tmp_334 = FALSE;
break;
}
}
tmp_339 = tmp_334;
}
if (tmp_339) {
current_location.update_lineno(2102);
#line 2102 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2104);
#line 2104 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_346;
{
boolean tmp_341 = p__primitiveContent.is_bound();
if(tmp_341) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_341 = FALSE;
break;
case ANY_VALUE:
tmp_341 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_341) {
tmp_341 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_341) {
const OneM2M__Types::PrimitiveContent_template& tmp_342 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_343 = tmp_342.container();
tmp_341 = tmp_343.is_bound();
if(tmp_341) {
switch (tmp_343.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_341 = FALSE;
break;
case ANY_VALUE:
tmp_341 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_341) {
const OneM2M__Types::Container__optional_template& tmp_344 = tmp_343;
const OneM2M__Types::Container__optional_announcedAttribute_template& tmp_345 = tmp_344.announcedAttribute();
tmp_341 = tmp_345.is_present();
}
break;}
default:
tmp_341 = FALSE;
break;
}
}
}
break;}
default:
tmp_341 = FALSE;
break;
}
}
tmp_346 = tmp_341;
}
if (tmp_346) {
current_location.update_lineno(2105);
#line 2105 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().announcedAttribute() = ANY_VALUE;
}
}
current_location.update_lineno(2107);
#line 2107 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_353;
{
boolean tmp_348 = p__primitiveContent.is_bound();
if(tmp_348) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_348 = FALSE;
break;
case ANY_VALUE:
tmp_348 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_348) {
tmp_348 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_348) {
const OneM2M__Types::PrimitiveContent_template& tmp_349 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_350 = tmp_349.container();
tmp_348 = tmp_350.is_bound();
if(tmp_348) {
switch (tmp_350.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_348 = FALSE;
break;
case ANY_VALUE:
tmp_348 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_348) {
const OneM2M__Types::Container__optional_template& tmp_351 = tmp_350;
const UNIVERSAL_CHARSTRING_template& tmp_352 = tmp_351.creator();
tmp_348 = tmp_352.is_present();
}
break;}
default:
tmp_348 = FALSE;
break;
}
}
}
break;}
default:
tmp_348 = FALSE;
break;
}
}
tmp_353 = tmp_348;
}
if (tmp_353) {
current_location.update_lineno(2108);
#line 2108 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().creator() = ANY_VALUE;
}
}
current_location.update_lineno(2110);
#line 2110 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_360;
{
boolean tmp_355 = p__primitiveContent.is_bound();
if(tmp_355) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_355 = FALSE;
break;
case ANY_VALUE:
tmp_355 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_355) {
tmp_355 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_355) {
const OneM2M__Types::PrimitiveContent_template& tmp_356 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_357 = tmp_356.container();
tmp_355 = tmp_357.is_bound();
if(tmp_355) {
switch (tmp_357.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_355 = FALSE;
break;
case ANY_VALUE:
tmp_355 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_355) {
const OneM2M__Types::Container__optional_template& tmp_358 = tmp_357;
const INTEGER_template& tmp_359 = tmp_358.maxNrOfInstances();
tmp_355 = tmp_359.is_present();
}
break;}
default:
tmp_355 = FALSE;
break;
}
}
}
break;}
default:
tmp_355 = FALSE;
break;
}
}
tmp_360 = tmp_355;
}
if (tmp_360) {
current_location.update_lineno(2111);
#line 2111 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().maxNrOfInstances() = ANY_VALUE;
}
}
current_location.update_lineno(2113);
#line 2113 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_367;
{
boolean tmp_362 = p__primitiveContent.is_bound();
if(tmp_362) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_362 = FALSE;
break;
case ANY_VALUE:
tmp_362 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_362) {
tmp_362 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_362) {
const OneM2M__Types::PrimitiveContent_template& tmp_363 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_364 = tmp_363.container();
tmp_362 = tmp_364.is_bound();
if(tmp_362) {
switch (tmp_364.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_362 = FALSE;
break;
case ANY_VALUE:
tmp_362 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_362) {
const OneM2M__Types::Container__optional_template& tmp_365 = tmp_364;
const INTEGER_template& tmp_366 = tmp_365.maxByteSize();
tmp_362 = tmp_366.is_present();
}
break;}
default:
tmp_362 = FALSE;
break;
}
}
}
break;}
default:
tmp_362 = FALSE;
break;
}
}
tmp_367 = tmp_362;
}
if (tmp_367) {
current_location.update_lineno(2114);
#line 2114 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().maxByteSize() = ANY_VALUE;
}
}
current_location.update_lineno(2116);
#line 2116 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_374;
{
boolean tmp_369 = p__primitiveContent.is_bound();
if(tmp_369) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_369 = FALSE;
break;
case ANY_VALUE:
tmp_369 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_369) {
tmp_369 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_369) {
const OneM2M__Types::PrimitiveContent_template& tmp_370 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_371 = tmp_370.container();
tmp_369 = tmp_371.is_bound();
if(tmp_369) {
switch (tmp_371.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_369 = FALSE;
break;
case ANY_VALUE:
tmp_369 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_369) {
const OneM2M__Types::Container__optional_template& tmp_372 = tmp_371;
const INTEGER_template& tmp_373 = tmp_372.maxInstanceAge();
tmp_369 = tmp_373.is_present();
}
break;}
default:
tmp_369 = FALSE;
break;
}
}
}
break;}
default:
tmp_369 = FALSE;
break;
}
}
tmp_374 = tmp_369;
}
if (tmp_374) {
current_location.update_lineno(2117);
#line 2117 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().maxInstanceAge() = ANY_VALUE;
}
}
current_location.update_lineno(2119);
#line 2119 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_381;
{
boolean tmp_376 = p__primitiveContent.is_bound();
if(tmp_376) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_376 = FALSE;
break;
case ANY_VALUE:
tmp_376 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_376) {
tmp_376 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_376) {
const OneM2M__Types::PrimitiveContent_template& tmp_377 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_378 = tmp_377.container();
tmp_376 = tmp_378.is_bound();
if(tmp_376) {
switch (tmp_378.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_376 = FALSE;
break;
case ANY_VALUE:
tmp_376 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_376) {
const OneM2M__Types::Container__optional_template& tmp_379 = tmp_378;
const UNIVERSAL_CHARSTRING_template& tmp_380 = tmp_379.locationID();
tmp_376 = tmp_380.is_present();
}
break;}
default:
tmp_376 = FALSE;
break;
}
}
}
break;}
default:
tmp_376 = FALSE;
break;
}
}
tmp_381 = tmp_376;
}
if (tmp_381) {
current_location.update_lineno(2120);
#line 2120 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().locationID() = ANY_VALUE;
}
}
current_location.update_lineno(2122);
#line 2122 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_388;
{
boolean tmp_383 = p__primitiveContent.is_bound();
if(tmp_383) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_383 = FALSE;
break;
case ANY_VALUE:
tmp_383 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_383) {
tmp_383 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_383) {
const OneM2M__Types::PrimitiveContent_template& tmp_384 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_385 = tmp_384.container();
tmp_383 = tmp_385.is_bound();
if(tmp_383) {
switch (tmp_385.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_383 = FALSE;
break;
case ANY_VALUE:
tmp_383 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_383) {
const OneM2M__Types::Container__optional_template& tmp_386 = tmp_385;
const UNIVERSAL_CHARSTRING_template& tmp_387 = tmp_386.ontologyRef();
tmp_383 = tmp_387.is_present();
}
break;}
default:
tmp_383 = FALSE;
break;
}
}
}
break;}
default:
tmp_383 = FALSE;
break;
}
}
tmp_388 = tmp_383;
}
if (tmp_388) {
current_location.update_lineno(2123);
#line 2123 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().ontologyRef() = ANY_VALUE;
}
}
current_location.update_lineno(2125);
#line 2125 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_395;
{
boolean tmp_390 = p__primitiveContent.is_bound();
if(tmp_390) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_390 = FALSE;
break;
case ANY_VALUE:
tmp_390 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_390) {
tmp_390 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_container);
}
if(tmp_390) {
const OneM2M__Types::PrimitiveContent_template& tmp_391 = p__primitiveContent;
const OneM2M__Types::Container__optional_template& tmp_392 = tmp_391.container();
tmp_390 = tmp_392.is_bound();
if(tmp_390) {
switch (tmp_392.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_390 = FALSE;
break;
case ANY_VALUE:
tmp_390 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_390) {
const OneM2M__Types::Container__optional_template& tmp_393 = tmp_392;
const BOOLEAN_template& tmp_394 = tmp_393.disableRetrieval();
tmp_390 = tmp_394.is_present();
}
break;}
default:
tmp_390 = FALSE;
break;
}
}
}
break;}
default:
tmp_390 = FALSE;
break;
}
}
tmp_395 = tmp_390;
}
if (tmp_395) {
current_location.update_lineno(2126);
#line 2126 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.container().disableRetrieval() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2130);
#line 2130 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE)) {
current_location.update_lineno(2131);
#line 2131 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE() = OneM2M__Templates::mw__contentAeBase;
current_location.update_lineno(2133);
#line 2133 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_403;
{
boolean tmp_398 = p__primitiveContent.is_bound();
if(tmp_398) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_398 = FALSE;
break;
case ANY_VALUE:
tmp_398 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_398) {
tmp_398 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_398) {
const OneM2M__Types::PrimitiveContent_template& tmp_399 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_400 = tmp_399.aE();
tmp_398 = tmp_400.is_bound();
if(tmp_398) {
switch (tmp_400.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_398 = FALSE;
break;
case ANY_VALUE:
tmp_398 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_398) {
const OneM2M__Types::AE__optional_template& tmp_401 = tmp_400;
const OneM2M__Types::Labels_template& tmp_402 = tmp_401.labels();
tmp_398 = tmp_402.is_present();
}
break;}
default:
tmp_398 = FALSE;
break;
}
}
}
break;}
default:
tmp_398 = FALSE;
break;
}
}
tmp_403 = tmp_398;
}
if (tmp_403) {
current_location.update_lineno(2134);
#line 2134 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2136);
#line 2136 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_410;
{
boolean tmp_405 = p__primitiveContent.is_bound();
if(tmp_405) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_405 = FALSE;
break;
case ANY_VALUE:
tmp_405 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_405) {
tmp_405 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_405) {
const OneM2M__Types::PrimitiveContent_template& tmp_406 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_407 = tmp_406.aE();
tmp_405 = tmp_407.is_bound();
if(tmp_405) {
switch (tmp_407.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_405 = FALSE;
break;
case ANY_VALUE:
tmp_405 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_405) {
const OneM2M__Types::AE__optional_template& tmp_408 = tmp_407;
const OneM2M__Types::AcpType_template& tmp_409 = tmp_408.accessControlPolicyIDs();
tmp_405 = tmp_409.is_present();
}
break;}
default:
tmp_405 = FALSE;
break;
}
}
}
break;}
default:
tmp_405 = FALSE;
break;
}
}
tmp_410 = tmp_405;
}
if (tmp_410) {
current_location.update_lineno(2137);
#line 2137 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().accessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2139);
#line 2139 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_417;
{
boolean tmp_412 = p__primitiveContent.is_bound();
if(tmp_412) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_412 = FALSE;
break;
case ANY_VALUE:
tmp_412 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_412) {
tmp_412 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_412) {
const OneM2M__Types::PrimitiveContent_template& tmp_413 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_414 = tmp_413.aE();
tmp_412 = tmp_414.is_bound();
if(tmp_412) {
switch (tmp_414.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_412 = FALSE;
break;
case ANY_VALUE:
tmp_412 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_412) {
const OneM2M__Types::AE__optional_template& tmp_415 = tmp_414;
const OneM2M__Types::ListOfURIs_template& tmp_416 = tmp_415.dynamicAuthorizationConsultationIDs();
tmp_412 = tmp_416.is_present();
}
break;}
default:
tmp_412 = FALSE;
break;
}
}
}
break;}
default:
tmp_412 = FALSE;
break;
}
}
tmp_417 = tmp_412;
}
if (tmp_417) {
current_location.update_lineno(2140);
#line 2140 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().dynamicAuthorizationConsultationIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2142);
#line 2142 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_424;
{
boolean tmp_419 = p__primitiveContent.is_bound();
if(tmp_419) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_419 = FALSE;
break;
case ANY_VALUE:
tmp_419 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_419) {
tmp_419 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_419) {
const OneM2M__Types::PrimitiveContent_template& tmp_420 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_421 = tmp_420.aE();
tmp_419 = tmp_421.is_bound();
if(tmp_419) {
switch (tmp_421.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_419 = FALSE;
break;
case ANY_VALUE:
tmp_419 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_419) {
const OneM2M__Types::AE__optional_template& tmp_422 = tmp_421;
const OneM2M__Types::ListOfURIs_template& tmp_423 = tmp_422.announceTo();
tmp_419 = tmp_423.is_present();
}
break;}
default:
tmp_419 = FALSE;
break;
}
}
}
break;}
default:
tmp_419 = FALSE;
break;
}
}
tmp_424 = tmp_419;
}
if (tmp_424) {
current_location.update_lineno(2143);
#line 2143 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2145);
#line 2145 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_431;
{
boolean tmp_426 = p__primitiveContent.is_bound();
if(tmp_426) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_426 = FALSE;
break;
case ANY_VALUE:
tmp_426 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_426) {
tmp_426 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_426) {
const OneM2M__Types::PrimitiveContent_template& tmp_427 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_428 = tmp_427.aE();
tmp_426 = tmp_428.is_bound();
if(tmp_426) {
switch (tmp_428.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_426 = FALSE;
break;
case ANY_VALUE:
tmp_426 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_426) {
const OneM2M__Types::AE__optional_template& tmp_429 = tmp_428;
const OneM2M__Types::AE__optional_announcedAttribute_template& tmp_430 = tmp_429.announcedAttribute();
tmp_426 = tmp_430.is_present();
}
break;}
default:
tmp_426 = FALSE;
break;
}
}
}
break;}
default:
tmp_426 = FALSE;
break;
}
}
tmp_431 = tmp_426;
}
if (tmp_431) {
current_location.update_lineno(2146);
#line 2146 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().announcedAttribute() = ANY_VALUE;
}
}
current_location.update_lineno(2148);
#line 2148 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_438;
{
boolean tmp_433 = p__primitiveContent.is_bound();
if(tmp_433) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_433 = FALSE;
break;
case ANY_VALUE:
tmp_433 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_433) {
tmp_433 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_433) {
const OneM2M__Types::PrimitiveContent_template& tmp_434 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_435 = tmp_434.aE();
tmp_433 = tmp_435.is_bound();
if(tmp_433) {
switch (tmp_435.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_433 = FALSE;
break;
case ANY_VALUE:
tmp_433 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_433) {
const OneM2M__Types::AE__optional_template& tmp_436 = tmp_435;
const UNIVERSAL_CHARSTRING_template& tmp_437 = tmp_436.appName();
tmp_433 = tmp_437.is_present();
}
break;}
default:
tmp_433 = FALSE;
break;
}
}
}
break;}
default:
tmp_433 = FALSE;
break;
}
}
tmp_438 = tmp_433;
}
if (tmp_438) {
current_location.update_lineno(2149);
#line 2149 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().appName() = ANY_VALUE;
}
}
current_location.update_lineno(2151);
#line 2151 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_445;
{
boolean tmp_440 = p__primitiveContent.is_bound();
if(tmp_440) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_440 = FALSE;
break;
case ANY_VALUE:
tmp_440 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_440) {
tmp_440 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_440) {
const OneM2M__Types::PrimitiveContent_template& tmp_441 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_442 = tmp_441.aE();
tmp_440 = tmp_442.is_bound();
if(tmp_440) {
switch (tmp_442.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_440 = FALSE;
break;
case ANY_VALUE:
tmp_440 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_440) {
const OneM2M__Types::AE__optional_template& tmp_443 = tmp_442;
const OneM2M__Types::PoaList_template& tmp_444 = tmp_443.pointOfAccess();
tmp_440 = tmp_444.is_present();
}
break;}
default:
tmp_440 = FALSE;
break;
}
}
}
break;}
default:
tmp_440 = FALSE;
break;
}
}
tmp_445 = tmp_440;
}
if (tmp_445) {
current_location.update_lineno(2152);
#line 2152 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().pointOfAccess() = ANY_VALUE;
}
}
current_location.update_lineno(2154);
#line 2154 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_452;
{
boolean tmp_447 = p__primitiveContent.is_bound();
if(tmp_447) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_447 = FALSE;
break;
case ANY_VALUE:
tmp_447 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_447) {
tmp_447 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_447) {
const OneM2M__Types::PrimitiveContent_template& tmp_448 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_449 = tmp_448.aE();
tmp_447 = tmp_449.is_bound();
if(tmp_447) {
switch (tmp_449.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_447 = FALSE;
break;
case ANY_VALUE:
tmp_447 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_447) {
const OneM2M__Types::AE__optional_template& tmp_450 = tmp_449;
const UNIVERSAL_CHARSTRING_template& tmp_451 = tmp_450.ontologyRef();
tmp_447 = tmp_451.is_present();
}
break;}
default:
tmp_447 = FALSE;
break;
}
}
}
break;}
default:
tmp_447 = FALSE;
break;
}
}
tmp_452 = tmp_447;
}
if (tmp_452) {
current_location.update_lineno(2155);
#line 2155 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().ontologyRef() = ANY_VALUE;
}
}
current_location.update_lineno(2157);
#line 2157 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_459;
{
boolean tmp_454 = p__primitiveContent.is_bound();
if(tmp_454) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_454 = FALSE;
break;
case ANY_VALUE:
tmp_454 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_454) {
tmp_454 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_454) {
const OneM2M__Types::PrimitiveContent_template& tmp_455 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_456 = tmp_455.aE();
tmp_454 = tmp_456.is_bound();
if(tmp_454) {
switch (tmp_456.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_454 = FALSE;
break;
case ANY_VALUE:
tmp_454 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_454) {
const OneM2M__Types::AE__optional_template& tmp_457 = tmp_456;
const UNIVERSAL_CHARSTRING_template& tmp_458 = tmp_457.nodeLink();
tmp_454 = tmp_458.is_present();
}
break;}
default:
tmp_454 = FALSE;
break;
}
}
}
break;}
default:
tmp_454 = FALSE;
break;
}
}
tmp_459 = tmp_454;
}
if (tmp_459) {
current_location.update_lineno(2158);
#line 2158 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().nodeLink() = ANY_VALUE;
}
}
current_location.update_lineno(2160);
#line 2160 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_466;
{
boolean tmp_461 = p__primitiveContent.is_bound();
if(tmp_461) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_461 = FALSE;
break;
case ANY_VALUE:
tmp_461 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_461) {
tmp_461 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_461) {
const OneM2M__Types::PrimitiveContent_template& tmp_462 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_463 = tmp_462.aE();
tmp_461 = tmp_463.is_bound();
if(tmp_461) {
switch (tmp_463.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_461 = FALSE;
break;
case ANY_VALUE:
tmp_461 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_461) {
const OneM2M__Types::AE__optional_template& tmp_464 = tmp_463;
const OneM2M__Types::Serializations_template& tmp_465 = tmp_464.contentSerialization();
tmp_461 = tmp_465.is_present();
}
break;}
default:
tmp_461 = FALSE;
break;
}
}
}
break;}
default:
tmp_461 = FALSE;
break;
}
}
tmp_466 = tmp_461;
}
if (tmp_466) {
current_location.update_lineno(2161);
#line 2161 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().contentSerialization() = ANY_VALUE;
}
}
current_location.update_lineno(2163);
#line 2163 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_473;
{
boolean tmp_468 = p__primitiveContent.is_bound();
if(tmp_468) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_468 = FALSE;
break;
case ANY_VALUE:
tmp_468 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_468) {
tmp_468 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_aE);
}
if(tmp_468) {
const OneM2M__Types::PrimitiveContent_template& tmp_469 = p__primitiveContent;
const OneM2M__Types::AE__optional_template& tmp_470 = tmp_469.aE();
tmp_468 = tmp_470.is_bound();
if(tmp_468) {
switch (tmp_470.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_468 = FALSE;
break;
case ANY_VALUE:
tmp_468 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_468) {
const OneM2M__Types::AE__optional_template& tmp_471 = tmp_470;
const OneM2M__Types::E2eSecInfo_template& tmp_472 = tmp_471.e2eSecInfo();
tmp_468 = tmp_472.is_present();
}
break;}
default:
tmp_468 = FALSE;
break;
}
}
}
break;}
default:
tmp_468 = FALSE;
break;
}
}
tmp_473 = tmp_468;
}
if (tmp_473) {
current_location.update_lineno(2164);
#line 2164 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.aE().e2eSecInfo() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2168);
#line 2168 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy)) {
current_location.update_lineno(2169);
#line 2169 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.accessControlPolicy() = OneM2M__Templates::mw__contentAcpBase;
current_location.update_lineno(2171);
#line 2171 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_481;
{
boolean tmp_476 = p__primitiveContent.is_bound();
if(tmp_476) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_476 = FALSE;
break;
case ANY_VALUE:
tmp_476 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_476) {
tmp_476 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy);
}
if(tmp_476) {
const OneM2M__Types::PrimitiveContent_template& tmp_477 = p__primitiveContent;
const OneM2M__Types::AccessControlPolicy__optional_template& tmp_478 = tmp_477.accessControlPolicy();
tmp_476 = tmp_478.is_bound();
if(tmp_476) {
switch (tmp_478.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_476 = FALSE;
break;
case ANY_VALUE:
tmp_476 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_476) {
const OneM2M__Types::AccessControlPolicy__optional_template& tmp_479 = tmp_478;
const OneM2M__Types::Labels_template& tmp_480 = tmp_479.labels();
tmp_476 = tmp_480.is_present();
}
break;}
default:
tmp_476 = FALSE;
break;
}
}
}
break;}
default:
tmp_476 = FALSE;
break;
}
}
tmp_481 = tmp_476;
}
if (tmp_481) {
current_location.update_lineno(2172);
#line 2172 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.accessControlPolicy().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2174);
#line 2174 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_488;
{
boolean tmp_483 = p__primitiveContent.is_bound();
if(tmp_483) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_483 = FALSE;
break;
case ANY_VALUE:
tmp_483 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_483) {
tmp_483 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_accessControlPolicy);
}
if(tmp_483) {
const OneM2M__Types::PrimitiveContent_template& tmp_484 = p__primitiveContent;
const OneM2M__Types::AccessControlPolicy__optional_template& tmp_485 = tmp_484.accessControlPolicy();
tmp_483 = tmp_485.is_bound();
if(tmp_483) {
switch (tmp_485.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_483 = FALSE;
break;
case ANY_VALUE:
tmp_483 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_483) {
const OneM2M__Types::AccessControlPolicy__optional_template& tmp_486 = tmp_485;
const OneM2M__Types::ListOfURIs_template& tmp_487 = tmp_486.announceTo();
tmp_483 = tmp_487.is_present();
}
break;}
default:
tmp_483 = FALSE;
break;
}
}
}
break;}
default:
tmp_483 = FALSE;
break;
}
}
tmp_488 = tmp_483;
}
if (tmp_488) {
current_location.update_lineno(2175);
#line 2175 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.accessControlPolicy().announceTo() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2179);
#line 2179 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance)) {
current_location.update_lineno(2180);
#line 2180 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance() = OneM2M__Templates::mw__contentContentInstanceBase;
current_location.update_lineno(2182);
#line 2182 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_496;
{
boolean tmp_491 = p__primitiveContent.is_bound();
if(tmp_491) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_491 = FALSE;
break;
case ANY_VALUE:
tmp_491 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_491) {
tmp_491 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_491) {
const OneM2M__Types::PrimitiveContent_template& tmp_492 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_493 = tmp_492.contentInstance();
tmp_491 = tmp_493.is_bound();
if(tmp_491) {
switch (tmp_493.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_491 = FALSE;
break;
case ANY_VALUE:
tmp_491 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_491) {
const OneM2M__Types::ContentInstance__optional_template& tmp_494 = tmp_493;
const OneM2M__Types::Labels_template& tmp_495 = tmp_494.labels();
tmp_491 = tmp_495.is_present();
}
break;}
default:
tmp_491 = FALSE;
break;
}
}
}
break;}
default:
tmp_491 = FALSE;
break;
}
}
tmp_496 = tmp_491;
}
if (tmp_496) {
current_location.update_lineno(2183);
#line 2183 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2185);
#line 2185 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_503;
{
boolean tmp_498 = p__primitiveContent.is_bound();
if(tmp_498) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_498 = FALSE;
break;
case ANY_VALUE:
tmp_498 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_498) {
tmp_498 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_498) {
const OneM2M__Types::PrimitiveContent_template& tmp_499 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_500 = tmp_499.contentInstance();
tmp_498 = tmp_500.is_bound();
if(tmp_498) {
switch (tmp_500.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_498 = FALSE;
break;
case ANY_VALUE:
tmp_498 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_498) {
const OneM2M__Types::ContentInstance__optional_template& tmp_501 = tmp_500;
const OneM2M__Types::ListOfURIs_template& tmp_502 = tmp_501.announceTo();
tmp_498 = tmp_502.is_present();
}
break;}
default:
tmp_498 = FALSE;
break;
}
}
}
break;}
default:
tmp_498 = FALSE;
break;
}
}
tmp_503 = tmp_498;
}
if (tmp_503) {
current_location.update_lineno(2186);
#line 2186 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2188);
#line 2188 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_510;
{
boolean tmp_505 = p__primitiveContent.is_bound();
if(tmp_505) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_505 = FALSE;
break;
case ANY_VALUE:
tmp_505 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_505) {
tmp_505 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_505) {
const OneM2M__Types::PrimitiveContent_template& tmp_506 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_507 = tmp_506.contentInstance();
tmp_505 = tmp_507.is_bound();
if(tmp_505) {
switch (tmp_507.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_505 = FALSE;
break;
case ANY_VALUE:
tmp_505 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_505) {
const OneM2M__Types::ContentInstance__optional_template& tmp_508 = tmp_507;
const OneM2M__Types::ContentInstance__optional_announcedAttribute_template& tmp_509 = tmp_508.announcedAttribute();
tmp_505 = tmp_509.is_present();
}
break;}
default:
tmp_505 = FALSE;
break;
}
}
}
break;}
default:
tmp_505 = FALSE;
break;
}
}
tmp_510 = tmp_505;
}
if (tmp_510) {
current_location.update_lineno(2189);
#line 2189 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().announcedAttribute() = ANY_VALUE;
}
}
current_location.update_lineno(2191);
#line 2191 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_517;
{
boolean tmp_512 = p__primitiveContent.is_bound();
if(tmp_512) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_512 = FALSE;
break;
case ANY_VALUE:
tmp_512 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_512) {
tmp_512 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_512) {
const OneM2M__Types::PrimitiveContent_template& tmp_513 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_514 = tmp_513.contentInstance();
tmp_512 = tmp_514.is_bound();
if(tmp_512) {
switch (tmp_514.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_512 = FALSE;
break;
case ANY_VALUE:
tmp_512 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_512) {
const OneM2M__Types::ContentInstance__optional_template& tmp_515 = tmp_514;
const UNIVERSAL_CHARSTRING_template& tmp_516 = tmp_515.creator();
tmp_512 = tmp_516.is_present();
}
break;}
default:
tmp_512 = FALSE;
break;
}
}
}
break;}
default:
tmp_512 = FALSE;
break;
}
}
tmp_517 = tmp_512;
}
if (tmp_517) {
current_location.update_lineno(2192);
#line 2192 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().creator() = ANY_VALUE;
}
}
current_location.update_lineno(2194);
#line 2194 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_524;
{
boolean tmp_519 = p__primitiveContent.is_bound();
if(tmp_519) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_519 = FALSE;
break;
case ANY_VALUE:
tmp_519 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_519) {
tmp_519 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_519) {
const OneM2M__Types::PrimitiveContent_template& tmp_520 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_521 = tmp_520.contentInstance();
tmp_519 = tmp_521.is_bound();
if(tmp_519) {
switch (tmp_521.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_519 = FALSE;
break;
case ANY_VALUE:
tmp_519 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_519) {
const OneM2M__Types::ContentInstance__optional_template& tmp_522 = tmp_521;
const UNIVERSAL_CHARSTRING_template& tmp_523 = tmp_522.contentInfo();
tmp_519 = tmp_523.is_present();
}
break;}
default:
tmp_519 = FALSE;
break;
}
}
}
break;}
default:
tmp_519 = FALSE;
break;
}
}
tmp_524 = tmp_519;
}
if (tmp_524) {
current_location.update_lineno(2195);
#line 2195 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().contentInfo() = ANY_VALUE;
}
}
current_location.update_lineno(2197);
#line 2197 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_531;
{
boolean tmp_526 = p__primitiveContent.is_bound();
if(tmp_526) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_526 = FALSE;
break;
case ANY_VALUE:
tmp_526 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_526) {
tmp_526 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_526) {
const OneM2M__Types::PrimitiveContent_template& tmp_527 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_528 = tmp_527.contentInstance();
tmp_526 = tmp_528.is_bound();
if(tmp_526) {
switch (tmp_528.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_526 = FALSE;
break;
case ANY_VALUE:
tmp_526 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_526) {
const OneM2M__Types::ContentInstance__optional_template& tmp_529 = tmp_528;
const OneM2M__Types::ContentRef_template& tmp_530 = tmp_529.contentRef();
tmp_526 = tmp_530.is_present();
}
break;}
default:
tmp_526 = FALSE;
break;
}
}
}
break;}
default:
tmp_526 = FALSE;
break;
}
}
tmp_531 = tmp_526;
}
if (tmp_531) {
current_location.update_lineno(2198);
#line 2198 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().contentRef() = ANY_VALUE;
}
}
current_location.update_lineno(2200);
#line 2200 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_538;
{
boolean tmp_533 = p__primitiveContent.is_bound();
if(tmp_533) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_533 = FALSE;
break;
case ANY_VALUE:
tmp_533 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_533) {
tmp_533 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_contentInstance);
}
if(tmp_533) {
const OneM2M__Types::PrimitiveContent_template& tmp_534 = p__primitiveContent;
const OneM2M__Types::ContentInstance__optional_template& tmp_535 = tmp_534.contentInstance();
tmp_533 = tmp_535.is_bound();
if(tmp_533) {
switch (tmp_535.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_533 = FALSE;
break;
case ANY_VALUE:
tmp_533 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_533) {
const OneM2M__Types::ContentInstance__optional_template& tmp_536 = tmp_535;
const UNIVERSAL_CHARSTRING_template& tmp_537 = tmp_536.ontologyRef();
tmp_533 = tmp_537.is_present();
}
break;}
default:
tmp_533 = FALSE;
break;
}
}
}
break;}
default:
tmp_533 = FALSE;
break;
}
}
tmp_538 = tmp_533;
}
if (tmp_538) {
current_location.update_lineno(2201);
#line 2201 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.contentInstance().ontologyRef() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2205);
#line 2205 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__)) {
current_location.update_lineno(2206);
#line 2206 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__() = OneM2M__Templates::mw__contentGroupBase;
current_location.update_lineno(2208);
#line 2208 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_546;
{
boolean tmp_541 = p__primitiveContent.is_bound();
if(tmp_541) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_541 = FALSE;
break;
case ANY_VALUE:
tmp_541 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_541) {
tmp_541 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_541) {
const OneM2M__Types::PrimitiveContent_template& tmp_542 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_543 = tmp_542.group__();
tmp_541 = tmp_543.is_bound();
if(tmp_541) {
switch (tmp_543.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_541 = FALSE;
break;
case ANY_VALUE:
tmp_541 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_541) {
const OneM2M__Types::Group__optional_template& tmp_544 = tmp_543;
const OneM2M__Types::Labels_template& tmp_545 = tmp_544.labels();
tmp_541 = tmp_545.is_present();
}
break;}
default:
tmp_541 = FALSE;
break;
}
}
}
break;}
default:
tmp_541 = FALSE;
break;
}
}
tmp_546 = tmp_541;
}
if (tmp_546) {
current_location.update_lineno(2209);
#line 2209 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2211);
#line 2211 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_553;
{
boolean tmp_548 = p__primitiveContent.is_bound();
if(tmp_548) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_548 = FALSE;
break;
case ANY_VALUE:
tmp_548 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_548) {
tmp_548 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_548) {
const OneM2M__Types::PrimitiveContent_template& tmp_549 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_550 = tmp_549.group__();
tmp_548 = tmp_550.is_bound();
if(tmp_548) {
switch (tmp_550.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_548 = FALSE;
break;
case ANY_VALUE:
tmp_548 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_548) {
const OneM2M__Types::Group__optional_template& tmp_551 = tmp_550;
const OneM2M__Types::AcpType_template& tmp_552 = tmp_551.accessControlPolicyIDs();
tmp_548 = tmp_552.is_present();
}
break;}
default:
tmp_548 = FALSE;
break;
}
}
}
break;}
default:
tmp_548 = FALSE;
break;
}
}
tmp_553 = tmp_548;
}
if (tmp_553) {
current_location.update_lineno(2212);
#line 2212 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().accessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2214);
#line 2214 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_560;
{
boolean tmp_555 = p__primitiveContent.is_bound();
if(tmp_555) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_555 = FALSE;
break;
case ANY_VALUE:
tmp_555 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_555) {
tmp_555 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_555) {
const OneM2M__Types::PrimitiveContent_template& tmp_556 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_557 = tmp_556.group__();
tmp_555 = tmp_557.is_bound();
if(tmp_555) {
switch (tmp_557.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_555 = FALSE;
break;
case ANY_VALUE:
tmp_555 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_555) {
const OneM2M__Types::Group__optional_template& tmp_558 = tmp_557;
const OneM2M__Types::ListOfURIs_template& tmp_559 = tmp_558.dynamicAuthorizationConsultationIDs();
tmp_555 = tmp_559.is_present();
}
break;}
default:
tmp_555 = FALSE;
break;
}
}
}
break;}
default:
tmp_555 = FALSE;
break;
}
}
tmp_560 = tmp_555;
}
if (tmp_560) {
current_location.update_lineno(2215);
#line 2215 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().dynamicAuthorizationConsultationIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2217);
#line 2217 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_567;
{
boolean tmp_562 = p__primitiveContent.is_bound();
if(tmp_562) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_562 = FALSE;
break;
case ANY_VALUE:
tmp_562 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_562) {
tmp_562 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_562) {
const OneM2M__Types::PrimitiveContent_template& tmp_563 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_564 = tmp_563.group__();
tmp_562 = tmp_564.is_bound();
if(tmp_562) {
switch (tmp_564.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_562 = FALSE;
break;
case ANY_VALUE:
tmp_562 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_562) {
const OneM2M__Types::Group__optional_template& tmp_565 = tmp_564;
const OneM2M__Types::ListOfURIs_template& tmp_566 = tmp_565.announceTo();
tmp_562 = tmp_566.is_present();
}
break;}
default:
tmp_562 = FALSE;
break;
}
}
}
break;}
default:
tmp_562 = FALSE;
break;
}
}
tmp_567 = tmp_562;
}
if (tmp_567) {
current_location.update_lineno(2218);
#line 2218 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2220);
#line 2220 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_574;
{
boolean tmp_569 = p__primitiveContent.is_bound();
if(tmp_569) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_569 = FALSE;
break;
case ANY_VALUE:
tmp_569 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_569) {
tmp_569 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_569) {
const OneM2M__Types::PrimitiveContent_template& tmp_570 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_571 = tmp_570.group__();
tmp_569 = tmp_571.is_bound();
if(tmp_569) {
switch (tmp_571.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_569 = FALSE;
break;
case ANY_VALUE:
tmp_569 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_569) {
const OneM2M__Types::Group__optional_template& tmp_572 = tmp_571;
const OneM2M__Types::Group__optional_announcedAttribute_template& tmp_573 = tmp_572.announcedAttribute();
tmp_569 = tmp_573.is_present();
}
break;}
default:
tmp_569 = FALSE;
break;
}
}
}
break;}
default:
tmp_569 = FALSE;
break;
}
}
tmp_574 = tmp_569;
}
if (tmp_574) {
current_location.update_lineno(2221);
#line 2221 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().announcedAttribute() = ANY_VALUE;
}
}
current_location.update_lineno(2223);
#line 2223 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_581;
{
boolean tmp_576 = p__primitiveContent.is_bound();
if(tmp_576) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_576 = FALSE;
break;
case ANY_VALUE:
tmp_576 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_576) {
tmp_576 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_576) {
const OneM2M__Types::PrimitiveContent_template& tmp_577 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_578 = tmp_577.group__();
tmp_576 = tmp_578.is_bound();
if(tmp_576) {
switch (tmp_578.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_576 = FALSE;
break;
case ANY_VALUE:
tmp_576 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_576) {
const OneM2M__Types::Group__optional_template& tmp_579 = tmp_578;
const UNIVERSAL_CHARSTRING_template& tmp_580 = tmp_579.creator();
tmp_576 = tmp_580.is_present();
}
break;}
default:
tmp_576 = FALSE;
break;
}
}
}
break;}
default:
tmp_576 = FALSE;
break;
}
}
tmp_581 = tmp_576;
}
if (tmp_581) {
current_location.update_lineno(2224);
#line 2224 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().creator() = ANY_VALUE;
}
}
current_location.update_lineno(2226);
#line 2226 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_588;
{
boolean tmp_583 = p__primitiveContent.is_bound();
if(tmp_583) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_583 = FALSE;
break;
case ANY_VALUE:
tmp_583 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_583) {
tmp_583 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_583) {
const OneM2M__Types::PrimitiveContent_template& tmp_584 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_585 = tmp_584.group__();
tmp_583 = tmp_585.is_bound();
if(tmp_583) {
switch (tmp_585.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_583 = FALSE;
break;
case ANY_VALUE:
tmp_583 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_583) {
const OneM2M__Types::Group__optional_template& tmp_586 = tmp_585;
const OneM2M__Types::ListOfURIs_template& tmp_587 = tmp_586.membersAccessControlPolicyIDs();
tmp_583 = tmp_587.is_present();
}
break;}
default:
tmp_583 = FALSE;
break;
}
}
}
break;}
default:
tmp_583 = FALSE;
break;
}
}
tmp_588 = tmp_583;
}
if (tmp_588) {
current_location.update_lineno(2227);
#line 2227 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().membersAccessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2229);
#line 2229 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_595;
{
boolean tmp_590 = p__primitiveContent.is_bound();
if(tmp_590) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_590 = FALSE;
break;
case ANY_VALUE:
tmp_590 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_590) {
tmp_590 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_590) {
const OneM2M__Types::PrimitiveContent_template& tmp_591 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_592 = tmp_591.group__();
tmp_590 = tmp_592.is_bound();
if(tmp_590) {
switch (tmp_592.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_590 = FALSE;
break;
case ANY_VALUE:
tmp_590 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_590) {
const OneM2M__Types::Group__optional_template& tmp_593 = tmp_592;
const BOOLEAN_template& tmp_594 = tmp_593.memberTypeValidated();
tmp_590 = tmp_594.is_present();
}
break;}
default:
tmp_590 = FALSE;
break;
}
}
}
break;}
default:
tmp_590 = FALSE;
break;
}
}
tmp_595 = tmp_590;
}
if (tmp_595) {
current_location.update_lineno(2230);
#line 2230 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().memberTypeValidated() = ANY_VALUE;
}
}
current_location.update_lineno(2232);
#line 2232 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_602;
{
boolean tmp_597 = p__primitiveContent.is_bound();
if(tmp_597) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_597 = FALSE;
break;
case ANY_VALUE:
tmp_597 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_597) {
tmp_597 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_597) {
const OneM2M__Types::PrimitiveContent_template& tmp_598 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_599 = tmp_598.group__();
tmp_597 = tmp_599.is_bound();
if(tmp_597) {
switch (tmp_599.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_597 = FALSE;
break;
case ANY_VALUE:
tmp_597 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_597) {
const OneM2M__Types::Group__optional_template& tmp_600 = tmp_599;
const OneM2M__Types::ConsistencyStrategy_template& tmp_601 = tmp_600.consistencyStrategy();
tmp_597 = tmp_601.is_present();
}
break;}
default:
tmp_597 = FALSE;
break;
}
}
}
break;}
default:
tmp_597 = FALSE;
break;
}
}
tmp_602 = tmp_597;
}
if (tmp_602) {
current_location.update_lineno(2233);
#line 2233 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().consistencyStrategy() = ANY_VALUE;
}
}
current_location.update_lineno(2235);
#line 2235 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_609;
{
boolean tmp_604 = p__primitiveContent.is_bound();
if(tmp_604) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_604 = FALSE;
break;
case ANY_VALUE:
tmp_604 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_604) {
tmp_604 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_group__);
}
if(tmp_604) {
const OneM2M__Types::PrimitiveContent_template& tmp_605 = p__primitiveContent;
const OneM2M__Types::Group__optional_template& tmp_606 = tmp_605.group__();
tmp_604 = tmp_606.is_bound();
if(tmp_604) {
switch (tmp_606.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_604 = FALSE;
break;
case ANY_VALUE:
tmp_604 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_604) {
const OneM2M__Types::Group__optional_template& tmp_607 = tmp_606;
const UNIVERSAL_CHARSTRING_template& tmp_608 = tmp_607.groupName();
tmp_604 = tmp_608.is_present();
}
break;}
default:
tmp_604 = FALSE;
break;
}
}
}
break;}
default:
tmp_604 = FALSE;
break;
}
}
tmp_609 = tmp_604;
}
if (tmp_609) {
current_location.update_lineno(2236);
#line 2236 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.group__().groupName() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2240);
#line 2240 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_pollingChannel)) {
current_location.update_lineno(2241);
#line 2241 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.pollingChannel() = OneM2M__Templates::mw__contentPollingChannelBase;
current_location.update_lineno(2243);
#line 2243 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_617;
{
boolean tmp_612 = p__primitiveContent.is_bound();
if(tmp_612) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_612 = FALSE;
break;
case ANY_VALUE:
tmp_612 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_612) {
tmp_612 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_pollingChannel);
}
if(tmp_612) {
const OneM2M__Types::PrimitiveContent_template& tmp_613 = p__primitiveContent;
const OneM2M__Types::PollingChannel__optional_template& tmp_614 = tmp_613.pollingChannel();
tmp_612 = tmp_614.is_bound();
if(tmp_612) {
switch (tmp_614.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_612 = FALSE;
break;
case ANY_VALUE:
tmp_612 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_612) {
const OneM2M__Types::PollingChannel__optional_template& tmp_615 = tmp_614;
const OneM2M__Types::Labels_template& tmp_616 = tmp_615.labels();
tmp_612 = tmp_616.is_present();
}
break;}
default:
tmp_612 = FALSE;
break;
}
}
}
break;}
default:
tmp_612 = FALSE;
break;
}
}
tmp_617 = tmp_612;
}
if (tmp_617) {
current_location.update_lineno(2244);
#line 2244 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.pollingChannel().labels() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2248);
#line 2248 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule)) {
current_location.update_lineno(2249);
#line 2249 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.schedule() = OneM2M__Templates::mw__contentScheduleBase;
current_location.update_lineno(2251);
#line 2251 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_625;
{
boolean tmp_620 = p__primitiveContent.is_bound();
if(tmp_620) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_620 = FALSE;
break;
case ANY_VALUE:
tmp_620 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_620) {
tmp_620 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule);
}
if(tmp_620) {
const OneM2M__Types::PrimitiveContent_template& tmp_621 = p__primitiveContent;
const OneM2M__Types::Schedule__optional_template& tmp_622 = tmp_621.schedule();
tmp_620 = tmp_622.is_bound();
if(tmp_620) {
switch (tmp_622.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_620 = FALSE;
break;
case ANY_VALUE:
tmp_620 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_620) {
const OneM2M__Types::Schedule__optional_template& tmp_623 = tmp_622;
const OneM2M__Types::Labels_template& tmp_624 = tmp_623.labels();
tmp_620 = tmp_624.is_present();
}
break;}
default:
tmp_620 = FALSE;
break;
}
}
}
break;}
default:
tmp_620 = FALSE;
break;
}
}
tmp_625 = tmp_620;
}
if (tmp_625) {
current_location.update_lineno(2252);
#line 2252 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.schedule().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2254);
#line 2254 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_632;
{
boolean tmp_627 = p__primitiveContent.is_bound();
if(tmp_627) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_627 = FALSE;
break;
case ANY_VALUE:
tmp_627 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_627) {
tmp_627 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule);
}
if(tmp_627) {
const OneM2M__Types::PrimitiveContent_template& tmp_628 = p__primitiveContent;
const OneM2M__Types::Schedule__optional_template& tmp_629 = tmp_628.schedule();
tmp_627 = tmp_629.is_bound();
if(tmp_627) {
switch (tmp_629.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_627 = FALSE;
break;
case ANY_VALUE:
tmp_627 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_627) {
const OneM2M__Types::Schedule__optional_template& tmp_630 = tmp_629;
const OneM2M__Types::ListOfURIs_template& tmp_631 = tmp_630.announceTo();
tmp_627 = tmp_631.is_present();
}
break;}
default:
tmp_627 = FALSE;
break;
}
}
}
break;}
default:
tmp_627 = FALSE;
break;
}
}
tmp_632 = tmp_627;
}
if (tmp_632) {
current_location.update_lineno(2255);
#line 2255 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.schedule().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2257);
#line 2257 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_639;
{
boolean tmp_634 = p__primitiveContent.is_bound();
if(tmp_634) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_634 = FALSE;
break;
case ANY_VALUE:
tmp_634 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_634) {
tmp_634 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_schedule);
}
if(tmp_634) {
const OneM2M__Types::PrimitiveContent_template& tmp_635 = p__primitiveContent;
const OneM2M__Types::Schedule__optional_template& tmp_636 = tmp_635.schedule();
tmp_634 = tmp_636.is_bound();
if(tmp_634) {
switch (tmp_636.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_634 = FALSE;
break;
case ANY_VALUE:
tmp_634 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_634) {
const OneM2M__Types::Schedule__optional_template& tmp_637 = tmp_636;
const OneM2M__Types::Schedule__optional_announcedAttribute_template& tmp_638 = tmp_637.announcedAttribute();
tmp_634 = tmp_638.is_present();
}
break;}
default:
tmp_634 = FALSE;
break;
}
}
}
break;}
default:
tmp_634 = FALSE;
break;
}
}
tmp_639 = tmp_634;
}
if (tmp_639) {
current_location.update_lineno(2258);
#line 2258 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.schedule().announcedAttribute() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2262);
#line 2262 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription)) {
current_location.update_lineno(2263);
#line 2263 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription() = OneM2M__Templates::mw__contentSubscriptionBase;
current_location.update_lineno(2265);
#line 2265 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_647;
{
boolean tmp_642 = p__primitiveContent.is_bound();
if(tmp_642) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_642 = FALSE;
break;
case ANY_VALUE:
tmp_642 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_642) {
tmp_642 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_642) {
const OneM2M__Types::PrimitiveContent_template& tmp_643 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_644 = tmp_643.subscription();
tmp_642 = tmp_644.is_bound();
if(tmp_642) {
switch (tmp_644.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_642 = FALSE;
break;
case ANY_VALUE:
tmp_642 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_642) {
const OneM2M__Types::Subscription__optional_template& tmp_645 = tmp_644;
const OneM2M__Types::Labels_template& tmp_646 = tmp_645.labels();
tmp_642 = tmp_646.is_present();
}
break;}
default:
tmp_642 = FALSE;
break;
}
}
}
break;}
default:
tmp_642 = FALSE;
break;
}
}
tmp_647 = tmp_642;
}
if (tmp_647) {
current_location.update_lineno(2266);
#line 2266 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2268);
#line 2268 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_654;
{
boolean tmp_649 = p__primitiveContent.is_bound();
if(tmp_649) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_649 = FALSE;
break;
case ANY_VALUE:
tmp_649 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_649) {
tmp_649 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_649) {
const OneM2M__Types::PrimitiveContent_template& tmp_650 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_651 = tmp_650.subscription();
tmp_649 = tmp_651.is_bound();
if(tmp_649) {
switch (tmp_651.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_649 = FALSE;
break;
case ANY_VALUE:
tmp_649 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_649) {
const OneM2M__Types::Subscription__optional_template& tmp_652 = tmp_651;
const OneM2M__Types::AcpType_template& tmp_653 = tmp_652.accessControlPolicyIDs();
tmp_649 = tmp_653.is_present();
}
break;}
default:
tmp_649 = FALSE;
break;
}
}
}
break;}
default:
tmp_649 = FALSE;
break;
}
}
tmp_654 = tmp_649;
}
if (tmp_654) {
current_location.update_lineno(2269);
#line 2269 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().accessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2271);
#line 2271 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_661;
{
boolean tmp_656 = p__primitiveContent.is_bound();
if(tmp_656) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_656 = FALSE;
break;
case ANY_VALUE:
tmp_656 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_656) {
tmp_656 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_656) {
const OneM2M__Types::PrimitiveContent_template& tmp_657 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_658 = tmp_657.subscription();
tmp_656 = tmp_658.is_bound();
if(tmp_656) {
switch (tmp_658.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_656 = FALSE;
break;
case ANY_VALUE:
tmp_656 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_656) {
const OneM2M__Types::Subscription__optional_template& tmp_659 = tmp_658;
const OneM2M__Types::ListOfURIs_template& tmp_660 = tmp_659.dynamicAuthorizationConsultationIDs();
tmp_656 = tmp_660.is_present();
}
break;}
default:
tmp_656 = FALSE;
break;
}
}
}
break;}
default:
tmp_656 = FALSE;
break;
}
}
tmp_661 = tmp_656;
}
if (tmp_661) {
current_location.update_lineno(2272);
#line 2272 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().dynamicAuthorizationConsultationIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2274);
#line 2274 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_668;
{
boolean tmp_663 = p__primitiveContent.is_bound();
if(tmp_663) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_663 = FALSE;
break;
case ANY_VALUE:
tmp_663 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_663) {
tmp_663 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_663) {
const OneM2M__Types::PrimitiveContent_template& tmp_664 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_665 = tmp_664.subscription();
tmp_663 = tmp_665.is_bound();
if(tmp_663) {
switch (tmp_665.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_663 = FALSE;
break;
case ANY_VALUE:
tmp_663 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_663) {
const OneM2M__Types::Subscription__optional_template& tmp_666 = tmp_665;
const UNIVERSAL_CHARSTRING_template& tmp_667 = tmp_666.creator();
tmp_663 = tmp_667.is_present();
}
break;}
default:
tmp_663 = FALSE;
break;
}
}
}
break;}
default:
tmp_663 = FALSE;
break;
}
}
tmp_668 = tmp_663;
}
if (tmp_668) {
current_location.update_lineno(2275);
#line 2275 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().creator() = ANY_VALUE;
}
}
current_location.update_lineno(2277);
#line 2277 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_675;
{
boolean tmp_670 = p__primitiveContent.is_bound();
if(tmp_670) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_670 = FALSE;
break;
case ANY_VALUE:
tmp_670 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_670) {
tmp_670 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_670) {
const OneM2M__Types::PrimitiveContent_template& tmp_671 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_672 = tmp_671.subscription();
tmp_670 = tmp_672.is_bound();
if(tmp_670) {
switch (tmp_672.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_670 = FALSE;
break;
case ANY_VALUE:
tmp_670 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_670) {
const OneM2M__Types::Subscription__optional_template& tmp_673 = tmp_672;
const OneM2M__Types::EventNotificationCriteria_template& tmp_674 = tmp_673.eventNotificationCriteria();
tmp_670 = tmp_674.is_present();
}
break;}
default:
tmp_670 = FALSE;
break;
}
}
}
break;}
default:
tmp_670 = FALSE;
break;
}
}
tmp_675 = tmp_670;
}
if (tmp_675) {
current_location.update_lineno(2278);
#line 2278 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().eventNotificationCriteria() = ANY_VALUE;
}
}
current_location.update_lineno(2280);
#line 2280 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_682;
{
boolean tmp_677 = p__primitiveContent.is_bound();
if(tmp_677) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_677 = FALSE;
break;
case ANY_VALUE:
tmp_677 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_677) {
tmp_677 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_677) {
const OneM2M__Types::PrimitiveContent_template& tmp_678 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_679 = tmp_678.subscription();
tmp_677 = tmp_679.is_bound();
if(tmp_677) {
switch (tmp_679.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_677 = FALSE;
break;
case ANY_VALUE:
tmp_677 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_677) {
const OneM2M__Types::Subscription__optional_template& tmp_680 = tmp_679;
const INTEGER_template& tmp_681 = tmp_680.expirationCounter();
tmp_677 = tmp_681.is_present();
}
break;}
default:
tmp_677 = FALSE;
break;
}
}
}
break;}
default:
tmp_677 = FALSE;
break;
}
}
tmp_682 = tmp_677;
}
if (tmp_682) {
current_location.update_lineno(2281);
#line 2281 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().expirationCounter() = ANY_VALUE;
}
}
current_location.update_lineno(2283);
#line 2283 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_689;
{
boolean tmp_684 = p__primitiveContent.is_bound();
if(tmp_684) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_684 = FALSE;
break;
case ANY_VALUE:
tmp_684 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_684) {
tmp_684 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_684) {
const OneM2M__Types::PrimitiveContent_template& tmp_685 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_686 = tmp_685.subscription();
tmp_684 = tmp_686.is_bound();
if(tmp_684) {
switch (tmp_686.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_684 = FALSE;
break;
case ANY_VALUE:
tmp_684 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_684) {
const OneM2M__Types::Subscription__optional_template& tmp_687 = tmp_686;
const UNIVERSAL_CHARSTRING_template& tmp_688 = tmp_687.groupID();
tmp_684 = tmp_688.is_present();
}
break;}
default:
tmp_684 = FALSE;
break;
}
}
}
break;}
default:
tmp_684 = FALSE;
break;
}
}
tmp_689 = tmp_684;
}
if (tmp_689) {
current_location.update_lineno(2284);
#line 2284 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().groupID() = ANY_VALUE;
}
}
current_location.update_lineno(2286);
#line 2286 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_696;
{
boolean tmp_691 = p__primitiveContent.is_bound();
if(tmp_691) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_691 = FALSE;
break;
case ANY_VALUE:
tmp_691 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_691) {
tmp_691 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_691) {
const OneM2M__Types::PrimitiveContent_template& tmp_692 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_693 = tmp_692.subscription();
tmp_691 = tmp_693.is_bound();
if(tmp_691) {
switch (tmp_693.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_691 = FALSE;
break;
case ANY_VALUE:
tmp_691 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_691) {
const OneM2M__Types::Subscription__optional_template& tmp_694 = tmp_693;
const UNIVERSAL_CHARSTRING_template& tmp_695 = tmp_694.notificationForwardingURI();
tmp_691 = tmp_695.is_present();
}
break;}
default:
tmp_691 = FALSE;
break;
}
}
}
break;}
default:
tmp_691 = FALSE;
break;
}
}
tmp_696 = tmp_691;
}
if (tmp_696) {
current_location.update_lineno(2287);
#line 2287 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().notificationForwardingURI() = ANY_VALUE;
}
}
current_location.update_lineno(2289);
#line 2289 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_703;
{
boolean tmp_698 = p__primitiveContent.is_bound();
if(tmp_698) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_698 = FALSE;
break;
case ANY_VALUE:
tmp_698 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_698) {
tmp_698 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_698) {
const OneM2M__Types::PrimitiveContent_template& tmp_699 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_700 = tmp_699.subscription();
tmp_698 = tmp_700.is_bound();
if(tmp_698) {
switch (tmp_700.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_698 = FALSE;
break;
case ANY_VALUE:
tmp_698 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_698) {
const OneM2M__Types::Subscription__optional_template& tmp_701 = tmp_700;
const OneM2M__Types::BatchNotify_template& tmp_702 = tmp_701.batchNotify();
tmp_698 = tmp_702.is_present();
}
break;}
default:
tmp_698 = FALSE;
break;
}
}
}
break;}
default:
tmp_698 = FALSE;
break;
}
}
tmp_703 = tmp_698;
}
if (tmp_703) {
current_location.update_lineno(2290);
#line 2290 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().batchNotify() = ANY_VALUE;
}
}
current_location.update_lineno(2292);
#line 2292 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_710;
{
boolean tmp_705 = p__primitiveContent.is_bound();
if(tmp_705) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_705 = FALSE;
break;
case ANY_VALUE:
tmp_705 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_705) {
tmp_705 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_705) {
const OneM2M__Types::PrimitiveContent_template& tmp_706 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_707 = tmp_706.subscription();
tmp_705 = tmp_707.is_bound();
if(tmp_705) {
switch (tmp_707.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_705 = FALSE;
break;
case ANY_VALUE:
tmp_705 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_705) {
const OneM2M__Types::Subscription__optional_template& tmp_708 = tmp_707;
const OneM2M__Types::RateLimit_template& tmp_709 = tmp_708.rateLimit();
tmp_705 = tmp_709.is_present();
}
break;}
default:
tmp_705 = FALSE;
break;
}
}
}
break;}
default:
tmp_705 = FALSE;
break;
}
}
tmp_710 = tmp_705;
}
if (tmp_710) {
current_location.update_lineno(2293);
#line 2293 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().rateLimit() = ANY_VALUE;
}
}
current_location.update_lineno(2295);
#line 2295 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_717;
{
boolean tmp_712 = p__primitiveContent.is_bound();
if(tmp_712) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_712 = FALSE;
break;
case ANY_VALUE:
tmp_712 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_712) {
tmp_712 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_712) {
const OneM2M__Types::PrimitiveContent_template& tmp_713 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_714 = tmp_713.subscription();
tmp_712 = tmp_714.is_bound();
if(tmp_712) {
switch (tmp_714.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_712 = FALSE;
break;
case ANY_VALUE:
tmp_712 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_712) {
const OneM2M__Types::Subscription__optional_template& tmp_715 = tmp_714;
const INTEGER_template& tmp_716 = tmp_715.preSubscriptionNotify();
tmp_712 = tmp_716.is_present();
}
break;}
default:
tmp_712 = FALSE;
break;
}
}
}
break;}
default:
tmp_712 = FALSE;
break;
}
}
tmp_717 = tmp_712;
}
if (tmp_717) {
current_location.update_lineno(2296);
#line 2296 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().preSubscriptionNotify() = ANY_VALUE;
}
}
current_location.update_lineno(2298);
#line 2298 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_724;
{
boolean tmp_719 = p__primitiveContent.is_bound();
if(tmp_719) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_719 = FALSE;
break;
case ANY_VALUE:
tmp_719 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_719) {
tmp_719 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_719) {
const OneM2M__Types::PrimitiveContent_template& tmp_720 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_721 = tmp_720.subscription();
tmp_719 = tmp_721.is_bound();
if(tmp_719) {
switch (tmp_721.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_719 = FALSE;
break;
case ANY_VALUE:
tmp_719 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_719) {
const OneM2M__Types::Subscription__optional_template& tmp_722 = tmp_721;
const OneM2M__Types::PendingNotification_template& tmp_723 = tmp_722.pendingNotification();
tmp_719 = tmp_723.is_present();
}
break;}
default:
tmp_719 = FALSE;
break;
}
}
}
break;}
default:
tmp_719 = FALSE;
break;
}
}
tmp_724 = tmp_719;
}
if (tmp_724) {
current_location.update_lineno(2299);
#line 2299 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().pendingNotification() = ANY_VALUE;
}
}
current_location.update_lineno(2301);
#line 2301 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_731;
{
boolean tmp_726 = p__primitiveContent.is_bound();
if(tmp_726) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_726 = FALSE;
break;
case ANY_VALUE:
tmp_726 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_726) {
tmp_726 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_726) {
const OneM2M__Types::PrimitiveContent_template& tmp_727 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_728 = tmp_727.subscription();
tmp_726 = tmp_728.is_bound();
if(tmp_726) {
switch (tmp_728.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_726 = FALSE;
break;
case ANY_VALUE:
tmp_726 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_726) {
const OneM2M__Types::Subscription__optional_template& tmp_729 = tmp_728;
const INTEGER_template& tmp_730 = tmp_729.notificationStoragePriority();
tmp_726 = tmp_730.is_present();
}
break;}
default:
tmp_726 = FALSE;
break;
}
}
}
break;}
default:
tmp_726 = FALSE;
break;
}
}
tmp_731 = tmp_726;
}
if (tmp_731) {
current_location.update_lineno(2302);
#line 2302 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().notificationStoragePriority() = ANY_VALUE;
}
}
current_location.update_lineno(2304);
#line 2304 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_738;
{
boolean tmp_733 = p__primitiveContent.is_bound();
if(tmp_733) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_733 = FALSE;
break;
case ANY_VALUE:
tmp_733 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_733) {
tmp_733 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_733) {
const OneM2M__Types::PrimitiveContent_template& tmp_734 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_735 = tmp_734.subscription();
tmp_733 = tmp_735.is_bound();
if(tmp_733) {
switch (tmp_735.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_733 = FALSE;
break;
case ANY_VALUE:
tmp_733 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_733) {
const OneM2M__Types::Subscription__optional_template& tmp_736 = tmp_735;
const BOOLEAN_template& tmp_737 = tmp_736.latestNotify();
tmp_733 = tmp_737.is_present();
}
break;}
default:
tmp_733 = FALSE;
break;
}
}
}
break;}
default:
tmp_733 = FALSE;
break;
}
}
tmp_738 = tmp_733;
}
if (tmp_738) {
current_location.update_lineno(2305);
#line 2305 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().latestNotify() = ANY_VALUE;
}
}
current_location.update_lineno(2307);
#line 2307 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_745;
{
boolean tmp_740 = p__primitiveContent.is_bound();
if(tmp_740) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_740 = FALSE;
break;
case ANY_VALUE:
tmp_740 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_740) {
tmp_740 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_740) {
const OneM2M__Types::PrimitiveContent_template& tmp_741 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_742 = tmp_741.subscription();
tmp_740 = tmp_742.is_bound();
if(tmp_740) {
switch (tmp_742.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_740 = FALSE;
break;
case ANY_VALUE:
tmp_740 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_740) {
const OneM2M__Types::Subscription__optional_template& tmp_743 = tmp_742;
const OneM2M__Types::NotificationContentType_template& tmp_744 = tmp_743.notificationContentType();
tmp_740 = tmp_744.is_present();
}
break;}
default:
tmp_740 = FALSE;
break;
}
}
}
break;}
default:
tmp_740 = FALSE;
break;
}
}
tmp_745 = tmp_740;
}
if (tmp_745) {
current_location.update_lineno(2308);
#line 2308 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().notificationContentType() = ANY_VALUE;
}
}
current_location.update_lineno(2310);
#line 2310 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_752;
{
boolean tmp_747 = p__primitiveContent.is_bound();
if(tmp_747) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_747 = FALSE;
break;
case ANY_VALUE:
tmp_747 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_747) {
tmp_747 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_747) {
const OneM2M__Types::PrimitiveContent_template& tmp_748 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_749 = tmp_748.subscription();
tmp_747 = tmp_749.is_bound();
if(tmp_747) {
switch (tmp_749.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_747 = FALSE;
break;
case ANY_VALUE:
tmp_747 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_747) {
const OneM2M__Types::Subscription__optional_template& tmp_750 = tmp_749;
const OneM2M__Types::EventCat_template& tmp_751 = tmp_750.notificationEventCat();
tmp_747 = tmp_751.is_present();
}
break;}
default:
tmp_747 = FALSE;
break;
}
}
}
break;}
default:
tmp_747 = FALSE;
break;
}
}
tmp_752 = tmp_747;
}
if (tmp_752) {
current_location.update_lineno(2311);
#line 2311 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().notificationEventCat() = ANY_VALUE;
}
}
current_location.update_lineno(2313);
#line 2313 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_759;
{
boolean tmp_754 = p__primitiveContent.is_bound();
if(tmp_754) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_754 = FALSE;
break;
case ANY_VALUE:
tmp_754 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_754) {
tmp_754 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_subscription);
}
if(tmp_754) {
const OneM2M__Types::PrimitiveContent_template& tmp_755 = p__primitiveContent;
const OneM2M__Types::Subscription__optional_template& tmp_756 = tmp_755.subscription();
tmp_754 = tmp_756.is_bound();
if(tmp_754) {
switch (tmp_756.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_754 = FALSE;
break;
case ANY_VALUE:
tmp_754 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_754) {
const OneM2M__Types::Subscription__optional_template& tmp_757 = tmp_756;
const UNIVERSAL_CHARSTRING_template& tmp_758 = tmp_757.subscriberURI();
tmp_754 = tmp_758.is_present();
}
break;}
default:
tmp_754 = FALSE;
break;
}
}
}
break;}
default:
tmp_754 = FALSE;
break;
}
}
tmp_759 = tmp_754;
}
if (tmp_759) {
current_location.update_lineno(2314);
#line 2314 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.subscription().subscriberURI() = ANY_VALUE;
}
}
}
else {
current_location.update_lineno(2317);
#line 2317 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if (p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE)) {
current_location.update_lineno(2318);
#line 2318 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE() = OneM2M__Templates::mw__contentRemoteCSEBase;
current_location.update_lineno(2320);
#line 2320 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_767;
{
boolean tmp_762 = p__primitiveContent.is_bound();
if(tmp_762) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_762 = FALSE;
break;
case ANY_VALUE:
tmp_762 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_762) {
tmp_762 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_762) {
const OneM2M__Types::PrimitiveContent_template& tmp_763 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_764 = tmp_763.remoteCSE();
tmp_762 = tmp_764.is_bound();
if(tmp_762) {
switch (tmp_764.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_762 = FALSE;
break;
case ANY_VALUE:
tmp_762 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_762) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_765 = tmp_764;
const OneM2M__Types::Labels_template& tmp_766 = tmp_765.labels();
tmp_762 = tmp_766.is_present();
}
break;}
default:
tmp_762 = FALSE;
break;
}
}
}
break;}
default:
tmp_762 = FALSE;
break;
}
}
tmp_767 = tmp_762;
}
if (tmp_767) {
current_location.update_lineno(2321);
#line 2321 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().labels() = ANY_VALUE;
}
}
current_location.update_lineno(2324);
#line 2324 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_774;
{
boolean tmp_769 = p__primitiveContent.is_bound();
if(tmp_769) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_769 = FALSE;
break;
case ANY_VALUE:
tmp_769 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_769) {
tmp_769 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_769) {
const OneM2M__Types::PrimitiveContent_template& tmp_770 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_771 = tmp_770.remoteCSE();
tmp_769 = tmp_771.is_bound();
if(tmp_769) {
switch (tmp_771.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_769 = FALSE;
break;
case ANY_VALUE:
tmp_769 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_769) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_772 = tmp_771;
const OneM2M__Types::AcpType_template& tmp_773 = tmp_772.accessControlPolicyIDs();
tmp_769 = tmp_773.is_present();
}
break;}
default:
tmp_769 = FALSE;
break;
}
}
}
break;}
default:
tmp_769 = FALSE;
break;
}
}
tmp_774 = tmp_769;
}
if (tmp_774) {
current_location.update_lineno(2325);
#line 2325 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().accessControlPolicyIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2328);
#line 2328 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_781;
{
boolean tmp_776 = p__primitiveContent.is_bound();
if(tmp_776) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_776 = FALSE;
break;
case ANY_VALUE:
tmp_776 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_776) {
tmp_776 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_776) {
const OneM2M__Types::PrimitiveContent_template& tmp_777 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_778 = tmp_777.remoteCSE();
tmp_776 = tmp_778.is_bound();
if(tmp_776) {
switch (tmp_778.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_776 = FALSE;
break;
case ANY_VALUE:
tmp_776 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_776) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_779 = tmp_778;
const OneM2M__Types::ListOfURIs_template& tmp_780 = tmp_779.dynamicAuthorizationConsultationIDs();
tmp_776 = tmp_780.is_present();
}
break;}
default:
tmp_776 = FALSE;
break;
}
}
}
break;}
default:
tmp_776 = FALSE;
break;
}
}
tmp_781 = tmp_776;
}
if (tmp_781) {
current_location.update_lineno(2329);
#line 2329 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().dynamicAuthorizationConsultationIDs() = ANY_VALUE;
}
}
current_location.update_lineno(2332);
#line 2332 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_788;
{
boolean tmp_783 = p__primitiveContent.is_bound();
if(tmp_783) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_783 = FALSE;
break;
case ANY_VALUE:
tmp_783 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_783) {
tmp_783 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_783) {
const OneM2M__Types::PrimitiveContent_template& tmp_784 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_785 = tmp_784.remoteCSE();
tmp_783 = tmp_785.is_bound();
if(tmp_783) {
switch (tmp_785.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_783 = FALSE;
break;
case ANY_VALUE:
tmp_783 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_783) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_786 = tmp_785;
const OneM2M__Types::ListOfURIs_template& tmp_787 = tmp_786.announceTo();
tmp_783 = tmp_787.is_present();
}
break;}
default:
tmp_783 = FALSE;
break;
}
}
}
break;}
default:
tmp_783 = FALSE;
break;
}
}
tmp_788 = tmp_783;
}
if (tmp_788) {
current_location.update_lineno(2333);
#line 2333 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().announceTo() = ANY_VALUE;
}
}
current_location.update_lineno(2336);
#line 2336 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_795;
{
boolean tmp_790 = p__primitiveContent.is_bound();
if(tmp_790) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_790 = FALSE;
break;
case ANY_VALUE:
tmp_790 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_790) {
tmp_790 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_790) {
const OneM2M__Types::PrimitiveContent_template& tmp_791 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_792 = tmp_791.remoteCSE();
tmp_790 = tmp_792.is_bound();
if(tmp_790) {
switch (tmp_792.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_790 = FALSE;
break;
case ANY_VALUE:
tmp_790 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_790) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_793 = tmp_792;
const OneM2M__Types::RemoteCSE__optional_announcedAttribute_template& tmp_794 = tmp_793.announcedAttribute();
tmp_790 = tmp_794.is_present();
}
break;}
default:
tmp_790 = FALSE;
break;
}
}
}
break;}
default:
tmp_790 = FALSE;
break;
}
}
tmp_795 = tmp_790;
}
if (tmp_795) {
current_location.update_lineno(2337);
#line 2337 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().announcedAttribute() = ANY_VALUE;
}
}
current_location.update_lineno(2340);
#line 2340 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_802;
{
boolean tmp_797 = p__primitiveContent.is_bound();
if(tmp_797) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_797 = FALSE;
break;
case ANY_VALUE:
tmp_797 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_797) {
tmp_797 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_797) {
const OneM2M__Types::PrimitiveContent_template& tmp_798 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_799 = tmp_798.remoteCSE();
tmp_797 = tmp_799.is_bound();
if(tmp_797) {
switch (tmp_799.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_797 = FALSE;
break;
case ANY_VALUE:
tmp_797 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_797) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_800 = tmp_799;
const OneM2M__Types::CseTypeID_template& tmp_801 = tmp_800.cseType();
tmp_797 = tmp_801.is_present();
}
break;}
default:
tmp_797 = FALSE;
break;
}
}
}
break;}
default:
tmp_797 = FALSE;
break;
}
}
tmp_802 = tmp_797;
}
if (tmp_802) {
current_location.update_lineno(2341);
#line 2341 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().cseType() = ANY_VALUE;
}
}
current_location.update_lineno(2344);
#line 2344 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_809;
{
boolean tmp_804 = p__primitiveContent.is_bound();
if(tmp_804) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_804 = FALSE;
break;
case ANY_VALUE:
tmp_804 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_804) {
tmp_804 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_804) {
const OneM2M__Types::PrimitiveContent_template& tmp_805 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_806 = tmp_805.remoteCSE();
tmp_804 = tmp_806.is_bound();
if(tmp_804) {
switch (tmp_806.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_804 = FALSE;
break;
case ANY_VALUE:
tmp_804 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_804) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_807 = tmp_806;
const OneM2M__Types::PoaList_template& tmp_808 = tmp_807.pointOfAccess();
tmp_804 = tmp_808.is_present();
}
break;}
default:
tmp_804 = FALSE;
break;
}
}
}
break;}
default:
tmp_804 = FALSE;
break;
}
}
tmp_809 = tmp_804;
}
if (tmp_809) {
current_location.update_lineno(2345);
#line 2345 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().pointOfAccess() = ANY_VALUE;
}
}
current_location.update_lineno(2348);
#line 2348 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_816;
{
boolean tmp_811 = p__primitiveContent.is_bound();
if(tmp_811) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_811 = FALSE;
break;
case ANY_VALUE:
tmp_811 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_811) {
tmp_811 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_811) {
const OneM2M__Types::PrimitiveContent_template& tmp_812 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_813 = tmp_812.remoteCSE();
tmp_811 = tmp_813.is_bound();
if(tmp_811) {
switch (tmp_813.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_811 = FALSE;
break;
case ANY_VALUE:
tmp_811 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_811) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_814 = tmp_813;
const UNIVERSAL_CHARSTRING_template& tmp_815 = tmp_814.m2M__Ext__ID();
tmp_811 = tmp_815.is_present();
}
break;}
default:
tmp_811 = FALSE;
break;
}
}
}
break;}
default:
tmp_811 = FALSE;
break;
}
}
tmp_816 = tmp_811;
}
if (tmp_816) {
current_location.update_lineno(2349);
#line 2349 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().m2M__Ext__ID() = ANY_VALUE;
}
}
current_location.update_lineno(2352);
#line 2352 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_823;
{
boolean tmp_818 = p__primitiveContent.is_bound();
if(tmp_818) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_818 = FALSE;
break;
case ANY_VALUE:
tmp_818 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_818) {
tmp_818 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_818) {
const OneM2M__Types::PrimitiveContent_template& tmp_819 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_820 = tmp_819.remoteCSE();
tmp_818 = tmp_820.is_bound();
if(tmp_818) {
switch (tmp_820.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_818 = FALSE;
break;
case ANY_VALUE:
tmp_818 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_818) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_821 = tmp_820;
const INTEGER_template& tmp_822 = tmp_821.trigger__Recipient__ID();
tmp_818 = tmp_822.is_present();
}
break;}
default:
tmp_818 = FALSE;
break;
}
}
}
break;}
default:
tmp_818 = FALSE;
break;
}
}
tmp_823 = tmp_818;
}
if (tmp_823) {
current_location.update_lineno(2353);
#line 2353 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().trigger__Recipient__ID() = ANY_VALUE;
}
}
current_location.update_lineno(2356);
#line 2356 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_830;
{
boolean tmp_825 = p__primitiveContent.is_bound();
if(tmp_825) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_825 = FALSE;
break;
case ANY_VALUE:
tmp_825 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_825) {
tmp_825 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_825) {
const OneM2M__Types::PrimitiveContent_template& tmp_826 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_827 = tmp_826.remoteCSE();
tmp_825 = tmp_827.is_bound();
if(tmp_825) {
switch (tmp_827.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_825 = FALSE;
break;
case ANY_VALUE:
tmp_825 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_825) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_828 = tmp_827;
const UNIVERSAL_CHARSTRING_template& tmp_829 = tmp_828.nodeLink();
tmp_825 = tmp_829.is_present();
}
break;}
default:
tmp_825 = FALSE;
break;
}
}
}
break;}
default:
tmp_825 = FALSE;
break;
}
}
tmp_830 = tmp_825;
}
if (tmp_830) {
current_location.update_lineno(2357);
#line 2357 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().nodeLink() = ANY_VALUE;
}
}
current_location.update_lineno(2360);
#line 2360 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_837;
{
boolean tmp_832 = p__primitiveContent.is_bound();
if(tmp_832) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_832 = FALSE;
break;
case ANY_VALUE:
tmp_832 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_832) {
tmp_832 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_832) {
const OneM2M__Types::PrimitiveContent_template& tmp_833 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_834 = tmp_833.remoteCSE();
tmp_832 = tmp_834.is_bound();
if(tmp_832) {
switch (tmp_834.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_832 = FALSE;
break;
case ANY_VALUE:
tmp_832 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_832) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_835 = tmp_834;
const INTEGER_template& tmp_836 = tmp_835.triggerReferenceNumber();
tmp_832 = tmp_836.is_present();
}
break;}
default:
tmp_832 = FALSE;
break;
}
}
}
break;}
default:
tmp_832 = FALSE;
break;
}
}
tmp_837 = tmp_832;
}
if (tmp_837) {
current_location.update_lineno(2361);
#line 2361 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().triggerReferenceNumber() = ANY_VALUE;
}
}
current_location.update_lineno(2364);
#line 2364 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
{
boolean tmp_844;
{
boolean tmp_839 = p__primitiveContent.is_bound();
if(tmp_839) {
switch (p__primitiveContent.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_839 = FALSE;
break;
case ANY_VALUE:
tmp_839 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_839) {
tmp_839 = p__primitiveContent.ischosen(OneM2M__Types::PrimitiveContent::ALT_remoteCSE);
}
if(tmp_839) {
const OneM2M__Types::PrimitiveContent_template& tmp_840 = p__primitiveContent;
const OneM2M__Types::RemoteCSE__optional_template& tmp_841 = tmp_840.remoteCSE();
tmp_839 = tmp_841.is_bound();
if(tmp_839) {
switch (tmp_841.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_839 = FALSE;
break;
case ANY_VALUE:
tmp_839 = FALSE;
break;
case SPECIFIC_VALUE: {
if(tmp_839) {
const OneM2M__Types::RemoteCSE__optional_template& tmp_842 = tmp_841;
const OneM2M__Types::E2eSecInfo_template& tmp_843 = tmp_842.e2eSecInfo();
tmp_839 = tmp_843.is_present();
}
break;}
default:
tmp_839 = FALSE;
break;
}
}
}
break;}
default:
tmp_839 = FALSE;
break;
}
}
tmp_844 = tmp_839;
}
if (tmp_844) {
current_location.update_lineno(2365);
#line 2365 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent.remoteCSE().e2eSecInfo() = ANY_VALUE;
}
}
}
}
}
}
}
}
}
}
}
current_location.update_lineno(2372);
#line 2372 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
return v__primitiveContent;
}

void f__match2PrimitiveContent(const OneM2M__Types::PrimitiveContent& p__responsePrimitiveContent, const OneM2M__Types::PrimitiveContent_template& p__requestPrimitiveContent)
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 2375, TTCN_Location::LOCATION_FUNCTION, "f_match2PrimitiveContent");
current_location.update_lineno(2376);
#line 2376 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::PrimitiveContent_template v__primitiveContent;
current_location.update_lineno(2377);
#line 2377 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
OneM2M__Types::PrimitiveContent v__response;
current_location.update_lineno(2378);
#line 2378 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__response = p__responsePrimitiveContent;
current_location.update_lineno(2379);
#line 2379 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
v__primitiveContent = f__getTemplateFromPrimitiveContent(p__requestPrimitiveContent);
current_location.update_lineno(2380);
#line 2380 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
if ((!(v__primitiveContent.match(v__response)))) {
current_location.update_lineno(2381);
#line 2381 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn"
TTCN_Runtime::setverdict(INCONC,(TTCN_Logger::begin_event_log2str(),TTCN_Logger::log_event_str("f_match2PrimitiveContent:INFO: Resource incomplete, some attribute missing "),TTCN_Logger::end_event_log2str()));
}
}

void start_f__match2PrimitiveContent(const COMPONENT& component_reference, const OneM2M__Types::PrimitiveContent& p__responsePrimitiveContent, const OneM2M__Types::PrimitiveContent_template& p__requestPrimitiveContent)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_match2PrimitiveContent(");
p__responsePrimitiveContent.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitiveContent.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "OneM2M_Functions", "f_match2PrimitiveContent", text_buf);
p__responsePrimitiveContent.encode_text(text_buf);
p__requestPrimitiveContent.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Functions");
OneM2M__Templates::module_object.pre_init_module();
OneM2M__TestSystem::module_object.pre_init_module();
OneM2M__Pics::module_object.pre_init_module();
module_object.add_function("f_cf01Up", (genericfunc_t)&f__cf01Up, (genericfunc_t)&start_f__cf01Up);
module_object.add_function("f_cf02Up", (genericfunc_t)&f__cf02Up, (genericfunc_t)&start_f__cf02Up);
module_object.add_function("f_cf03Up", (genericfunc_t)&f__cf03Up, (genericfunc_t)&start_f__cf03Up);
module_object.add_function("f_cf04Up", (genericfunc_t)&f__cf04Up, (genericfunc_t)&start_f__cf04Up);
module_object.add_function("f_cfCseTesterDown", (genericfunc_t)&f__cfCseTesterDown, (genericfunc_t)&start_f__cfCseTesterDown);
module_object.add_function("f_cfAeTesterDown", (genericfunc_t)&f__cfAeTesterDown, (genericfunc_t)&start_f__cfAeTesterDown);
module_object.add_function("f_cf01Down", (genericfunc_t)&f__cf01Down, (genericfunc_t)&start_f__cf01Down);
module_object.add_function("f_cf02Down", (genericfunc_t)&f__cf02Down, (genericfunc_t)&start_f__cf02Down);
module_object.add_function("f_cf03Down", (genericfunc_t)&f__cf03Down, (genericfunc_t)&start_f__cf03Down);
module_object.add_function("f_cf04Down", (genericfunc_t)&f__cf04Down, (genericfunc_t)&start_f__cf04Down);
module_object.add_function("f_cse_preamble_createAcpAux", (genericfunc_t)&f__cse__preamble__createAcpAux, (genericfunc_t)&start_f__cse__preamble__createAcpAux);
module_object.add_function("f_cse_preamble_registerAe", (genericfunc_t)&f__cse__preamble__registerAe, (genericfunc_t)&start_f__cse__preamble__registerAe);
module_object.add_function("f_cse_preamble_registerAeWithId", (genericfunc_t)&f__cse__preamble__registerAeWithId, (genericfunc_t)&start_f__cse__preamble__registerAeWithId);
module_object.add_function("f_cse_preamble_createServiceSubscribedAppRule", (genericfunc_t)&f__cse__preamble__createServiceSubscribedAppRule, (genericfunc_t)&start_f__cse__preamble__createServiceSubscribedAppRule);
module_object.add_function("f_cse_preamble_subscriptionVerification", (genericfunc_t)&f__cse__preamble__subscriptionVerification, NULL);
module_object.add_function("f_cse_postamble_deleteResources", (genericfunc_t)&f__cse__postamble__deleteResources, (genericfunc_t)&start_f__cse__postamble__deleteResources);
module_object.add_function("f_cse_postamble_default", (genericfunc_t)&f__cse__postamble__default, (genericfunc_t)&start_f__cse__postamble__default);
module_object.add_function("f_is_component_done", (genericfunc_t)&f__is__component__done, (genericfunc_t)&start_f__is__component__done);
module_object.add_function("f_cse_createResource", (genericfunc_t)&f__cse__createResource, (genericfunc_t)&start_f__cse__createResource);
module_object.add_function("f_cse_createAccessControlPolicyAux", (genericfunc_t)&f__cse__createAccessControlPolicyAux, (genericfunc_t)&start_f__cse__createAccessControlPolicyAux);
module_object.add_function("f_cse_createContainerResourceAux", (genericfunc_t)&f__cse__createContainerResourceAux, (genericfunc_t)&start_f__cse__createContainerResourceAux);
module_object.add_function("f_cse_updateResource", (genericfunc_t)&f__cse__updateResource, (genericfunc_t)&start_f__cse__updateResource);
module_object.add_function("f_cse_retrieveResource", (genericfunc_t)&f__cse__retrieveResource, (genericfunc_t)&start_f__cse__retrieveResource);
module_object.add_function("f_cse_deleteResource", (genericfunc_t)&f__cse__deleteResource, (genericfunc_t)&start_f__cse__deleteResource);
module_object.add_function("f_isResourcePresent", (genericfunc_t)&f__isResourcePresent, (genericfunc_t)&start_f__isResourcePresent);
module_object.add_function("f_isResourceNotPresent", (genericfunc_t)&f__isResourceNotPresent, (genericfunc_t)&start_f__isResourceNotPresent);
module_object.add_function("f_cse_updateAcpAuxResource", (genericfunc_t)&f__cse__updateAcpAuxResource, (genericfunc_t)&start_f__cse__updateAcpAuxResource);
module_object.add_function("f_cse_resourceAnnouncementHandler", (genericfunc_t)&f__cse__resourceAnnouncementHandler, (genericfunc_t)&start_f__cse__resourceAnnouncementHandler);
module_object.add_function("f_checkAttributesToBeSaved", (genericfunc_t)&f__checkAttributesToBeSaved, NULL);
module_object.add_function("f_compareURIs", (genericfunc_t)&f__compareURIs, (genericfunc_t)&start_f__compareURIs);
module_object.add_function("f_cse_notifyProcedure_subscriptionVerificationHandler", (genericfunc_t)&f__cse__notifyProcedure__subscriptionVerificationHandler, (genericfunc_t)&start_f__cse__notifyProcedure__subscriptionVerificationHandler);
module_object.add_function("f_cse_notifyProcedure_representationHandler", (genericfunc_t)&f__cse__notifyProcedure__representationHandler, (genericfunc_t)&start_f__cse__notifyProcedure__representationHandler);
module_object.add_function("f_cse_notifyProcedure_aggregatedNoficationHandler", (genericfunc_t)&f__cse__notifyProcedure__aggregatedNoficationHandler, (genericfunc_t)&start_f__cse__notifyProcedure__aggregatedNoficationHandler);
module_object.add_function("f_cse_notifyProcedure_subscriptionDeletionHandler", (genericfunc_t)&f__cse__notifyProcedure__subscriptionDeletionHandler, (genericfunc_t)&start_f__cse__notifyProcedure__subscriptionDeletionHandler);
module_object.add_function("f_cse_notifyProcedure_noNotificationHandler", (genericfunc_t)&f__cse__notifyProcedure__noNotificationHandler, (genericfunc_t)&start_f__cse__notifyProcedure__noNotificationHandler);
module_object.add_function("f_check_notificationContent", (genericfunc_t)&f__check__notificationContent, (genericfunc_t)&start_f__check__notificationContent);
module_object.add_function("f_isNonHierarchical", (genericfunc_t)&f__isNonHierarchical, (genericfunc_t)&start_f__isNonHierarchical);
module_object.add_function("f_isHierarchical", (genericfunc_t)&f__isHierarchical, (genericfunc_t)&start_f__isHierarchical);
module_object.add_function("f_isScopeCseRelative", (genericfunc_t)&f__isScopeCseRelative, (genericfunc_t)&start_f__isScopeCseRelative);
module_object.add_function("f_isScopeSpRelative", (genericfunc_t)&f__isScopeSpRelative, (genericfunc_t)&start_f__isScopeSpRelative);
module_object.add_function("f_isScopeAbsolute", (genericfunc_t)&f__isScopeAbsolute, (genericfunc_t)&start_f__isScopeAbsolute);
module_object.add_function("f_cse_registerRemoteCse", (genericfunc_t)&f__cse__registerRemoteCse, (genericfunc_t)&start_f__cse__registerRemoteCse);
module_object.add_altstep("a_cse_cf01", (genericfunc_t)&a__cse__cf01_instance, (genericfunc_t )&activate_a__cse__cf01, (genericfunc_t )&a__cse__cf01);
module_object.add_altstep("a_cse_cf02", (genericfunc_t)&a__cse__cf02_instance, (genericfunc_t )&activate_a__cse__cf02, (genericfunc_t )&a__cse__cf02);
module_object.add_altstep("a_cse_cf04", (genericfunc_t)&a__cse__cf04_instance, (genericfunc_t )&activate_a__cse__cf04, (genericfunc_t )&a__cse__cf04);
module_object.add_function("f_ae_preamble_registerAe", (genericfunc_t)&f__ae__preamble__registerAe, (genericfunc_t)&start_f__ae__preamble__registerAe);
module_object.add_function("f_ae_createResource", (genericfunc_t)&f__ae__createResource, NULL);
module_object.add_altstep("a_ae_default", (genericfunc_t)&a__ae__default_instance, (genericfunc_t )&activate_a__ae__default, (genericfunc_t )&a__ae__default);
module_object.add_altstep("a_ae_cf03", (genericfunc_t)&a__ae__cf03_instance, (genericfunc_t )&activate_a__ae__cf03, (genericfunc_t )&a__ae__cf03);
module_object.add_function("f_getCreateRequestPrimitive", (genericfunc_t)&f__getCreateRequestPrimitive, (genericfunc_t)&start_f__getCreateRequestPrimitive);
module_object.add_function("f_getCreateResponsePrimitive", (genericfunc_t)&f__getCreateResponsePrimitive, (genericfunc_t)&start_f__getCreateResponsePrimitive);
module_object.add_function("f_getUpdateRequestPrimitive", (genericfunc_t)&f__getUpdateRequestPrimitive, (genericfunc_t)&start_f__getUpdateRequestPrimitive);
module_object.add_function("f_getResourceId", (genericfunc_t)&f__getResourceId, NULL);
module_object.add_function("f_getResourceName", (genericfunc_t)&f__getResourceName, NULL);
module_object.add_function("f_getOriginator", (genericfunc_t)&f__getOriginator, (genericfunc_t)&start_f__getOriginator);
module_object.add_function("f_getCreator", (genericfunc_t)&f__getCreator, (genericfunc_t)&start_f__getCreator);
module_object.add_function("f_getAttribute", (genericfunc_t)&f__getAttribute, NULL);
module_object.add_function("f_getAnnouncementTargetPoA", (genericfunc_t)&f__getAnnouncementTargetPoA, NULL);
module_object.add_function("f_getResourceIndex", (genericfunc_t)&f__getResourceIndex, NULL);
module_object.add_function("f_getResourceAddress", (genericfunc_t)&f__getResourceAddress, (genericfunc_t)&start_f__getResourceAddress);
module_object.add_function("f_setResource", (genericfunc_t)&f__setResource, (genericfunc_t)&start_f__setResource);
module_object.add_function("f_setAcpId", (genericfunc_t)&f__setAcpId, (genericfunc_t)&start_f__setAcpId);
module_object.add_function("f_getAeId", (genericfunc_t)&f__getAeId, (genericfunc_t)&start_f__getAeId);
module_object.add_function("f_checkCseTesterStatus", (genericfunc_t)&f__checkCseTesterStatus, (genericfunc_t)&start_f__checkCseTesterStatus);
module_object.add_function("f_checkAeTesterStatus", (genericfunc_t)&f__checkAeTesterStatus, (genericfunc_t)&start_f__checkAeTesterStatus);
module_object.add_function("f_sendAcPrimitive", (genericfunc_t)&f__sendAcPrimitive, (genericfunc_t)&start_f__sendAcPrimitive);
module_object.add_altstep("a_default", (genericfunc_t)&a__default_instance, (genericfunc_t )&activate_a__default, (genericfunc_t )&a__default);
module_object.add_function("f_resourceIdCleaner", (genericfunc_t)&f__resourceIdCleaner, NULL);
module_object.add_function("f_removePoa", (genericfunc_t)&f__removePoa, NULL);
module_object.add_function("f_removeElementFromList", (genericfunc_t)&f__removeElementFromList, NULL);
module_object.add_function("f_getTemplateFromPrimitiveContent", (genericfunc_t)&f__getTemplateFromPrimitiveContent, NULL);
module_object.add_function("f_match2PrimitiveContent", (genericfunc_t)&f__match2PrimitiveContent, (genericfunc_t)&start_f__match2PrimitiveContent);
module_object.add_function("fx_generateTimestamp", (genericfunc_t)&fx__generateTimestamp, NULL);
}

static void post_init_module()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Functions");
OneM2M__Templates::module_object.post_init_module();
OneM2M__TestSystem::module_object.post_init_module();
OneM2M__Pics::module_object.post_init_module();
template_f__cse__preamble__createAcpAux_p__acpName_defval = OneM2M__TypesAndValues::c__acpAuxName;
template_f__cse__preamble__createAcpAux_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
template_f__cse__preamble__registerAe_p__accessControlPolicyIDs_defval = OMIT_VALUE;
template_f__cse__preamble__registerAe_p__poaList_defval = OMIT_VALUE;
template_f__cse__preamble__registerAeWithId_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
template_f__cse__preamble__createServiceSubscribedAppRule_p__allowedAEs_defval.set_size(1);
template_f__cse__preamble__createServiceSubscribedAppRule_p__allowedAEs_defval[0] = cs_3;
const_f__cse__preamble__subscriptionVerification_p__responseStatusCode_defval = OneM2M__Types::ResponseStatusCode::int2001;
template_f__cse__createResource_p__requestPrimitive_defval = OneM2M__Templates::m__create;
const_f__cse__createResource_p__parentIndex_defval = -1;
template_f__cse__createAccessControlPolicyAux_p__acpName_defval = OneM2M__TypesAndValues::c__acpAuxName;
template_f__cse__createAccessControlPolicyAux_p__acor_defval = OneM2M__Pixits::PX__ACOR;
template_f__cse__createAccessControlPolicyAux_p__allowedOperations_defval = OneM2M__Types::AccessControlOperations::int63;
const_f__cse__createContainerResourceAux_p__parentIndex_defval = -1;
template_f__cse__deleteResource_p__requestPrimitive_defval = OMIT_VALUE;
template_f__cse__resourceAnnouncementHandler_p__from_defval = ANY_OR_OMIT;
template_f__cse__resourceAnnouncementHandler_p__to_defval = ANY_VALUE;
const_f__cse__notifyProcedure__subscriptionVerificationHandler_p__responseStatusCode_defval = OneM2M__Types::ResponseStatusCode::int2001;
template_f__getCreateRequestPrimitive_p__request_defval = OneM2M__Templates::m__create;
template_f__getCreateResponsePrimitive_p__request_defval = OneM2M__Templates::m__create;
const_f__getOriginator_p__targetResourceIndex_defval = -1;
const_f__getOriginator_p__testSystemRole_defval = TRUE;
const_f__getCreator_p__targetResourceIndex_defval = -1;
const_f__getAnnouncementTargetPoA_p__protocolBinding_defval = OneM2M__Pixits::PX__PROTOCOL__BINDING;
const_f__getAnnouncementTargetPoA_p__announcementTargetAddress_defval = OneM2M__Pixits::PX__CSE1__ADDRESS;
const_f__getAnnouncementTargetPoA_p__announcementTargetResource_defval = cs_42;
const_f__getResourceAddress_p__targetResourceIndex_defval = -1;
const_f__setResource_p__parentIndex_defval = -1;
const_f__getAeId_p__targetResourceIndex_defval = -1;
}

static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments)
{
if (!strcmp(function_name, "f_cf01Up")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf01Up().");
TTCN_Runtime::function_started(function_arguments);
f__cf01Up();
TTCN_Runtime::function_finished("f_cf01Up");
return TRUE;
} else if (!strcmp(function_name, "f_cf02Up")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf02Up().");
TTCN_Runtime::function_started(function_arguments);
f__cf02Up();
TTCN_Runtime::function_finished("f_cf02Up");
return TRUE;
} else if (!strcmp(function_name, "f_cf03Up")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf03Up().");
TTCN_Runtime::function_started(function_arguments);
f__cf03Up();
TTCN_Runtime::function_finished("f_cf03Up");
return TRUE;
} else if (!strcmp(function_name, "f_cf04Up")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf04Up().");
TTCN_Runtime::function_started(function_arguments);
f__cf04Up();
TTCN_Runtime::function_finished("f_cf04Up");
return TRUE;
} else if (!strcmp(function_name, "f_cfCseTesterDown")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cfCseTesterDown().");
TTCN_Runtime::function_started(function_arguments);
f__cfCseTesterDown();
TTCN_Runtime::function_finished("f_cfCseTesterDown");
return TRUE;
} else if (!strcmp(function_name, "f_cfAeTesterDown")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cfAeTesterDown().");
TTCN_Runtime::function_started(function_arguments);
f__cfAeTesterDown();
TTCN_Runtime::function_finished("f_cfAeTesterDown");
return TRUE;
} else if (!strcmp(function_name, "f_cf01Down")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf01Down().");
TTCN_Runtime::function_started(function_arguments);
f__cf01Down();
TTCN_Runtime::function_finished("f_cf01Down");
return TRUE;
} else if (!strcmp(function_name, "f_cf02Down")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf02Down().");
TTCN_Runtime::function_started(function_arguments);
f__cf02Down();
TTCN_Runtime::function_finished("f_cf02Down");
return TRUE;
} else if (!strcmp(function_name, "f_cf03Down")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf03Down().");
TTCN_Runtime::function_started(function_arguments);
f__cf03Down();
TTCN_Runtime::function_finished("f_cf03Down");
return TRUE;
} else if (!strcmp(function_name, "f_cf04Down")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cf04Down().");
TTCN_Runtime::function_started(function_arguments);
f__cf04Down();
TTCN_Runtime::function_finished("f_cf04Down");
return TRUE;
} else if (!strcmp(function_name, "f_cse_preamble_createAcpAux")) {
UNIVERSAL_CHARSTRING_template p__acpName;
OneM2M__Types::AccessControlOperations_template p__allowedOperations;
p__acpName.decode_text(function_arguments);
p__allowedOperations.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_createAcpAux(");
p__acpName.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__preamble__createAcpAux(p__acpName, p__allowedOperations);
TTCN_Runtime::function_finished("f_cse_preamble_createAcpAux");
return TRUE;
} else if (!strcmp(function_name, "f_cse_preamble_registerAe")) {
OneM2M__Types::AcpType_template p__accessControlPolicyIDs;
OneM2M__Types::PoaList_template p__poaList;
p__accessControlPolicyIDs.decode_text(function_arguments);
p__poaList.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_registerAe(");
p__accessControlPolicyIDs.log();
TTCN_Logger::log_event_str(", ");
p__poaList.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__preamble__registerAe(p__accessControlPolicyIDs, p__poaList);
TTCN_Runtime::function_finished("f_cse_preamble_registerAe");
return TRUE;
} else if (!strcmp(function_name, "f_cse_preamble_registerAeWithId")) {
UNIVERSAL_CHARSTRING p__appId;
OneM2M__Types::AccessControlOperations_template p__allowedOperations;
p__appId.decode_text(function_arguments);
p__allowedOperations.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_registerAeWithId(");
p__appId.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__preamble__registerAeWithId(p__appId, p__allowedOperations);
TTCN_Runtime::function_finished("f_cse_preamble_registerAeWithId");
return TRUE;
} else if (!strcmp(function_name, "f_cse_preamble_createServiceSubscribedAppRule")) {
OneM2M__Types::ListOfM2MID_template p__allowedAEs;
p__allowedAEs.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_preamble_createServiceSubscribedAppRule(");
p__allowedAEs.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__preamble__createServiceSubscribedAppRule(p__allowedAEs);
TTCN_Runtime::function_finished("f_cse_preamble_createServiceSubscribedAppRule");
return TRUE;
} else if (!strcmp(function_name, "f_cse_postamble_deleteResources")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cse_postamble_deleteResources().");
TTCN_Runtime::function_started(function_arguments);
f__cse__postamble__deleteResources();
TTCN_Runtime::function_finished("f_cse_postamble_deleteResources");
return TRUE;
} else if (!strcmp(function_name, "f_cse_postamble_default")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cse_postamble_default().");
TTCN_Runtime::function_started(function_arguments);
f__cse__postamble__default();
TTCN_Runtime::function_finished("f_cse_postamble_default");
return TRUE;
} else if (!strcmp(function_name, "f_is_component_done")) {
COMPONENT p__notifyHandler;
p__notifyHandler.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_is_component_done(");
p__notifyHandler.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__is__component__done(p__notifyHandler);
TTCN_Runtime::function_finished("f_is_component_done");
return TRUE;
} else if (!strcmp(function_name, "f_cse_createResource")) {
OneM2M__Types::ResourceType p__resourceType;
OneM2M__Types::RequestPrimitive_template p__requestPrimitive;
INTEGER p__parentIndex;
p__resourceType.decode_text(function_arguments);
p__requestPrimitive.decode_text(function_arguments);
p__parentIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createResource(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__createResource(p__resourceType, p__requestPrimitive, p__parentIndex);
TTCN_Runtime::function_finished("f_cse_createResource");
return TRUE;
} else if (!strcmp(function_name, "f_cse_createAccessControlPolicyAux")) {
UNIVERSAL_CHARSTRING_template p__acpName;
OneM2M__Types::ListOfURIs_template p__acor;
OneM2M__Types::AccessControlOperations_template p__allowedOperations;
p__acpName.decode_text(function_arguments);
p__acor.decode_text(function_arguments);
p__allowedOperations.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createAccessControlPolicyAux(");
p__acpName.log();
TTCN_Logger::log_event_str(", ");
p__acor.log();
TTCN_Logger::log_event_str(", ");
p__allowedOperations.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__createAccessControlPolicyAux(p__acpName, p__acor, p__allowedOperations);
TTCN_Runtime::function_finished("f_cse_createAccessControlPolicyAux");
return TRUE;
} else if (!strcmp(function_name, "f_cse_createContainerResourceAux")) {
INTEGER p__parentIndex;
p__parentIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_createContainerResourceAux(");
p__parentIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__createContainerResourceAux(p__parentIndex);
TTCN_Runtime::function_finished("f_cse_createContainerResourceAux");
return TRUE;
} else if (!strcmp(function_name, "f_cse_updateResource")) {
OneM2M__Types::RequestPrimitive p__requestPrimitive;
p__requestPrimitive.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_updateResource(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__updateResource(p__requestPrimitive);
TTCN_Runtime::function_finished("f_cse_updateResource");
return TRUE;
} else if (!strcmp(function_name, "f_cse_retrieveResource")) {
INTEGER p__resourceIndex;
p__resourceIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_retrieveResource(");
p__resourceIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__retrieveResource(p__resourceIndex);
TTCN_Runtime::function_finished("f_cse_retrieveResource");
return TRUE;
} else if (!strcmp(function_name, "f_cse_deleteResource")) {
INTEGER p__index;
OneM2M__Types::RequestPrimitive_template p__requestPrimitive;
p__index.decode_text(function_arguments);
p__requestPrimitive.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_deleteResource(");
p__index.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__deleteResource(p__index, p__requestPrimitive);
TTCN_Runtime::function_finished("f_cse_deleteResource");
return TRUE;
} else if (!strcmp(function_name, "f_isResourcePresent")) {
INTEGER p__resourceIndex;
p__resourceIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isResourcePresent(");
p__resourceIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isResourcePresent(p__resourceIndex);
TTCN_Runtime::function_finished("f_isResourcePresent");
return TRUE;
} else if (!strcmp(function_name, "f_isResourceNotPresent")) {
INTEGER p__parentIndex;
UNIVERSAL_CHARSTRING p__resourceName;
p__parentIndex.decode_text(function_arguments);
p__resourceName.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isResourceNotPresent(");
p__parentIndex.log();
TTCN_Logger::log_event_str(", ");
p__resourceName.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isResourceNotPresent(p__parentIndex, p__resourceName);
TTCN_Runtime::function_finished("f_isResourceNotPresent");
return TRUE;
} else if (!strcmp(function_name, "f_cse_updateAcpAuxResource")) {
OneM2M__Types::AccessControlOperations_template p__allowedOperations;
p__allowedOperations.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_updateAcpAuxResource(");
p__allowedOperations.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__updateAcpAuxResource(p__allowedOperations);
TTCN_Runtime::function_finished("f_cse_updateAcpAuxResource");
return TRUE;
} else if (!strcmp(function_name, "f_cse_resourceAnnouncementHandler")) {
UNIVERSAL_CHARSTRING_template p__from;
UNIVERSAL_CHARSTRING_template p__to;
p__from.decode_text(function_arguments);
p__to.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_resourceAnnouncementHandler(");
p__from.log();
TTCN_Logger::log_event_str(", ");
p__to.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__resourceAnnouncementHandler(p__from, p__to);
TTCN_Runtime::function_finished("f_cse_resourceAnnouncementHandler");
return TRUE;
} else if (!strcmp(function_name, "f_compareURIs")) {
INTEGER p__expectedURIIndex;
UNIVERSAL_CHARSTRING p__receivedURI;
p__expectedURIIndex.decode_text(function_arguments);
p__receivedURI.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_compareURIs(");
p__expectedURIIndex.log();
TTCN_Logger::log_event_str(", ");
p__receivedURI.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__compareURIs(p__expectedURIIndex, p__receivedURI);
TTCN_Runtime::function_finished("f_compareURIs");
return TRUE;
} else if (!strcmp(function_name, "f_cse_notifyProcedure_subscriptionVerificationHandler")) {
INTEGER p__creatorIndex;
OneM2M__Types::ResponseStatusCode p__responseStatusCode;
p__creatorIndex.decode_text(function_arguments);
p__responseStatusCode.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_subscriptionVerificationHandler(");
p__creatorIndex.log();
TTCN_Logger::log_event_str(", ");
p__responseStatusCode.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__notifyProcedure__subscriptionVerificationHandler(p__creatorIndex, p__responseStatusCode);
TTCN_Runtime::function_finished("f_cse_notifyProcedure_subscriptionVerificationHandler");
return TRUE;
} else if (!strcmp(function_name, "f_cse_notifyProcedure_representationHandler")) {
OneM2M__Types::PrimitiveContent_template p__primitiveContent;
p__primitiveContent.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_representationHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__notifyProcedure__representationHandler(p__primitiveContent);
TTCN_Runtime::function_finished("f_cse_notifyProcedure_representationHandler");
return TRUE;
} else if (!strcmp(function_name, "f_cse_notifyProcedure_aggregatedNoficationHandler")) {
OneM2M__Types::PrimitiveContent_template p__primitiveContent;
INTEGER p__numberOfAggregatedNotification;
p__primitiveContent.decode_text(function_arguments);
p__numberOfAggregatedNotification.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_aggregatedNoficationHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(", ");
p__numberOfAggregatedNotification.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__notifyProcedure__aggregatedNoficationHandler(p__primitiveContent, p__numberOfAggregatedNotification);
TTCN_Runtime::function_finished("f_cse_notifyProcedure_aggregatedNoficationHandler");
return TRUE;
} else if (!strcmp(function_name, "f_cse_notifyProcedure_subscriptionDeletionHandler")) {
OneM2M__Types::PrimitiveContent_template p__primitiveContent;
p__primitiveContent.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_notifyProcedure_subscriptionDeletionHandler(");
p__primitiveContent.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__notifyProcedure__subscriptionDeletionHandler(p__primitiveContent);
TTCN_Runtime::function_finished("f_cse_notifyProcedure_subscriptionDeletionHandler");
return TRUE;
} else if (!strcmp(function_name, "f_cse_notifyProcedure_noNotificationHandler")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cse_notifyProcedure_noNotificationHandler().");
TTCN_Runtime::function_started(function_arguments);
f__cse__notifyProcedure__noNotificationHandler();
TTCN_Runtime::function_finished("f_cse_notifyProcedure_noNotificationHandler");
return TRUE;
} else if (!strcmp(function_name, "f_check_notificationContent")) {
OneM2M__Types::RequestPrimitive p__requestPrimitive;
OneM2M__Types::PrimitiveContent_template p__primitiveContent;
p__requestPrimitive.decode_text(function_arguments);
p__primitiveContent.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_check_notificationContent(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__primitiveContent.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__check__notificationContent(p__requestPrimitive, p__primitiveContent);
TTCN_Runtime::function_finished("f_check_notificationContent");
return TRUE;
} else if (!strcmp(function_name, "f_isNonHierarchical")) {
UNIVERSAL_CHARSTRING p__resourceAddress;
p__resourceAddress.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isNonHierarchical(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isNonHierarchical(p__resourceAddress);
TTCN_Runtime::function_finished("f_isNonHierarchical");
return TRUE;
} else if (!strcmp(function_name, "f_isHierarchical")) {
UNIVERSAL_CHARSTRING p__resourceAddress;
p__resourceAddress.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isHierarchical(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isHierarchical(p__resourceAddress);
TTCN_Runtime::function_finished("f_isHierarchical");
return TRUE;
} else if (!strcmp(function_name, "f_isScopeCseRelative")) {
UNIVERSAL_CHARSTRING p__resourceAddress;
p__resourceAddress.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeCseRelative(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isScopeCseRelative(p__resourceAddress);
TTCN_Runtime::function_finished("f_isScopeCseRelative");
return TRUE;
} else if (!strcmp(function_name, "f_isScopeSpRelative")) {
UNIVERSAL_CHARSTRING p__resourceAddress;
p__resourceAddress.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeSpRelative(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isScopeSpRelative(p__resourceAddress);
TTCN_Runtime::function_finished("f_isScopeSpRelative");
return TRUE;
} else if (!strcmp(function_name, "f_isScopeAbsolute")) {
UNIVERSAL_CHARSTRING p__resourceAddress;
p__resourceAddress.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_isScopeAbsolute(");
p__resourceAddress.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__isScopeAbsolute(p__resourceAddress);
TTCN_Runtime::function_finished("f_isScopeAbsolute");
return TRUE;
} else if (!strcmp(function_name, "f_cse_registerRemoteCse")) {
OneM2M__Types::RequestPrimitive_template p__requestPrimitive;
p__requestPrimitive.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cse_registerRemoteCse(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__cse__registerRemoteCse(p__requestPrimitive);
TTCN_Runtime::function_finished("f_cse_registerRemoteCse");
return TRUE;
} else if (!strcmp(function_name, "f_ae_preamble_registerAe")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_ae_preamble_registerAe().");
TTCN_Runtime::function_started(function_arguments);
f__ae__preamble__registerAe();
TTCN_Runtime::function_finished("f_ae_preamble_registerAe");
return TRUE;
} else if (!strcmp(function_name, "f_getCreateRequestPrimitive")) {
OneM2M__Types::ResourceType p__resourceType;
OneM2M__Types::RequestPrimitive_template p__request;
INTEGER p__parentIndex;
p__resourceType.decode_text(function_arguments);
p__request.decode_text(function_arguments);
p__parentIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreateRequestPrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getCreateRequestPrimitive(p__resourceType, p__request, p__parentIndex);
TTCN_Runtime::function_finished("f_getCreateRequestPrimitive");
return TRUE;
} else if (!strcmp(function_name, "f_getCreateResponsePrimitive")) {
OneM2M__Types::ResourceType p__resourceType;
OneM2M__Types::RequestPrimitive_template p__request;
p__resourceType.decode_text(function_arguments);
p__request.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreateResponsePrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getCreateResponsePrimitive(p__resourceType, p__request);
TTCN_Runtime::function_finished("f_getCreateResponsePrimitive");
return TRUE;
} else if (!strcmp(function_name, "f_getUpdateRequestPrimitive")) {
OneM2M__Types::ResourceType p__resourceType;
INTEGER p__resourceIndex;
OneM2M__Types::RequestPrimitive_template p__request;
p__resourceType.decode_text(function_arguments);
p__resourceIndex.decode_text(function_arguments);
p__request.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getUpdateRequestPrimitive(");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__resourceIndex.log();
TTCN_Logger::log_event_str(", ");
p__request.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getUpdateRequestPrimitive(p__resourceType, p__resourceIndex, p__request);
TTCN_Runtime::function_finished("f_getUpdateRequestPrimitive");
return TRUE;
} else if (!strcmp(function_name, "f_getOriginator")) {
INTEGER p__targetResourceIndex;
BOOLEAN p__testSystemRole;
p__targetResourceIndex.decode_text(function_arguments);
p__testSystemRole.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getOriginator(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(", ");
p__testSystemRole.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getOriginator(p__targetResourceIndex, p__testSystemRole);
TTCN_Runtime::function_finished("f_getOriginator");
return TRUE;
} else if (!strcmp(function_name, "f_getCreator")) {
INTEGER p__targetResourceIndex;
p__targetResourceIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getCreator(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getCreator(p__targetResourceIndex);
TTCN_Runtime::function_finished("f_getCreator");
return TRUE;
} else if (!strcmp(function_name, "f_getResourceAddress")) {
INTEGER p__targetResourceIndex;
p__targetResourceIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getResourceAddress(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getResourceAddress(p__targetResourceIndex);
TTCN_Runtime::function_finished("f_getResourceAddress");
return TRUE;
} else if (!strcmp(function_name, "f_setResource")) {
OneM2M__Types::PrimitiveContent p__resource;
OneM2M__Types::ResourceType p__resourceType;
INTEGER p__parentIndex;
p__resource.decode_text(function_arguments);
p__resourceType.decode_text(function_arguments);
p__parentIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_setResource(");
p__resource.log();
TTCN_Logger::log_event_str(", ");
p__resourceType.log();
TTCN_Logger::log_event_str(", ");
p__parentIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__setResource(p__resource, p__resourceType, p__parentIndex);
TTCN_Runtime::function_finished("f_setResource");
return TRUE;
} else if (!strcmp(function_name, "f_setAcpId")) {
OneM2M__Types::RequestPrimitive_template p__requestPrimitive;
OneM2M__Types::AcpType_template p__accessControlPolicyIDs;
p__requestPrimitive.decode_text(function_arguments);
p__accessControlPolicyIDs.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_setAcpId(");
p__requestPrimitive.log();
TTCN_Logger::log_event_str(", ");
p__accessControlPolicyIDs.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__setAcpId(p__requestPrimitive, p__accessControlPolicyIDs);
TTCN_Runtime::function_finished("f_setAcpId");
return TRUE;
} else if (!strcmp(function_name, "f_getAeId")) {
INTEGER p__targetResourceIndex;
p__targetResourceIndex.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_getAeId(");
p__targetResourceIndex.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__getAeId(p__targetResourceIndex);
TTCN_Runtime::function_finished("f_getAeId");
return TRUE;
} else if (!strcmp(function_name, "f_checkCseTesterStatus")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_checkCseTesterStatus().");
TTCN_Runtime::function_started(function_arguments);
f__checkCseTesterStatus();
TTCN_Runtime::function_finished("f_checkCseTesterStatus");
return TRUE;
} else if (!strcmp(function_name, "f_checkAeTesterStatus")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_checkAeTesterStatus().");
TTCN_Runtime::function_started(function_arguments);
f__checkAeTesterStatus();
TTCN_Runtime::function_finished("f_checkAeTesterStatus");
return TRUE;
} else if (!strcmp(function_name, "f_sendAcPrimitive")) {
CHARSTRING p__event;
CHARSTRING p__data;
p__event.decode_text(function_arguments);
p__data.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_sendAcPrimitive(");
p__event.log();
TTCN_Logger::log_event_str(", ");
p__data.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__sendAcPrimitive(p__event, p__data);
TTCN_Runtime::function_finished("f_sendAcPrimitive");
return TRUE;
} else if (!strcmp(function_name, "f_match2PrimitiveContent")) {
OneM2M__Types::PrimitiveContent p__responsePrimitiveContent;
OneM2M__Types::PrimitiveContent_template p__requestPrimitiveContent;
p__responsePrimitiveContent.decode_text(function_arguments);
p__requestPrimitiveContent.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_match2PrimitiveContent(");
p__responsePrimitiveContent.log();
TTCN_Logger::log_event_str(", ");
p__requestPrimitiveContent.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__match2PrimitiveContent(p__responsePrimitiveContent, p__requestPrimitiveContent);
TTCN_Runtime::function_finished("f_match2PrimitiveContent");
return TRUE;
} else return FALSE;
}


} /* end of namespace */
