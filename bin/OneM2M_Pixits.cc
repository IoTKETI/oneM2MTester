// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for jaeyounghwang (jaeyounghwang@ubuntu) on Mon Sep 18 04:04:30 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "OneM2M_Pixits.hh"

namespace OneM2M__Pixits {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean set_module_param(Module_Param& param);
static void log_module_param();

/* Literal string constants */

static const CHARSTRING cs_12(0, NULL),
cs_16('*'),
cs_9(10, "//om2m.org"),
cs_10(8, "/MyCSEId"),
cs_14(12, "/admin:admin"),
cs_0(8, "/ae_test"),
cs_8(6, "/cseId"),
cs_3(14, "127.0.0.1:3131"),
cs_4(14, "127.0.0.1:3132"),
cs_5(14, "127.0.0.1:3141"),
cs_2(14, "127.0.0.1:8080"),
cs_18(4, "HTTP"),
cs_1(4, "MyAe"),
cs_15(8, "NMyAppId"),
cs_21(8, "PT10M10S"),
cs_23(7, "VALUE_1"),
cs_17(3, "XML"),
cs_13(11, "admin:admin"),
cs_7(7, "cseName"),
cs_11(13, "cseResourceId"),
cs_6(41, "m2m=\"http://www.onem2m.org/xml/protocols\""),
cs_22(13, "myLoContainer"),
cs_20(25, "{LOCATION-SERVER-ADDRESS}"),
cs_19(20, "{LOCATION-TARGET-ID}");
static const unsigned char module_checksum[] = { 0x68, 0x85, 0x89, 0x63, 0x36, 0xed, 0x7b, 0xe8, 0xa5, 0x3e, 0xa7, 0xf5, 0x2d, 0x77, 0xc6, 0x6c };

/* Global variable definitions */

static BOOLEAN modulepar_PX__DELETE__CREATED__RESOURCES;
const BOOLEAN& PX__DELETE__CREATED__RESOURCES = modulepar_PX__DELETE__CREATED__RESOURCES;
static UNIVERSAL_CHARSTRING modulepar_PX__RESOURCE__TO__BE__DELETED;
const UNIVERSAL_CHARSTRING& PX__RESOURCE__TO__BE__DELETED = modulepar_PX__RESOURCE__TO__BE__DELETED;
static XSD::IDREFS modulepar_PX__RESOURCES__TO__BE__DELETED;
const XSD::IDREFS& PX__RESOURCES__TO__BE__DELETED = modulepar_PX__RESOURCES__TO__BE__DELETED;
static CHARSTRING modulepar_PX__SUT__ADDRESS;
const CHARSTRING& PX__SUT__ADDRESS = modulepar_PX__SUT__ADDRESS;
static CHARSTRING modulepar_PX__AE1__ADDRESS;
const CHARSTRING& PX__AE1__ADDRESS = modulepar_PX__AE1__ADDRESS;
static CHARSTRING modulepar_PX__AE2__ADDRESS;
const CHARSTRING& PX__AE2__ADDRESS = modulepar_PX__AE2__ADDRESS;
static CHARSTRING modulepar_PX__CSE1__ADDRESS;
const CHARSTRING& PX__CSE1__ADDRESS = modulepar_PX__CSE1__ADDRESS;
static CHARSTRING modulepar_PX__XML__NAMESPACE;
const CHARSTRING& PX__XML__NAMESPACE = modulepar_PX__XML__NAMESPACE;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__NAME;
const UNIVERSAL_CHARSTRING& PX__CSE__NAME = modulepar_PX__CSE__NAME;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__ID;
const UNIVERSAL_CHARSTRING& PX__CSE__ID = modulepar_PX__CSE__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__SP__ID;
const UNIVERSAL_CHARSTRING& PX__SP__ID = modulepar_PX__SP__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE1__ID;
const UNIVERSAL_CHARSTRING& PX__CSE1__ID = modulepar_PX__CSE1__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__CSE__RESOURCE__ID;
const UNIVERSAL_CHARSTRING& PX__CSE__RESOURCE__ID = modulepar_PX__CSE__RESOURCE__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__AE1__ID__STEM;
const UNIVERSAL_CHARSTRING& PX__AE1__ID__STEM = modulepar_PX__AE1__ID__STEM;
static UNIVERSAL_CHARSTRING modulepar_PX__AE2__ID__STEM;
const UNIVERSAL_CHARSTRING& PX__AE2__ID__STEM = modulepar_PX__AE2__ID__STEM;
static UNIVERSAL_CHARSTRING modulepar_PX__SUPER__AE__ID;
const UNIVERSAL_CHARSTRING& PX__SUPER__AE__ID = modulepar_PX__SUPER__AE__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__SUPER__CSE__ID;
const UNIVERSAL_CHARSTRING& PX__SUPER__CSE__ID = modulepar_PX__SUPER__CSE__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__APP__ID;
const UNIVERSAL_CHARSTRING& PX__APP__ID = modulepar_PX__APP__ID;
static BOOLEAN modulepar_PX__RUN__POSTAMBLE;
const BOOLEAN& PX__RUN__POSTAMBLE = modulepar_PX__RUN__POSTAMBLE;
static OneM2M__Types::ListOfURIs modulepar_PX__ACOR;
const OneM2M__Types::ListOfURIs& PX__ACOR = modulepar_PX__ACOR;
static OneM2M__Types::AddressingMethod modulepar_PX__ADDRESSING__METHOD;
const OneM2M__Types::AddressingMethod& PX__ADDRESSING__METHOD = modulepar_PX__ADDRESSING__METHOD;
static OneM2M__Types::PrimitiveScope modulepar_PX__PRIMITIVE__SCOPE;
const OneM2M__Types::PrimitiveScope& PX__PRIMITIVE__SCOPE = modulepar_PX__PRIMITIVE__SCOPE;
static CHARSTRING modulepar_PX__SERIALIZATION;
const CHARSTRING& PX__SERIALIZATION = modulepar_PX__SERIALIZATION;
static CHARSTRING modulepar_PX__PROTOCOL__BINDING;
const CHARSTRING& PX__PROTOCOL__BINDING = modulepar_PX__PROTOCOL__BINDING;
static BOOLEAN modulepar_PX__USE__RESOURCE__ID__AS__ORIGINATOR;
const BOOLEAN& PX__USE__RESOURCE__ID__AS__ORIGINATOR = modulepar_PX__USE__RESOURCE__ID__AS__ORIGINATOR;
static BOOLEAN modulepar_PX__IUT__IS__ASN__CSE;
const BOOLEAN& PX__IUT__IS__ASN__CSE = modulepar_PX__IUT__IS__ASN__CSE;
static BOOLEAN modulepar_PX__IUT__IS__MN__CSE;
const BOOLEAN& PX__IUT__IS__MN__CSE = modulepar_PX__IUT__IS__MN__CSE;
static UNIVERSAL_CHARSTRING modulepar_PX__LOCATION__TARGET__ID;
const UNIVERSAL_CHARSTRING& PX__LOCATION__TARGET__ID = modulepar_PX__LOCATION__TARGET__ID;
static UNIVERSAL_CHARSTRING modulepar_PX__LOCATION__SERVER__ADDRESS;
const UNIVERSAL_CHARSTRING& PX__LOCATION__SERVER__ADDRESS = modulepar_PX__LOCATION__SERVER__ADDRESS;
static CHARSTRING modulepar_PX__LOCATION__UPDATE__PERIOD;
const CHARSTRING& PX__LOCATION__UPDATE__PERIOD = modulepar_PX__LOCATION__UPDATE__PERIOD;
static CHARSTRING modulepar_PX__LOCATION__CONTAINER__NAME;
const CHARSTRING& PX__LOCATION__CONTAINER__NAME = modulepar_PX__LOCATION__CONTAINER__NAME;
static OneM2M__Types::Labels modulepar_PX__LABELS;
const OneM2M__Types::Labels& PX__LABELS = modulepar_PX__LABELS;
static BOOLEAN modulepar_PX__IS__LOC__CONTAINER;
const BOOLEAN& PX__IS__LOC__CONTAINER = modulepar_PX__IS__LOC__CONTAINER;
static OneM2M__Types::PoaList modulepar_PX__POA;
const OneM2M__Types::PoaList& PX__POA = modulepar_PX__POA;
static OneM2M__Types::ResourceTypeList__1 modulepar_PX__SRT;
const OneM2M__Types::ResourceTypeList__1& PX__SRT = modulepar_PX__SRT;
TTCN_Module module_object("OneM2M_Pixits", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, set_module_param, NULL, log_module_param, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_1,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Pixits");
OneM2M__Types::module_object.pre_init_module();
current_location.update_lineno(21);
#line 21 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__DELETE__CREATED__RESOURCES = TRUE;
current_location.update_lineno(23);
#line 23 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__RESOURCE__TO__BE__DELETED = cs_0;
current_location.update_lineno(25);
#line 25 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__RESOURCES__TO__BE__DELETED.set_size(1);
modulepar_PX__RESOURCES__TO__BE__DELETED[0] = cs_1;
current_location.update_lineno(27);
#line 27 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SUT__ADDRESS = cs_2;
current_location.update_lineno(29);
#line 29 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__AE1__ADDRESS = cs_3;
current_location.update_lineno(31);
#line 31 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__AE2__ADDRESS = cs_4;
current_location.update_lineno(33);
#line 33 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__CSE1__ADDRESS = cs_5;
current_location.update_lineno(35);
#line 35 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__XML__NAMESPACE = cs_6;
current_location.update_lineno(40);
#line 40 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__CSE__NAME = cs_7;
current_location.update_lineno(45);
#line 45 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__CSE__ID = cs_8;
current_location.update_lineno(50);
#line 50 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SP__ID = cs_9;
current_location.update_lineno(55);
#line 55 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__CSE1__ID = cs_10;
current_location.update_lineno(60);
#line 60 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__CSE__RESOURCE__ID = cs_11;
current_location.update_lineno(65);
#line 65 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__AE1__ID__STEM = cs_12;
current_location.update_lineno(70);
#line 70 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__AE2__ID__STEM = cs_12;
current_location.update_lineno(75);
#line 75 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SUPER__AE__ID = cs_13;
current_location.update_lineno(80);
#line 80 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SUPER__CSE__ID = cs_14;
current_location.update_lineno(85);
#line 85 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__APP__ID = cs_15;
current_location.update_lineno(87);
#line 87 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__RUN__POSTAMBLE = TRUE;
current_location.update_lineno(89);
#line 89 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__ACOR.set_size(1);
modulepar_PX__ACOR[0] = cs_16;
current_location.update_lineno(91);
#line 91 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__ADDRESSING__METHOD = OneM2M__Types::AddressingMethod::e__hierarchical;
current_location.update_lineno(93);
#line 93 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__PRIMITIVE__SCOPE = OneM2M__Types::PrimitiveScope::e__cseRelative;
current_location.update_lineno(95);
#line 95 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SERIALIZATION = cs_17;
current_location.update_lineno(97);
#line 97 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__PROTOCOL__BINDING = cs_18;
current_location.update_lineno(99);
#line 99 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__USE__RESOURCE__ID__AS__ORIGINATOR = TRUE;
current_location.update_lineno(103);
#line 103 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__IUT__IS__ASN__CSE = FALSE;
current_location.update_lineno(104);
#line 104 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__IUT__IS__MN__CSE = FALSE;
current_location.update_lineno(107);
#line 107 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__LOCATION__TARGET__ID = cs_19;
current_location.update_lineno(108);
#line 108 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__LOCATION__SERVER__ADDRESS = cs_20;
current_location.update_lineno(110);
#line 110 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__LOCATION__UPDATE__PERIOD = cs_21;
current_location.update_lineno(111);
#line 111 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__LOCATION__CONTAINER__NAME = cs_22;
current_location.update_lineno(113);
#line 113 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__LABELS.set_size(1);
modulepar_PX__LABELS[0] = cs_23;
current_location.update_lineno(114);
#line 114 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__IS__LOC__CONTAINER = FALSE;
current_location.update_lineno(116);
#line 116 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__POA.set_size(1);
modulepar_PX__POA[0] = cs_12;
current_location.update_lineno(117);
#line 117 "../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn"
modulepar_PX__SRT.set_size(4);
modulepar_PX__SRT[0] = OneM2M__Types::ResourceType::int1;
modulepar_PX__SRT[1] = OneM2M__Types::ResourceType::int2;
modulepar_PX__SRT[2] = OneM2M__Types::ResourceType::int3;
modulepar_PX__SRT[3] = OneM2M__Types::ResourceType::int4;
}

static void post_init_module()
{
TTCN_Location current_location("../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "OneM2M_Pixits");
OneM2M__Types::module_object.post_init_module();
}

static boolean set_module_param(Module_Param& param)
{
const char* const par_name = param.get_id()->get_current_name();
if (!strcmp(par_name, "PX_DELETE_CREATED_RESOURCES")) {
modulepar_PX__DELETE__CREATED__RESOURCES.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RESOURCE_TO_BE_DELETED")) {
modulepar_PX__RESOURCE__TO__BE__DELETED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RESOURCES_TO_BE_DELETED")) {
modulepar_PX__RESOURCES__TO__BE__DELETED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SUT_ADDRESS")) {
modulepar_PX__SUT__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE1_ADDRESS")) {
modulepar_PX__AE1__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE2_ADDRESS")) {
modulepar_PX__AE2__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE1_ADDRESS")) {
modulepar_PX__CSE1__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_XML_NAMESPACE")) {
modulepar_PX__XML__NAMESPACE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_NAME")) {
modulepar_PX__CSE__NAME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_ID")) {
modulepar_PX__CSE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SP_ID")) {
modulepar_PX__SP__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE1_ID")) {
modulepar_PX__CSE1__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_CSE_RESOURCE_ID")) {
modulepar_PX__CSE__RESOURCE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE1_ID_STEM")) {
modulepar_PX__AE1__ID__STEM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_AE2_ID_STEM")) {
modulepar_PX__AE2__ID__STEM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SUPER_AE_ID")) {
modulepar_PX__SUPER__AE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SUPER_CSE_ID")) {
modulepar_PX__SUPER__CSE__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_APP_ID")) {
modulepar_PX__APP__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_RUN_POSTAMBLE")) {
modulepar_PX__RUN__POSTAMBLE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_ACOR")) {
modulepar_PX__ACOR.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_ADDRESSING_METHOD")) {
modulepar_PX__ADDRESSING__METHOD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_PRIMITIVE_SCOPE")) {
modulepar_PX__PRIMITIVE__SCOPE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SERIALIZATION")) {
modulepar_PX__SERIALIZATION.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_PROTOCOL_BINDING")) {
modulepar_PX__PROTOCOL__BINDING.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_USE_RESOURCE_ID_AS_ORIGINATOR")) {
modulepar_PX__USE__RESOURCE__ID__AS__ORIGINATOR.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IUT_IS_ASN_CSE")) {
modulepar_PX__IUT__IS__ASN__CSE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IUT_IS_MN_CSE")) {
modulepar_PX__IUT__IS__MN__CSE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_TARGET_ID")) {
modulepar_PX__LOCATION__TARGET__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_SERVER_ADDRESS")) {
modulepar_PX__LOCATION__SERVER__ADDRESS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_UPDATE_PERIOD")) {
modulepar_PX__LOCATION__UPDATE__PERIOD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LOCATION_CONTAINER_NAME")) {
modulepar_PX__LOCATION__CONTAINER__NAME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_LABELS")) {
modulepar_PX__LABELS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_IS_LOC_CONTAINER")) {
modulepar_PX__IS__LOC__CONTAINER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_POA")) {
modulepar_PX__POA.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SRT")) {
modulepar_PX__SRT.set_param(param);
return TRUE;
} else return FALSE;
}

static void log_module_param()
{
TTCN_Logger::log_event_str("PX_DELETE_CREATED_RESOURCES := ");
PX__DELETE__CREATED__RESOURCES.log();
TTCN_Logger::log_event_str(", PX_RESOURCE_TO_BE_DELETED := ");
PX__RESOURCE__TO__BE__DELETED.log();
TTCN_Logger::log_event_str(", PX_RESOURCES_TO_BE_DELETED := ");
PX__RESOURCES__TO__BE__DELETED.log();
TTCN_Logger::log_event_str(", PX_SUT_ADDRESS := ");
PX__SUT__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_AE1_ADDRESS := ");
PX__AE1__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_AE2_ADDRESS := ");
PX__AE2__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_CSE1_ADDRESS := ");
PX__CSE1__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_XML_NAMESPACE := ");
PX__XML__NAMESPACE.log();
TTCN_Logger::log_event_str(", PX_CSE_NAME := ");
PX__CSE__NAME.log();
TTCN_Logger::log_event_str(", PX_CSE_ID := ");
PX__CSE__ID.log();
TTCN_Logger::log_event_str(", PX_SP_ID := ");
PX__SP__ID.log();
TTCN_Logger::log_event_str(", PX_CSE1_ID := ");
PX__CSE1__ID.log();
TTCN_Logger::log_event_str(", PX_CSE_RESOURCE_ID := ");
PX__CSE__RESOURCE__ID.log();
TTCN_Logger::log_event_str(", PX_AE1_ID_STEM := ");
PX__AE1__ID__STEM.log();
TTCN_Logger::log_event_str(", PX_AE2_ID_STEM := ");
PX__AE2__ID__STEM.log();
TTCN_Logger::log_event_str(", PX_SUPER_AE_ID := ");
PX__SUPER__AE__ID.log();
TTCN_Logger::log_event_str(", PX_SUPER_CSE_ID := ");
PX__SUPER__CSE__ID.log();
TTCN_Logger::log_event_str(", PX_APP_ID := ");
PX__APP__ID.log();
TTCN_Logger::log_event_str(", PX_RUN_POSTAMBLE := ");
PX__RUN__POSTAMBLE.log();
TTCN_Logger::log_event_str(", PX_ACOR := ");
PX__ACOR.log();
TTCN_Logger::log_event_str(", PX_ADDRESSING_METHOD := ");
PX__ADDRESSING__METHOD.log();
TTCN_Logger::log_event_str(", PX_PRIMITIVE_SCOPE := ");
PX__PRIMITIVE__SCOPE.log();
TTCN_Logger::log_event_str(", PX_SERIALIZATION := ");
PX__SERIALIZATION.log();
TTCN_Logger::log_event_str(", PX_PROTOCOL_BINDING := ");
PX__PROTOCOL__BINDING.log();
TTCN_Logger::log_event_str(", PX_USE_RESOURCE_ID_AS_ORIGINATOR := ");
PX__USE__RESOURCE__ID__AS__ORIGINATOR.log();
TTCN_Logger::log_event_str(", PX_IUT_IS_ASN_CSE := ");
PX__IUT__IS__ASN__CSE.log();
TTCN_Logger::log_event_str(", PX_IUT_IS_MN_CSE := ");
PX__IUT__IS__MN__CSE.log();
TTCN_Logger::log_event_str(", PX_LOCATION_TARGET_ID := ");
PX__LOCATION__TARGET__ID.log();
TTCN_Logger::log_event_str(", PX_LOCATION_SERVER_ADDRESS := ");
PX__LOCATION__SERVER__ADDRESS.log();
TTCN_Logger::log_event_str(", PX_LOCATION_UPDATE_PERIOD := ");
PX__LOCATION__UPDATE__PERIOD.log();
TTCN_Logger::log_event_str(", PX_LOCATION_CONTAINER_NAME := ");
PX__LOCATION__CONTAINER__NAME.log();
TTCN_Logger::log_event_str(", PX_LABELS := ");
PX__LABELS.log();
TTCN_Logger::log_event_str(", PX_IS_LOC_CONTAINER := ");
PX__IS__LOC__CONTAINER.log();
TTCN_Logger::log_event_str(", PX_POA := ");
PX__POA.log();
TTCN_Logger::log_event_str(", PX_SRT := ");
PX__SRT.log();
}


} /* end of namespace */
