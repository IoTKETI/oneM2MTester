# This Makefile was generated by the TITAN Designer eclipse plug-in
# of the TTCN-3 Test executor version CRL 113 200/6 R1A
# for  (jaeyounghwang@ubuntu) on Mon Sep 18 05:01:37 PDT 2017

# Copyright (c) 2000-2016 Ericsson Telecom AB

# The following make commands are available:
# - make, make all      Builds the executable test suite.
# - make archive        Archives all source files.
# - make check          Checks the semantics of TTCN-3 and ASN.1 modules.
# - make clean          Removes all generated files.
# - make port           Generates port skeletons.
# - make compile        Translates TTCN-3 and ASN.1 modules to C++.
# - make dep            Creates/updates dependency list.
# - make executable     Builds the executable test suite.
# - make library        Builds the library archive: 'oneM2MTester.a'.
# - make objects        Builds the object files without linking the executable.
# WARNING! This Makefile can be used with GNU make only.
# Other versions of make may report syntax errors in it.

#
# Do NOT touch this line...
#
.PHONY: all executable library objects check port clean dep archive

.SUFFIXES: .d

#
# Set these variables...
#

# The path of your TTCN-3 Test Executor installation:
# Uncomment this line to override the environment variable.
# TTCN3_DIR =

# Your platform: (SOLARIS, SOLARIS8, LINUX, FREEBSD or WIN32)
PLATFORM = LINUX

# Your C++ compiler:
# (if you change the platform, you may need to change the compiler)
CXX = g++

# Flags for dependency generation
CXXDEPFLAGS := -MM

# Flags for the C++ preprocessor (and makedepend as well):
CPPFLAGS = -D$(PLATFORM) -I. -I$(TTCN3_DIR)/include -I. -I../oneM2MTester/Lib/AbstractSocket -I../oneM2MTester/Lib/HashTable -I../oneM2MTester/Lib/JSONCPP -I../oneM2MTester/Lib/JSONCPP/json -I../oneM2MTester/Lib/TCCInterface -I../oneM2MTester/Lib/TinyXml -I../oneM2MTester/Ports/AdapterControlPort -I../oneM2MTester/Ports/IPL4asp -I../oneM2MTester/ProtocolModules/CoAP -I../oneM2MTester/ProtocolModules/HTTP -I../oneM2MTester/ProtocolModules/MQTT -I../oneM2MTester/src/Functions

# Flags for the C++ compiler:
CXXFLAGS = -Wall -O2 

# Flags for the linker:
LDFLAGS = 

ifeq ($(PLATFORM), WIN32)
# Silence linker warnings.
LDFLAGS += -Wl,--enable-auto-import,--enable-runtime-pseudo-reloc
endif

# Utility to create library files
AR = ar
ARFLAGS = 

# Flags for the TTCN-3 and ASN.1 compiler:
COMPILER_FLAGS = -lL

# Execution mode: (either ttcn3 or ttcn3-parallel)
TTCN3_LIB = ttcn3-parallel

# The path of your OpenSSL installation:
# If you do not have your own one, leave it unchanged.
OPENSSL_DIR = $(TTCN3_DIR)

# The path of your libxml2 installation:
# If you do not have your own one, leave it unchanged.
XMLDIR = $(TTCN3_DIR)

# Directory to store the archived source files:
ARCHIVE_DIR = backup

#
# You may change these variables. Add your files if necessary...
#

# TTCN-3 modules of this project:
TTCN3_MODULES = ../oneM2MTester/ProtocolModules/CoAP/CoAP_Types.ttcn ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_MessageLen.ttcn ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_PortType.ttcn ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_Types.ttcn ../oneM2MTester/Ports/IPL4asp/IPL4asp_Functions.ttcn ../oneM2MTester/Ports/IPL4asp/IPL4asp_PortType.ttcn ../oneM2MTester/Ports/IPL4asp/IPL4asp_Types.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_AbstractData.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_BasicTypesAndValues.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_DataStrings.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_Sync.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_TextStrings.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_Time.ttcn ../oneM2MTester/AbstractTestSuite/LibCommon/LibCommon_VerdictControl.ttcn ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_IPL4SizeFunction.ttcn ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_Types.ttcn ../oneM2MTester/src/Functions/OneM2M_Constants.ttcn ../oneM2MTester/src/TestSystemFramework/OneM2M_DualFaceMapping.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Functions.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pics.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Pixits.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Ports.ttcn ../oneM2MTester/src/Functions/OneM2M_Primitive_EncDec.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Templates.ttcn ../oneM2MTester/AbstractTestSuite/OneM2M_TestControl.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_TestSystem.ttcn ../oneM2MTester/AbstractTestSuite/OneM2M_Testcases.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_Types.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/OneM2M_TypesAndValues.ttcn ../oneM2MTester/Lib/SocketAPI/Socket_API_Definitions.ttcn ../oneM2MTester/Lib/TCCInterface/TCCInterface_Functions.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/UsefulTtcn3Types.ttcn ../oneM2MTester/AbstractTestSuite/LibOneM2M/XSD.ttcn ../oneM2MTester/src/TestSystemFramework/oneM2MTester_Functions.ttcn ../oneM2MTester/src/TestSystemFramework/oneM2MTester_Template.ttcn

# ASN.1 modules of this project:
ASN1_MODULES =

# C++ source & header files generated from the TTCN-3 & ASN.1 modules of
# this project:
GENERATED_SOURCES = CoAP_Types.cc HTTPmsg_MessageLen.cc HTTPmsg_PortType.cc HTTPmsg_Types.cc IPL4asp_Functions.cc IPL4asp_PortType.cc IPL4asp_Types.cc LibCommon_AbstractData.cc LibCommon_BasicTypesAndValues.cc LibCommon_DataStrings.cc LibCommon_Sync.cc LibCommon_TextStrings.cc LibCommon_Time.cc LibCommon_VerdictControl.cc Mqtt_v3_1_1_IPL4SizeFunction.cc Mqtt_v3_1_1_Types.cc OneM2M_Constants.cc OneM2M_DualFaceMapping.cc OneM2M_Functions.cc OneM2M_Pics.cc OneM2M_Pixits.cc OneM2M_Ports.cc OneM2M_Primitive_EncDec.cc OneM2M_Templates.cc OneM2M_TestControl.cc OneM2M_TestSystem.cc OneM2M_Testcases.cc OneM2M_Types.cc OneM2M_TypesAndValues.cc Socket_API_Definitions.cc TCCInterface_Functions.cc UsefulTtcn3Types.cc XSD.cc oneM2MTester_Functions.cc oneM2MTester_Template.cc
GENERATED_HEADERS = $(GENERATED_SOURCES:.cc=.hh)

# C/C++ Source & header files of Test Ports, external functions and
# other modules:
USER_SOURCES = ../oneM2MTester/Lib/AbstractSocket/Abstract_Socket.cc  ../oneM2MTester/Ports/AdapterControlPort/AdapterControlPort.cc  ../oneM2MTester/ProtocolModules/CoAP/CoAP_EncDec.cc  ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_MessageLen_Function.cc ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_PT.cc    ../oneM2MTester/Ports/IPL4asp/IPL4asp_PT.cc  ../oneM2MTester/Ports/IPL4asp/IPL4asp_discovery.cc   ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_EncDec.cc ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_Size.cc ../oneM2MTester/src/Functions/OneM2MTimeStampGEN.cc ../oneM2MTester/src/Functions/OneM2M_long2short_Enc.cc ../oneM2MTester/Lib/TCCInterface/TCCInterface.cc    ../oneM2MTester/Lib/JSONCPP/jsoncpp.cc ../oneM2MTester/Lib/TinyXml/tinyxml2.cc 
USER_HEADERS =  ../oneM2MTester/Lib/AbstractSocket/Abstract_Socket.hh  ../oneM2MTester/Ports/AdapterControlPort/AdapterControlPort.hh  ../oneM2MTester/src/Functions/External_function.hh   ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_PT.hh ../oneM2MTester/Lib/HashTable/HashMap.h ../oneM2MTester/Lib/HashTable/HashNode.h  ../oneM2MTester/Ports/IPL4asp/IPL4asp_PT.hh  ../oneM2MTester/Ports/IPL4asp/IPL4asp_protocol_L234.hh ../oneM2MTester/Lib/HashTable/KeyHash.h      ../oneM2MTester/Lib/TCCInterface/TCCInterface_ip.h ../oneM2MTester/Lib/JSONCPP/json/json-forwards.h ../oneM2MTester/Lib/JSONCPP/json/json.h   ../oneM2MTester/Lib/TinyXml/tinyxml2.h

# Object files of this project that are needed for the executable test suite:
OBJECTS = $(GENERATED_OBJECTS) $(USER_OBJECTS)

GENERATED_OBJECTS = $(GENERATED_SOURCES:.cc=.o)

USER_OBJECTS = Abstract_Socket.o AdapterControlPort.o CoAP_EncDec.o HTTPmsg_MessageLen_Function.o HTTPmsg_PT.o IPL4asp_PT.o IPL4asp_discovery.o Mqtt_v3_1_1_EncDec.o Mqtt_v3_1_1_Size.o OneM2MTimeStampGEN.o OneM2M_long2short_Enc.o TCCInterface.o jsoncpp.o tinyxml2.o

# Dependency files of this project that are needed for the executable test suite:
DEPFILES = $(USER_OBJECTS:.o=.d) $(GENERATED_OBJECTS:.o=.d)

# Other files of the project (Makefile, configuration files, etc.)
# that will be added to the archived source files:
OTHER_FILES = ../Dissemination/ETSI_PlugTest_Event/2nd_oneM2M_IoP/2nd_oneM2M_IoP_event_00.png ../Dissemination/ETSI_PlugTest_Event/2nd_oneM2M_IoP/2nd_oneM2M_IoP_event_01.jpg ../Dissemination/ETSI_PlugTest_Event/2nd_oneM2M_IoP/2nd_oneM2M_IoP_event_02.jpg ../Dissemination/ETSI_PlugTest_Event/2nd_oneM2M_IoP/2nd_oneM2M_IoP_event_03.jpg ../Dissemination/ETSI_PlugTest_Event/3rd_oneM2M_IoP/3rd_oneM2M_IoP_event_00.png ../Dissemination/ETSI_PlugTest_Event/3rd_oneM2M_IoP/3rd_oneM2M_IoP_event_01.jpg ../Dissemination/ETSI_PlugTest_Event/3rd_oneM2M_IoP/3rd_oneM2M_IoP_event_02.jpg ../Dissemination/ETSI_PlugTest_Event/4th_oneM2M_IoP/4th_oneM2M_IoP_event_00.png ../doc/Partnership/DTC_logo.jpg ../doc/Partnership/EGM_logo.png ../doc/Partnership/ETSI_logo.png ../doc/Partnership/Ericsson_logo.png ../doc/Partnership/Huawei_logo.png ../doc/Partnership/Innowireless_logo.png ../doc/Eclipse_TITAN_Documentation/Installation_Guide_for_the_TITAN_TTCN-3_Test_Executor_2016.pdf ../doc/Partnership/InterDigital_logo.jpg ../doc/Partnership/KETI_logo.png ../doc/Partnership/LAAS-CNRS_logo.jpg ../LICENSE Makefile ../doc/Eclipse_TITAN_Documentation/Programmer_Technical_Reference_Guide_for_the_TITAN_TTCN-3_Toolset_2016.pdf ../EclipseTitanCore/README.md ../README.md ../doc/Partnership/SejongUniv_logo.png ../doc/Partnership/Sensinov.png ../doc/Partnership/TTA_logo.png ../doc/TTCN3_Standards/TTCN-3_Core_Language_v4_9_1.pdf ../doc/TTCN3_Standards/TTCN-3_Extension_Configuration_and_Deployment_Support_V1_4_1.pdf ../Dissemination/UCAAT_2016/UCAAT_TESTING_ONEM2M_IMPLEMENTATIONS_Ericsson_and_KETI.pdf ../doc/Eclipse_TITAN_Documentation/User_Guide_for_TITAN_TTCN-3_Test_Executor_2016.pdf ../doc/Eclipse_TITAN_Documentation/User_Guide_of_the_TITAN_Executor_for_the_Eclipse_IDE_plug-in_2016.pdf ../oneM2MTester/Lib/ResourceMappingTable/long-2-short-mapping.txt ../oneM2MTester/oneM2MTester.tpd ../logs/oneM2MTester.ubuntu-hc.log ../logs/oneM2MTester.ubuntu-hc_merged.log ../logs/oneM2MTester.ubuntu-mtc.log ../oneM2MTester/Configs/oneM2MTesterConfig.cfg ../doc/Architecture/oneM2MTester_Port_with_translation_capability.png ../doc/oneM2MTester_User_Manual/oneM2MTester_User_Guide_ver1_0_0.pdf ../Dissemination/UCAAT_2016/oneM2MTester_dissemination.wmv ../doc/Logo/oneM2MTester_icon.png ../doc/Logo/oneM2MTester_logo.png ../doc/Architecture/onem2mtester-architecture_00.png ../doc/Partnership/open_source_stamp_icon.png ../oneM2MTester/Lib/ResourceMappingTable/short-2-long-mapping.txt ../EclipseTitanCore/titan.core.tar.gz

# The name of the executable test suite:
EXECUTABLE = oneM2MTester
LIBRARY = oneM2MTester.a

TARGET = $(EXECUTABLE)

#
# Do not modify these unless you know what you are doing...
# Platform specific additional libraries:
#
SOLARIS_LIBS = -lsocket -lnsl -lxml2  -lresolv
SOLARIS8_LIBS = -lsocket -lnsl -lxml2  -lresolv
LINUX_LIBS = -lxml2  -lpthread -lrt
FREEBSD_LIBS = -lxml2 
WIN32_LIBS = -lxml2 

#
# Rules for building the executable...
#

all: $(TARGET) ;

executable: $(EXECUTABLE) ;

library: $(LIBRARY) ;

objects: $(OBJECTS) compile;

$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LDFLAGS) -o $@ $^ \
	-L$(TTCN3_DIR)/lib -L$(OPENSSL_DIR)/lib -L$(XMLDIR)/lib \
	-l$(TTCN3_LIB) -lcrypto \
	$($(PLATFORM)_LIBS) \
	|| if [ -f $(TTCN3_DIR)/bin/titanver ]; then $(TTCN3_DIR)/bin/titanver $^; else : ; fi

$(LIBRARY): $(OBJECTS)
	$(AR) -r $(ARFLAGS) $(LIBRARY) $(OBJECTS)

Abstract_Socket.o :  ../oneM2MTester/Lib/AbstractSocket/Abstract_Socket.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

AdapterControlPort.o :  ../oneM2MTester/Ports/AdapterControlPort/AdapterControlPort.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

CoAP_EncDec.o :  ../oneM2MTester/ProtocolModules/CoAP/CoAP_EncDec.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

HTTPmsg_MessageLen_Function.o :  ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_MessageLen_Function.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

HTTPmsg_PT.o :  ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_PT.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

IPL4asp_PT.o :  ../oneM2MTester/Ports/IPL4asp/IPL4asp_PT.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

IPL4asp_discovery.o :  ../oneM2MTester/Ports/IPL4asp/IPL4asp_discovery.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

Mqtt_v3_1_1_EncDec.o :  ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_EncDec.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

Mqtt_v3_1_1_Size.o :  ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_Size.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

OneM2MTimeStampGEN.o :  ../oneM2MTester/src/Functions/OneM2MTimeStampGEN.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

OneM2M_long2short_Enc.o :  ../oneM2MTester/src/Functions/OneM2M_long2short_Enc.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

TCCInterface.o :  ../oneM2MTester/Lib/TCCInterface/TCCInterface.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

jsoncpp.o :  ../oneM2MTester/Lib/JSONCPP/jsoncpp.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

tinyxml2.o :  ../oneM2MTester/Lib/TinyXml/tinyxml2.cc
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

.cc.o .c.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

Abstract_Socket.d :  ../oneM2MTester/Lib/AbstractSocket/Abstract_Socket.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

AdapterControlPort.d :  ../oneM2MTester/Ports/AdapterControlPort/AdapterControlPort.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

CoAP_EncDec.d :  ../oneM2MTester/ProtocolModules/CoAP/CoAP_EncDec.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

HTTPmsg_MessageLen_Function.d :  ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_MessageLen_Function.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

HTTPmsg_PT.d :  ../oneM2MTester/ProtocolModules/HTTP/HTTPmsg_PT.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

IPL4asp_PT.d :  ../oneM2MTester/Ports/IPL4asp/IPL4asp_PT.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

IPL4asp_discovery.d :  ../oneM2MTester/Ports/IPL4asp/IPL4asp_discovery.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

Mqtt_v3_1_1_EncDec.d :  ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_EncDec.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

Mqtt_v3_1_1_Size.d :  ../oneM2MTester/ProtocolModules/MQTT/Mqtt_v3_1_1_Size.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

OneM2MTimeStampGEN.d :  ../oneM2MTester/src/Functions/OneM2MTimeStampGEN.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

OneM2M_long2short_Enc.d :  ../oneM2MTester/src/Functions/OneM2M_long2short_Enc.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

TCCInterface.d :  ../oneM2MTester/Lib/TCCInterface/TCCInterface.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

jsoncpp.d :  ../oneM2MTester/Lib/JSONCPP/jsoncpp.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

tinyxml2.d :  ../oneM2MTester/Lib/TinyXml/tinyxml2.cc
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

.cc.d .c.d:
	@echo Creating dependency file for '$<'; set -e; \
	$(CXX) $(CXXDEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

$(GENERATED_SOURCES) $(GENERATED_HEADERS): compile
	@if [ ! -f $@ ]; then $(RM) compile; $(MAKE) compile; fi

check: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -s $(COMPILER_FLAGS) $^

port: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -t $(COMPILER_FLAGS) $^

compile: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler $(COMPILER_FLAGS) $^ - $?
	touch $@

browserdata.dat: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -B -s $(COMPILER_FLAGS) $^

clean:
	-$(RM) $(EXECUTABLE) $(OBJECTS) $(LIBRARY) $(GENERATED_HEADERS) $(DEPFILES) \
	$(GENERATED_SOURCES) compile \
	browserdata.dat tags *.log $(DEPFILES)

dep: $(GENERATED_SOURCES) $(USER_SOURCES) $(DEPFILES) ;

ifeq ($(filter clean check port compile archive,$(MAKECMDGOALS)),)
-include $(DEPFILES)
endif



archive:
	mkdir -p $(ARCHIVE_DIR)
	tar -cvhf - $(TTCN3_MODULES) $(ASN1_MODULES) \
	$(USER_HEADERS) $(USER_SOURCES) $(OTHER_FILES) \
	| gzip >$(ARCHIVE_DIR)/`basename $(TARGET) .exe`-`date '+%y%m%d-%H%M'`.tgz

diag:
	$(TTCN3_DIR)/bin/compiler -v 2>&1
	$(TTCN3_DIR)/bin/mctr_cli -v 2>&1
	$(CXX) -v 2>&1
	$(AR) -V 2>&1
	@echo TTCN3_DIR=$(TTCN3_DIR)
	@echo OPENSSL_DIR=$(OPENSSL_DIR)
	@echo XMLDIR=$(XMLDIR)
	@echo PLATFORM=$(PLATFORM)

#
# Add your rules here if necessary...
#

